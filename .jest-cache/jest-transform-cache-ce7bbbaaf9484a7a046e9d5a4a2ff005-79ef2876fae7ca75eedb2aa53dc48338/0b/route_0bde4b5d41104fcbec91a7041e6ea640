9cfe6cca957369166063a80a5a3617c5
/* istanbul ignore next */
function cov_1u26j4dld3() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/running-plans/route.ts";
  var hash = "baa5eafbb378f4c9e6497e0874375fae6767b285";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/running-plans/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 92
        }
      },
      "2": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 9,
          column: 67
        }
      },
      "3": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "4": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 11
        }
      },
      "6": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "8": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "9": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 50
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "12": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "13": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "14": {
        start: {
          line: 39,
          column: 74
        },
        end: {
          line: 39,
          column: 78
        }
      },
      "15": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "16": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "17": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "19": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 80
        }
      },
      "20": {
        start: {
          line: 52,
          column: 18
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "21": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "22": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "23": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 44
        }
      },
      "24": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "25": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 59,
          column: 8
        }
      },
      "26": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "27": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "28": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "29": {
        start: {
          line: 65,
          column: 14
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "30": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "31": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "32": {
        start: {
          line: 69,
          column: 11
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "33": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "34": {
        start: {
          line: 71,
          column: 11
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "35": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "36": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "37": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "38": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "39": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 57
        }
      },
      "40": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 94,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "parseDateUTC",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 21
          }
        },
        loc: {
          start: {
            line: 5,
            column: 49
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "addDays",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 49
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "addWeeks",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 17
          }
        },
        loc: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 18
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 25
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 49
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 18
          },
          end: {
            line: 9,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 43
          }
        }, {
          start: {
            line: 9,
            column: 46
          },
          end: {
            line: 9,
            column: 65
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 40
          },
          end: {
            line: 30,
            column: 53
          }
        }, {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 30,
            column: 78
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 11
          }
        }, {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 30
          }
        }, {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 46,
            column: 60
          }
        }, {
          start: {
            line: 46,
            column: 64
          },
          end: {
            line: 46,
            column: 68
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 67
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 30
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 28
          },
          end: {
            line: 64,
            column: 51
          }
        }, {
          start: {
            line: 64,
            column: 54
          },
          end: {
            line: 64,
            column: 63
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 65,
            column: 14
          },
          end: {
            line: 65,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 45
          }
        }, {
          start: {
            line: 65,
            column: 48
          },
          end: {
            line: 65,
            column: 57
          }
        }],
        line: 65
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 69,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 21
          }
        }],
        line: 67
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 71,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 18
          }
        }, {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 28
          }
        }],
        line: 69
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 71,
            column: 22
          }
        }, {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 37
          }
        }, {
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 48
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 14
          },
          end: {
            line: 81,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 14
          },
          end: {
            line: 81,
            column: 18
          }
        }, {
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 81,
            column: 33
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 34
          }
        }, {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 52
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 43
          }
        }, {
          start: {
            line: 84,
            column: 47
          },
          end: {
            line: 84,
            column: 52
          }
        }],
        line: 84
      },
      "20": {
        loc: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 40
          },
          end: {
            line: 92,
            column: 53
          }
        }, {
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 77
          }
        }],
        line: 92
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "baa5eafbb378f4c9e6497e0874375fae6767b285"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u26j4dld3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u26j4dld3();
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
import { defaultPlanName, getDistanceLabel } from "@utils/running/planName";
function parseDateUTC(date) {
  /* istanbul ignore next */
  cov_1u26j4dld3().f[0]++;
  cov_1u26j4dld3().s[0]++;
  if (date instanceof Date) {
    /* istanbul ignore next */
    cov_1u26j4dld3().b[0][0]++;
    cov_1u26j4dld3().s[1]++;
    return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));
  } else
  /* istanbul ignore next */
  {
    cov_1u26j4dld3().b[0][1]++;
  }
  cov_1u26j4dld3().s[2]++;
  return new Date(date.includes("T") ?
  /* istanbul ignore next */
  (cov_1u26j4dld3().b[1][0]++, date) :
  /* istanbul ignore next */
  (cov_1u26j4dld3().b[1][1]++, `${date}T00:00:00Z`));
}
function addDays(date, days) {
  /* istanbul ignore next */
  cov_1u26j4dld3().f[1]++;
  const d =
  /* istanbul ignore next */
  (cov_1u26j4dld3().s[3]++, parseDateUTC(date));
  /* istanbul ignore next */
  cov_1u26j4dld3().s[4]++;
  d.setUTCDate(d.getUTCDate() + days);
  /* istanbul ignore next */
  cov_1u26j4dld3().s[5]++;
  return d;
}
function addWeeks(date, weeks) {
  /* istanbul ignore next */
  cov_1u26j4dld3().f[2]++;
  cov_1u26j4dld3().s[6]++;
  return addDays(date, weeks * 7);
}
export async function GET() {
  /* istanbul ignore next */
  cov_1u26j4dld3().f[3]++;
  cov_1u26j4dld3().s[7]++;
  try {
    const plans =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[8]++, await prisma.runningPlan.findMany());
    /* istanbul ignore next */
    cov_1u26j4dld3().s[9]++;
    return NextResponse.json(plans, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1u26j4dld3().s[10]++;
    console.error("Error fetching plans:", error);
    /* istanbul ignore next */
    cov_1u26j4dld3().s[11]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[2][1]++, "Error fetching plans")
    }, {
      status: 500
    });
  }
}
export async function POST(request) {
  /* istanbul ignore next */
  cov_1u26j4dld3().f[4]++;
  cov_1u26j4dld3().s[12]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[13]++, await request.json());
    const {
      userId,
      weeks,
      planData,
      name,
      startDate,
      endDate,
      active
    } =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[14]++, body);
    /* istanbul ignore next */
    cov_1u26j4dld3().s[15]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1u26j4dld3().b[3][0]++;
      cov_1u26j4dld3().s[16]++;
      return NextResponse.json({
        error: "User ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u26j4dld3().b[3][1]++;
    }
    const derivedWeeks =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[17]++,
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[4][0]++, weeks) ??
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[4][1]++, planData?.weeks) ??
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[4][2]++, planData?.schedule?.length) ??
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[4][3]++, null));
    /* istanbul ignore next */
    cov_1u26j4dld3().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[6][0]++, derivedWeeks === null) ||
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[6][1]++, Number.isNaN(Number(derivedWeeks)))) {
      /* istanbul ignore next */
      cov_1u26j4dld3().b[5][0]++;
      cov_1u26j4dld3().s[19]++;
      return NextResponse.json({
        error: "Weeks is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u26j4dld3().b[5][1]++;
    }
    const count =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[20]++, await prisma.runningPlan.count({
      where: {
        userId
      }
    }));
    let defaultName =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[21]++, `Training Plan ${count + 1}`);
    /* istanbul ignore next */
    cov_1u26j4dld3().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[8][0]++, !name) &&
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[8][1]++, body.raceType)) {
      /* istanbul ignore next */
      cov_1u26j4dld3().b[7][0]++;
      const race =
      /* istanbul ignore next */
      (cov_1u26j4dld3().s[23]++, body.raceType);
      const label =
      /* istanbul ignore next */
      (cov_1u26j4dld3().s[24]++, getDistanceLabel(race));
      const raceCount =
      /* istanbul ignore next */
      (cov_1u26j4dld3().s[25]++, await prisma.runningPlan.count({
        where: {
          userId,
          name: {
            startsWith: label
          }
        }
      }));
      /* istanbul ignore next */
      cov_1u26j4dld3().s[26]++;
      defaultName = defaultPlanName(race, raceCount + 1);
    } else
    /* istanbul ignore next */
    {
      cov_1u26j4dld3().b[7][1]++;
    }
    const isFirstPlan =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[27]++, count === 0);
    let start =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[28]++, startDate ?
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[9][0]++, parseDateUTC(startDate)) :
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[9][1]++, undefined));
    let end =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[29]++, endDate ?
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[10][0]++, parseDateUTC(endDate)) :
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[10][1]++, undefined));
    /* istanbul ignore next */
    cov_1u26j4dld3().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[12][0]++, start) &&
    /* istanbul ignore next */
    (cov_1u26j4dld3().b[12][1]++, !end)) {
      /* istanbul ignore next */
      cov_1u26j4dld3().b[11][0]++;
      cov_1u26j4dld3().s[31]++;
      end = addWeeks(start, Number(derivedWeeks) - 1);
    } else {
      /* istanbul ignore next */
      cov_1u26j4dld3().b[11][1]++;
      cov_1u26j4dld3().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[14][0]++, end) &&
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[14][1]++, !start)) {
        /* istanbul ignore next */
        cov_1u26j4dld3().b[13][0]++;
        cov_1u26j4dld3().s[33]++;
        start = addWeeks(end, -(Number(derivedWeeks) - 1));
      } else {
        /* istanbul ignore next */
        cov_1u26j4dld3().b[13][1]++;
        cov_1u26j4dld3().s[34]++;
        if ((
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[16][0]++, active) ||
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[16][1]++, isFirstPlan)) &&
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[16][2]++, !start)) {
          /* istanbul ignore next */
          cov_1u26j4dld3().b[15][0]++;
          cov_1u26j4dld3().s[35]++;
          start = parseDateUTC(new Date());
          /* istanbul ignore next */
          cov_1u26j4dld3().s[36]++;
          end = addWeeks(start, Number(derivedWeeks) - 1);
        } else
        /* istanbul ignore next */
        {
          cov_1u26j4dld3().b[15][1]++;
        }
      }
    }
    const newPlan =
    /* istanbul ignore next */
    (cov_1u26j4dld3().s[37]++, await prisma.runningPlan.create({
      data: {
        user: {
          connect: {
            id: userId
          }
        },
        weeks: Number(derivedWeeks),
        planData,
        name:
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[17][0]++, name) ||
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[17][1]++, defaultName),
        startDate: start,
        endDate: end,
        active: isFirstPlan ?
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[18][0]++, true) :
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[18][1]++,
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[19][0]++, active) ??
        /* istanbul ignore next */
        (cov_1u26j4dld3().b[19][1]++, false))
      }
    }));
    /* istanbul ignore next */
    cov_1u26j4dld3().s[38]++;
    return NextResponse.json(newPlan, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1u26j4dld3().s[39]++;
    console.error("Error creating running plan:", error);
    /* istanbul ignore next */
    cov_1u26j4dld3().s[40]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1u26j4dld3().b[20][1]++, "Error creating plan")
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,