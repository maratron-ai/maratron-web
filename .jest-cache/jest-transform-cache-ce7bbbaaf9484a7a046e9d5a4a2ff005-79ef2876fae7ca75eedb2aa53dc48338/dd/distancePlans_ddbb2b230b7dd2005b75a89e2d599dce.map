{"version":3,"names":["_longDistancePlan","require","_shortDistancePlan","_customizeRuns","toDistance","unit","milesVal","kmVal","generate5kPlan","options","weeks","distanceUnit","trainingLevel","vdot","dist","plan","generateShortDistancePlan","targetPace","targetTotalTime","runsPerWeek","customizePlanRuns","crossTrainingDays","generate10kPlan","generateHalfMarathonPlan","startingWeeklyMileage","generateLongDistancePlan","runTypeDays","generateClassicMarathonPlan"],"sources":["distancePlans.ts"],"sourcesContent":["import { generateLongDistancePlan, Unit, TrainingLevel } from \"./longDistancePlan\";\nimport { generateShortDistancePlan } from \"./shortDistancePlan\";\nimport { customizePlanRuns } from \"./customizeRuns\";\nimport type { RunningPlanData, PlannedRun } from \"@maratypes/runningPlan\";\nimport type { DayOfWeek } from \"@maratypes/basics\";\n\nexport interface DistancePlanOptions {\n  weeks?: number;\n  distanceUnit: Unit;\n  trainingLevel: TrainingLevel;\n  vdot: number;\n  startingWeeklyMileage?: number;\n  targetPace?: string;\n  targetTotalTime?: string;\n  runTypeDays?: Partial<Record<PlannedRun[\"type\"], DayOfWeek>>;\n  runsPerWeek?: number;\n  crossTrainingDays?: number;\n}\n\nfunction toDistance(unit: Unit, milesVal: number, kmVal: number): number {\n  return unit === \"kilometers\" ? kmVal : milesVal;\n}\n\nexport function generate5kPlan(options: DistancePlanOptions): RunningPlanData {\n  const { weeks = 8, distanceUnit, trainingLevel, vdot } = options;\n  const dist = toDistance(distanceUnit, 3.1, 5);\n  const plan = generateShortDistancePlan(\n    weeks,\n    dist,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    options.targetPace,\n    options.targetTotalTime,\n  );\n  return options.runsPerWeek\n    ? customizePlanRuns(plan, {\n        runsPerWeek: options.runsPerWeek,\n        crossTrainingDays: options.crossTrainingDays,\n      })\n    : plan;\n}\n\nexport function generate10kPlan(options: DistancePlanOptions): RunningPlanData {\n  const { weeks = 10, distanceUnit, trainingLevel, vdot } = options;\n  const dist = toDistance(distanceUnit, 6.2, 10);\n  const plan = generateShortDistancePlan(\n    weeks,\n    dist,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    options.targetPace,\n    options.targetTotalTime,\n  );\n  return options.runsPerWeek\n    ? customizePlanRuns(plan, {\n        runsPerWeek: options.runsPerWeek,\n        crossTrainingDays: options.crossTrainingDays,\n      })\n    : plan;\n}\n\nexport function generateHalfMarathonPlan(options: DistancePlanOptions): RunningPlanData {\n  const {\n    weeks = 12,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    startingWeeklyMileage,\n    targetPace,\n    targetTotalTime,\n  } = options;\n  const dist = toDistance(distanceUnit, 13.1, 21.1);\n  const plan = generateLongDistancePlan(\n    weeks,\n    dist,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    startingWeeklyMileage ?? 0,\n    targetPace,\n    targetTotalTime,\n    options.runTypeDays,\n  );\n  return options.runsPerWeek\n    ? customizePlanRuns(plan, {\n        runsPerWeek: options.runsPerWeek,\n        crossTrainingDays: options.crossTrainingDays,\n      })\n    : plan;\n}\n\nexport function generateClassicMarathonPlan(options: DistancePlanOptions): RunningPlanData {\n  const {\n    weeks = 16,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    startingWeeklyMileage,\n    targetPace,\n    targetTotalTime,\n  } = options;\n  const dist = toDistance(distanceUnit, 26.2, 42.2);\n  const plan = generateLongDistancePlan(\n    weeks,\n    dist,\n    distanceUnit,\n    trainingLevel,\n    vdot,\n    startingWeeklyMileage ?? 0,\n    targetPace,\n    targetTotalTime,\n    options.runTypeDays,\n  );\n  return options.runsPerWeek\n    ? customizePlanRuns(plan, {\n        runsPerWeek: options.runsPerWeek,\n        crossTrainingDays: options.crossTrainingDays,\n      })\n    : plan;\n}\n\nexport { generateLongDistancePlan as generateMarathonBasePlan } from \"./longDistancePlan\";\n"],"mappings":"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","ignoreList":[]}