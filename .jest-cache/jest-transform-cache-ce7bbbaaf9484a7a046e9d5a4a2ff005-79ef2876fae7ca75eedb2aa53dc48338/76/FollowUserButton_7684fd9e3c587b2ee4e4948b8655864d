accbe4b9ef897219629be95b41337a06
"use strict";
"use client";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FollowUserButton;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("next-auth/react");
var _useSocialProfile = require("@hooks/useSocialProfile");
var _social = require("@lib/api/social");
var _ui = require("@components/ui");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/social/FollowUserButton.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
function FollowUserButton({
  profileId
}) {
  const {
    data: session
  } = (0, _react2.useSession)();
  const {
    profile
  } = (0, _useSocialProfile.useSocialProfile)();
  const {
    0: following,
    1: setFollowing
  } = (0, _react.useState)(false);
  const {
    0: loading,
    1: setLoading
  } = (0, _react.useState)(true);
  const {
    0: processing,
    1: setProcessing
  } = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    const check = async () => {
      if (profile) {
        try {
          const res = await (0, _social.isFollowing)(profile.id, profileId);
          setFollowing(res);
        } catch {
          setFollowing(false);
        }
      }
      setLoading(false);
    };
    check();
  }, [profile, profileId]);
  if (!session?.user || !profile || profile.id === profileId || loading) return null;
  const onToggle = async () => {
    setProcessing(true);
    try {
      if (following) {
        await (0, _social.unfollowUser)(profile.id, profileId);
        setFollowing(false);
      } else {
        await (0, _social.followUser)(profile.id, profileId);
        setFollowing(true);
      }
    } catch (err) {
      console.error(err);
    } finally {
      setProcessing(false);
    }
  };
  return __jsx(_ui.Button, {
    onClick: onToggle,
    size: "sm",
    disabled: processing,
    className: "block w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 5
    }
  }, following ? "Unfollow" : "Follow");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJGb2xsb3dVc2VyQnV0dG9uIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX3JlYWN0MiIsIl91c2VTb2NpYWxQcm9maWxlIiwiX3NvY2lhbCIsIl91aSIsIl9qc3hGaWxlTmFtZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fanN4IiwiY3JlYXRlRWxlbWVudCIsInByb2ZpbGVJZCIsImRhdGEiLCJzZXNzaW9uIiwidXNlU2Vzc2lvbiIsInByb2ZpbGUiLCJ1c2VTb2NpYWxQcm9maWxlIiwiZm9sbG93aW5nIiwic2V0Rm9sbG93aW5nIiwidXNlU3RhdGUiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsInByb2Nlc3NpbmciLCJzZXRQcm9jZXNzaW5nIiwidXNlRWZmZWN0IiwiY2hlY2siLCJyZXMiLCJpc0ZvbGxvd2luZyIsImlkIiwidXNlciIsIm9uVG9nZ2xlIiwidW5mb2xsb3dVc2VyIiwiZm9sbG93VXNlciIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsIkJ1dHRvbiIsIm9uQ2xpY2siLCJzaXplIiwiZGlzYWJsZWQiLCJjbGFzc05hbWUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciJdLCJzb3VyY2VzIjpbIkZvbGxvd1VzZXJCdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlU2Vzc2lvbiB9IGZyb20gXCJuZXh0LWF1dGgvcmVhY3RcIjtcbmltcG9ydCB7IHVzZVNvY2lhbFByb2ZpbGUgfSBmcm9tIFwiQGhvb2tzL3VzZVNvY2lhbFByb2ZpbGVcIjtcbmltcG9ydCB7IGZvbGxvd1VzZXIsIHVuZm9sbG93VXNlciwgaXNGb2xsb3dpbmcgfSBmcm9tIFwiQGxpYi9hcGkvc29jaWFsXCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQGNvbXBvbmVudHMvdWlcIjtcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcHJvZmlsZUlkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZvbGxvd1VzZXJCdXR0b24oeyBwcm9maWxlSWQgfTogUHJvcHMpIHtcbiAgY29uc3QgeyBkYXRhOiBzZXNzaW9uIH0gPSB1c2VTZXNzaW9uKCk7XG4gIGNvbnN0IHsgcHJvZmlsZSB9ID0gdXNlU29jaWFsUHJvZmlsZSgpO1xuICBjb25zdCBbZm9sbG93aW5nLCBzZXRGb2xsb3dpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3Byb2Nlc3NpbmcsIHNldFByb2Nlc3NpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2hlY2sgPSBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAocHJvZmlsZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGlzRm9sbG93aW5nKHByb2ZpbGUuaWQsIHByb2ZpbGVJZCk7XG4gICAgICAgICAgc2V0Rm9sbG93aW5nKHJlcyk7XG4gICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgIHNldEZvbGxvd2luZyhmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH07XG4gICAgY2hlY2soKTtcbiAgfSwgW3Byb2ZpbGUsIHByb2ZpbGVJZF0pO1xuXG4gIGlmICghc2Vzc2lvbj8udXNlciB8fCAhcHJvZmlsZSB8fCBwcm9maWxlLmlkID09PSBwcm9maWxlSWQgfHwgbG9hZGluZykgcmV0dXJuIG51bGw7XG5cbiAgY29uc3Qgb25Ub2dnbGUgPSBhc3luYyAoKSA9PiB7XG4gICAgc2V0UHJvY2Vzc2luZyh0cnVlKTtcbiAgICB0cnkge1xuICAgICAgaWYgKGZvbGxvd2luZykge1xuICAgICAgICBhd2FpdCB1bmZvbGxvd1VzZXIocHJvZmlsZS5pZCwgcHJvZmlsZUlkKTtcbiAgICAgICAgc2V0Rm9sbG93aW5nKGZhbHNlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF3YWl0IGZvbGxvd1VzZXIocHJvZmlsZS5pZCwgcHJvZmlsZUlkKTtcbiAgICAgICAgc2V0Rm9sbG93aW5nKHRydWUpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRQcm9jZXNzaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBvbkNsaWNrPXtvblRvZ2dsZX1cbiAgICAgIHNpemU9XCJzbVwiXG4gICAgICBkaXNhYmxlZD17cHJvY2Vzc2luZ31cbiAgICAgIGNsYXNzTmFtZT1cImJsb2NrIHctYXV0byB0ZXh0LWZvcmVncm91bmQgYmctdHJhbnNwYXJlbnQgbm8tdW5kZXJsaW5lIHRyYW5zaXRpb24tY29sb3JzIGhvdmVyOnRleHQtYmFja2dyb3VuZCBob3Zlcjpuby11bmRlcmxpbmUgaG92ZXI6YmctYnJhbmQtZnJvbVwiXG4gICAgPlxuICAgICAge2ZvbGxvd2luZyA/IFwiVW5mb2xsb3dcIiA6IFwiRm9sbG93XCJ9XG4gICAgPC9CdXR0b24+XG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxZQUFZOztBQUFDQSxNQUFBLENBQUFDLGNBQUEsQ0FBQUMsT0FBQTtFQUFBQyxLQUFBO0FBQUE7QUFBQUQsT0FBQSxDQUFBRSxPQUFB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