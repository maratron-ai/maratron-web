689a58f3e6c22bad319381b8297e2b80
// src/components/PaceCalculator.tsx
"use client";

/* istanbul ignore next */
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/training/PaceCalculator.tsx";
var __jsx = React.createElement;
function cov_2evo7wv3xw() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/training/PaceCalculator.tsx";
  var hash = "0197545f12473c01e2eabc5d916cc2b3c07a2fe8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/training/PaceCalculator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "2": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "3": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 70
        }
      },
      "4": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "5": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "6": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "8": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 70
        }
      },
      "9": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "10": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "12": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 76,
          column: 4
        }
      },
      "13": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "14": {
        start: {
          line: 51,
          column: 62
        },
        end: {
          line: 51,
          column: 89
        }
      },
      "15": {
        start: {
          line: 66,
          column: 14
        },
        end: {
          line: 70,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 34
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 32
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 19
          }
        },
        loc: {
          start: {
            line: 43,
            column: 10
          },
          end: {
            line: 43,
            column: 37
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 51,
            column: 19
          }
        },
        loc: {
          start: {
            line: 51,
            column: 62
          },
          end: {
            line: 51,
            column: 89
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 14
          },
          end: {
            line: 70,
            column: 19
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 25,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 26
          }
        }, {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 23,
            column: 23
          }
        }, {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 24
          }
        }, {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 25,
            column: 21
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 7
          },
          end: {
            line: 74,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 7
          },
          end: {
            line: 61,
            column: 29
          }
        }, {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 73,
            column: 14
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0197545f12473c01e2eabc5d916cc2b3c07a2fe8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2evo7wv3xw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2evo7wv3xw();
import React, { useState } from "react";
import { calculateRacePaces } from "@lib/utils/running/calculateRacePaces";
import { Input } from "@components/ui/input";
import { Button } from "@components/ui/button";
/* istanbul ignore next */
cov_2evo7wv3xw().s[0]++;
const PaceCalculator = () => {
  /* istanbul ignore next */
  cov_2evo7wv3xw().f[0]++;
  const [raceTime, setRaceTime] =
  /* istanbul ignore next */
  (cov_2evo7wv3xw().s[1]++, useState("")); // Known race time in minutes
  const [distance, setDistance] =
  /* istanbul ignore next */
  (cov_2evo7wv3xw().s[2]++, useState("")); // Known race distance in kilometers
  const [predictions, setPredictions] =
  /* istanbul ignore next */
  (cov_2evo7wv3xw().s[3]++, useState([]));
  /* istanbul ignore next */
  cov_2evo7wv3xw().s[4]++;
  const handleCalculate = () => {
    /* istanbul ignore next */
    cov_2evo7wv3xw().f[1]++;
    const timeInMinutes =
    /* istanbul ignore next */
    (cov_2evo7wv3xw().s[5]++, parseFloat(raceTime));
    const distanceKm =
    /* istanbul ignore next */
    (cov_2evo7wv3xw().s[6]++, parseFloat(distance));
    /* istanbul ignore next */
    cov_2evo7wv3xw().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_2evo7wv3xw().b[1][0]++, isNaN(timeInMinutes)) ||
    /* istanbul ignore next */
    (cov_2evo7wv3xw().b[1][1]++, isNaN(distanceKm)) ||
    /* istanbul ignore next */
    (cov_2evo7wv3xw().b[1][2]++, timeInMinutes <= 0) ||
    /* istanbul ignore next */
    (cov_2evo7wv3xw().b[1][3]++, distanceKm <= 0)) {
      /* istanbul ignore next */
      cov_2evo7wv3xw().b[0][0]++;
      cov_2evo7wv3xw().s[8]++;
      alert("Please enter valid numbers for race time and distance.");
      /* istanbul ignore next */
      cov_2evo7wv3xw().s[9]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2evo7wv3xw().b[0][1]++;
    }
    const preds =
    /* istanbul ignore next */
    (cov_2evo7wv3xw().s[10]++, calculateRacePaces(timeInMinutes, distanceKm));
    /* istanbul ignore next */
    cov_2evo7wv3xw().s[11]++;
    setPredictions(preds);
  };
  /* istanbul ignore next */
  cov_2evo7wv3xw().s[12]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 5
    }
  },
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "h2",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 7
    }
  }, "Race Pace Calculator"),
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "label",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 7
    }
  }, "Known Race Time (minutes):"),
  /* istanbul ignore next */
  __jsx(Input,
  /* istanbul ignore next */
  {
    type: "number",
    value: raceTime,
    onChange: e => {
      /* istanbul ignore next */
      cov_2evo7wv3xw().f[2]++;
      cov_2evo7wv3xw().s[13]++;
      return setRaceTime(e.target.value);
    },
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 7
    }
  }),
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "label",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 7
    }
  }, "Known Race Distance (km):"),
  /* istanbul ignore next */
  __jsx(Input,
  /* istanbul ignore next */
  {
    type: "number",
    value: distance,
    onChange: e => {
      /* istanbul ignore next */
      cov_2evo7wv3xw().f[3]++;
      cov_2evo7wv3xw().s[14]++;
      return setDistance(e.target.value);
    },
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }
  }),
  /* istanbul ignore next */
  __jsx(Button,
  /* istanbul ignore next */
  {
    onClick: handleCalculate,
    className: "block w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 7
    }
  }, "Calculate Predictions"),
  /* istanbul ignore next */
  (cov_2evo7wv3xw().b[2][0]++, predictions.length > 0) &&
  /* istanbul ignore next */
  (cov_2evo7wv3xw().b[2][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 9
    }
  },
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "h3",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 11
    }
  }, "Race Predictions"),
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "ul",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 11
    }
  }, predictions.map((pred, index) => {
    /* istanbul ignore next */
    cov_2evo7wv3xw().f[4]++;
    cov_2evo7wv3xw().s[15]++;
    return /* istanbul ignore next */__jsx(
    /* istanbul ignore next */
    "li",
    /* istanbul ignore next */
    {
      key: index,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 66,
        columnNumber: 15
      }
    },
    /* istanbul ignore next */
    __jsx(
    /* istanbul ignore next */
    "strong",
    /* istanbul ignore next */
    {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67,
        columnNumber: 17
      }
    }, pred.target, ":"), " Predicted Time:", " ", pred.predictedTime, ", Pace per Km: ", pred.pacePerKm, ", Pace per Mile: ", pred.pacePerMile);
  })))));
};
export default PaceCalculator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,