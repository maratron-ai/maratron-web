8f640915f093031d2b2f792b6a2a1e1d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Progress = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var ProgressPrimitive = _interopRequireWildcard(require("@radix-ui/react-progress"));
var _cn = require("@lib/utils/cn");
const _excluded = ["className", "value"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/progress.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = React.createElement;
const Progress = exports.Progress = /*#__PURE__*/React.forwardRef((_ref, ref) => {
  let {
      className,
      value = 0
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return __jsx(ProgressPrimitive.Root, (0, _extends2.default)({
    ref: ref,
    value: value,
    className: (0, _cn.cn)("relative h-2 w-full overflow-hidden rounded-full bg-muted", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13,
      columnNumber: 3
    }
  }), __jsx(ProgressPrimitive.Indicator, {
    className: "h-full flex-1 bg-gradient-to-r from-[var(--brand-blue)] to-[var(--brand-to)] transition-all",
    style: {
      transform: `translateX(-${100 - value}%)`
    },
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 5
    }
  }));
});
Progress.displayName = ProgressPrimitive.Root.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIlByb2dyZXNzUHJpbWl0aXZlIiwiX2NuIiwiX2V4Y2x1ZGVkIiwiX2pzeEZpbGVOYW1lIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX19qc3giLCJjcmVhdGVFbGVtZW50IiwiUHJvZ3Jlc3MiLCJleHBvcnRzIiwiZm9yd2FyZFJlZiIsIl9yZWYiLCJyZWYiLCJjbGFzc05hbWUiLCJ2YWx1ZSIsInByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIlJvb3QiLCJfZXh0ZW5kczIiLCJjbiIsIl9fc2VsZiIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwiSW5kaWNhdG9yIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbInByb2dyZXNzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFByb2dyZXNzUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcHJvZ3Jlc3NcIjtcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkBsaWIvdXRpbHMvY25cIjtcblxuaW50ZXJmYWNlIFByb2dyZXNzUHJvcHMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByb2dyZXNzUHJpbWl0aXZlLlJvb3Q+IHtcbiAgdmFsdWU/OiBudW1iZXI7XG59XG5cbmNvbnN0IFByb2dyZXNzID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgUHJvZ3Jlc3NQcmltaXRpdmUuUm9vdD4sXG4gIFByb2dyZXNzUHJvcHNcbj4oKHsgY2xhc3NOYW1lLCB2YWx1ZSA9IDAsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8UHJvZ3Jlc3NQcmltaXRpdmUuUm9vdFxuICAgIHJlZj17cmVmfVxuICAgIHZhbHVlPXt2YWx1ZX1cbiAgICBjbGFzc05hbWU9e2NuKFwicmVsYXRpdmUgaC0yIHctZnVsbCBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1mdWxsIGJnLW11dGVkXCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPFByb2dyZXNzUHJpbWl0aXZlLkluZGljYXRvclxuICAgICAgY2xhc3NOYW1lPVwiaC1mdWxsIGZsZXgtMSBiZy1ncmFkaWVudC10by1yIGZyb20tW3ZhcigtLWJyYW5kLWJsdWUpXSB0by1bdmFyKC0tYnJhbmQtdG8pXSB0cmFuc2l0aW9uLWFsbFwiXG4gICAgICBzdHlsZT17eyB0cmFuc2Zvcm06IGB0cmFuc2xhdGVYKC0kezEwMCAtIHZhbHVlfSUpYCB9fVxuICAgIC8+XG4gIDwvUHJvZ3Jlc3NQcmltaXRpdmUuUm9vdD5cbikpO1xuUHJvZ3Jlc3MuZGlzcGxheU5hbWUgPSBQcm9ncmVzc1ByaW1pdGl2ZS5Sb290LmRpc3BsYXlOYW1lO1xuXG5leHBvcnQgeyBQcm9ncmVzcyB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBRix1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsR0FBQSxHQUFBRixPQUFBO0FBQW1DLE1BQUFHLFNBQUE7QUFBQSxJQUFBQyxZQUFBO0FBQUEsU0FBQUwsd0JBQUFNLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFSLHVCQUFBLFlBQUFBLENBQUFNLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsZ0JBQUFQLENBQUEsSUFBQUQsQ0FBQSxnQkFBQUMsQ0FBQSxPQUFBYSxjQUFBLENBQUFDLElBQUEsQ0FBQWYsQ0FBQSxFQUFBQyxDQUFBLE9BQUFNLENBQUEsSUFBQUQsQ0FBQSxHQUFBVSxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbEIsQ0FBQSxFQUFBQyxDQUFBLE9BQUFNLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFQLENBQUEsRUFBQU0sQ0FBQSxJQUFBQyxDQUFBLENBQUFQLENBQUEsSUFBQUQsQ0FBQSxDQUFBQyxDQUFBLFdBQUFPLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBQUEsSUFBQWtCLEtBQUEsR0FBQTFCLEtBQUEsQ0FBQTJCLGFBQUE7QUFNbkMsTUFBTUMsUUFBUSxHQUFBQyxPQUFBLENBQUFELFFBQUEsZ0JBQUc1QixLQUFLLENBQUM4QixVQUFVLENBRy9CLENBQUFDLElBQUEsRUFBcUNDLEdBQUc7RUFBQSxJQUF2QztNQUFFQyxTQUFTO01BQUVDLEtBQUssR0FBRztJQUFZLENBQUMsR0FBQUgsSUFBQTtJQUFQSSxLQUFLLE9BQUFDLHlCQUFBLENBQUFuQixPQUFBLEVBQUFjLElBQUEsRUFBQTFCLFNBQUE7RUFBQSxPQUNqQ3FCLEtBQUEsQ0FBQ3ZCLGlCQUFpQixDQUFDa0MsSUFBSSxNQUFBQyxTQUFBLENBQUFyQixPQUFBO0lBQ3JCZSxHQUFHLEVBQUVBLEdBQUk7SUFDVEUsS0FBSyxFQUFFQSxLQUFNO0lBQ2JELFNBQVMsRUFBRSxJQUFBTSxNQUFFLEVBQUMsMkRBQTJELEVBQUVOLFNBQVM7RUFBRSxHQUNsRkUsS0FBSztJQUFBSyxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBcEMsWUFBQTtNQUFBcUMsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxJQUVUbEIsS0FBQSxDQUFDdkIsaUJBQWlCLENBQUMwQyxTQUFTO0lBQzFCWixTQUFTLEVBQUMsNkZBQTZGO0lBQ3ZHYSxLQUFLLEVBQUU7TUFBRUMsU0FBUyxFQUFFLGVBQWUsR0FBRyxHQUFHYixLQUFLO0lBQUssQ0FBRTtJQUFBTSxNQUFBO0lBQUFDLFFBQUE7TUFBQUMsUUFBQSxFQUFBcEMsWUFBQTtNQUFBcUMsVUFBQTtNQUFBQyxZQUFBO0lBQUE7RUFBQSxDQUN0RCxDQUNxQixDQUFDO0FBQUEsQ0FDMUIsQ0FBQztBQUNGaEIsUUFBUSxDQUFDb0IsV0FBVyxHQUFHN0MsaUJBQWlCLENBQUNrQyxJQUFJLENBQUNXLFdBQVciLCJpZ25vcmVMaXN0IjpbXX0=