{"version":3,"names":["_axios","_interopRequireDefault","require","mapRun","dto","id","date","Date","duration","distance","distanceUnit","trainingEnvironment","name","pace","paceUnit","unit","undefined","elevationGain","elevationGainUnit","notes","userId","shoeId","createRun","data","axios","post","exports","updateRun","runId","put","getRun","get","deleteRun","delete","listRuns","map"],"sources":["index.ts"],"sourcesContent":["// src/lib/api/run/index.ts\nimport axios from \"axios\";\nimport { \n  Run, \n} from \"@maratypes/run\";\nimport {\n  DistanceUnit,\n  ElevationUnit,\n  TrainingEnvironment,\n} from \"@maratypes/basics\";\n\ninterface RawRunDto {\n  id?: string;\n  date: string;                  // ISO string\n  duration: string;\n  distance: number;\n  distanceUnit: DistanceUnit;\n  trainingEnvironment?: TrainingEnvironment;\n  name?: string;\n  pace?: string;                 // e.g. \"07:30\"\n  paceUnit?: DistanceUnit;      \n  elevationGain?: number;\n  elevationGainUnit?: ElevationUnit;\n  notes?: string;\n  userId: string;\n  shoeId?: string;\n}\n\nconst mapRun = (dto: RawRunDto): Run => ({\n  id: dto.id,\n  date: new Date(dto.date),\n  duration: dto.duration,\n  distance: dto.distance,\n  distanceUnit: dto.distanceUnit,\n  trainingEnvironment: dto.trainingEnvironment,\n  name: dto.name,\n  pace:\n    dto.pace && dto.paceUnit\n      ? { pace: dto.pace, unit: dto.paceUnit }\n      : undefined,\n  elevationGain: dto.elevationGain,\n  elevationGainUnit: dto.elevationGainUnit,\n  notes: dto.notes,\n  userId: dto.userId,\n  shoeId: dto.shoeId,\n});\n\n\nexport const createRun = async (\n  data: Partial<RawRunDto>\n): Promise<Run> => {\n  const { data: dto } = await axios.post<RawRunDto>(\"/api/runs\", data);\n  return mapRun(dto);\n};\n\nexport const updateRun = async (\n  runId: string,\n  data: Partial<RawRunDto>\n): Promise<Run> => {\n  const { data: dto } = await axios.put<RawRunDto>(\n    `/api/runs/${runId}`,\n    data\n  );\n  return mapRun(dto);\n};\n\nexport const getRun = async (runId: string): Promise<Run> => {\n  const { data: dto } = await axios.get<RawRunDto>(\n    `/api/runs/${runId}`\n  );\n  return mapRun(dto);\n};\n\nexport const deleteRun = async (runId: string): Promise<void> => {\n  await axios.delete(`/api/runs/${runId}`);\n};\n\nexport const listRuns = async (userId: string): Promise<Run[]> => {\n  const { data } = await axios.get<RawRunDto[]>(`/api/runs?userId=${userId}`);\n  return data.map(mapRun);\n};\n"],"mappings":";;;;;;;AACA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AADA;;AA4BA,MAAMC,MAAM,GAAIC,GAAc,KAAW;EACvCC,EAAE,EAAED,GAAG,CAACC,EAAE;EACVC,IAAI,EAAE,IAAIC,IAAI,CAACH,GAAG,CAACE,IAAI,CAAC;EACxBE,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;EACtBC,QAAQ,EAAEL,GAAG,CAACK,QAAQ;EACtBC,YAAY,EAAEN,GAAG,CAACM,YAAY;EAC9BC,mBAAmB,EAAEP,GAAG,CAACO,mBAAmB;EAC5CC,IAAI,EAAER,GAAG,CAACQ,IAAI;EACdC,IAAI,EACFT,GAAG,CAACS,IAAI,IAAIT,GAAG,CAACU,QAAQ,GACpB;IAAED,IAAI,EAAET,GAAG,CAACS,IAAI;IAAEE,IAAI,EAAEX,GAAG,CAACU;EAAS,CAAC,GACtCE,SAAS;EACfC,aAAa,EAAEb,GAAG,CAACa,aAAa;EAChCC,iBAAiB,EAAEd,GAAG,CAACc,iBAAiB;EACxCC,KAAK,EAAEf,GAAG,CAACe,KAAK;EAChBC,MAAM,EAAEhB,GAAG,CAACgB,MAAM;EAClBC,MAAM,EAAEjB,GAAG,CAACiB;AACd,CAAC,CAAC;AAGK,MAAMC,SAAS,GAAG,MACvBC,IAAwB,IACP;EACjB,MAAM;IAAEA,IAAI,EAAEnB;EAAI,CAAC,GAAG,MAAMoB,cAAK,CAACC,IAAI,CAAY,WAAW,EAAEF,IAAI,CAAC;EACpE,OAAOpB,MAAM,CAACC,GAAG,CAAC;AACpB,CAAC;AAACsB,OAAA,CAAAJ,SAAA,GAAAA,SAAA;AAEK,MAAMK,SAAS,GAAG,MAAAA,CACvBC,KAAa,EACbL,IAAwB,KACP;EACjB,MAAM;IAAEA,IAAI,EAAEnB;EAAI,CAAC,GAAG,MAAMoB,cAAK,CAACK,GAAG,CACnC,aAAaD,KAAK,EAAE,EACpBL,IACF,CAAC;EACD,OAAOpB,MAAM,CAACC,GAAG,CAAC;AACpB,CAAC;AAACsB,OAAA,CAAAC,SAAA,GAAAA,SAAA;AAEK,MAAMG,MAAM,GAAG,MAAOF,KAAa,IAAmB;EAC3D,MAAM;IAAEL,IAAI,EAAEnB;EAAI,CAAC,GAAG,MAAMoB,cAAK,CAACO,GAAG,CACnC,aAAaH,KAAK,EACpB,CAAC;EACD,OAAOzB,MAAM,CAACC,GAAG,CAAC;AACpB,CAAC;AAACsB,OAAA,CAAAI,MAAA,GAAAA,MAAA;AAEK,MAAME,SAAS,GAAG,MAAOJ,KAAa,IAAoB;EAC/D,MAAMJ,cAAK,CAACS,MAAM,CAAC,aAAaL,KAAK,EAAE,CAAC;AAC1C,CAAC;AAACF,OAAA,CAAAM,SAAA,GAAAA,SAAA;AAEK,MAAME,QAAQ,GAAG,MAAOd,MAAc,IAAqB;EAChE,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMC,cAAK,CAACO,GAAG,CAAc,oBAAoBX,MAAM,EAAE,CAAC;EAC3E,OAAOG,IAAI,CAACY,GAAG,CAAChC,MAAM,CAAC;AACzB,CAAC;AAACuB,OAAA,CAAAQ,QAAA,GAAAA,QAAA","ignoreList":[]}