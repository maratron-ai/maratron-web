{"version":3,"names":["_axios","_interopRequireDefault","require","cov_1sxoxnu39l","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","createRunningPlan","data","response","axios","post","exports","updateRunningPlan","id","put","getRunningPlan","get","deleteRunningPlan","delete","listRunningPlans"],"sources":["index.ts"],"sourcesContent":["import axios from \"axios\";\nimport { RunningPlan } from \"@maratypes/runningPlan\";\n\nexport const createRunningPlan = async (data: Partial<RunningPlan>) => {\n  const response = await axios.post(`/api/running-plans`, data);\n  return response.data;\n};\n\nexport const updateRunningPlan = async (id: string, data: Partial<RunningPlan>) => {\n  const response = await axios.put(`/api/running-plans/${id}`, data);\n  return response.data;\n};\n\nexport const getRunningPlan = async (id: string) => {\n  const response = await axios.get(`/api/running-plans/${id}`);\n  return response.data;\n};\n\nexport const deleteRunningPlan = async (id: string) => {\n  const response = await axios.delete(`/api/running-plans/${id}`);\n  return response.data;\n};\n\nexport const listRunningPlans = async () => {\n  const response = await axios.get(`/api/running-plans`);\n  return response.data;\n};\n"],"mappings":";;;;;;;;AAAA;AAAA;AAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0B;AAAA,SAAAC,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,eAAA;IAAAlB,IAAA;EAAA;EAAA,IAAAmB,QAAA,GAAAlB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAgB,QAAA,CAAApB,IAAA,KAAAoB,QAAA,CAAApB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAmB,QAAA,CAAApB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAgB,cAAA,GAAAD,QAAA,CAAApB,IAAA;EAAA;IAed;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAsB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAtB,cAAA;AAAAA,cAAA,GAAAiB,CAAA;AAZL,MAAMM,iBAAiB,GAAG,MAAOC,IAA0B,IAAK;EAAA;EAAAxB,cAAA,GAAAkB,CAAA;EACrE,MAAMO,QAAQ;EAAA;EAAA,CAAAzB,cAAA,GAAAiB,CAAA,OAAG;EAAMS;EAAAA;EAAAA;EAAAA,OAAK,CAACC,IAAI,CAAC,oBAAoB,EAAEH,IAAI,CAAC;EAAC;EAAAxB,cAAA,GAAAiB,CAAA;EAC9D,OAAOQ,QAAQ,CAACD,IAAI;AACtB,CAAC;AAAC;AAAAI,OAAA,CAAAL,iBAAA,GAAAA,iBAAA;AAAAvB,cAAA,GAAAiB,CAAA;AAEK,MAAMY,iBAAiB,GAAG,MAAAA,CAAOC,EAAU,EAAEN,IAA0B,KAAK;EAAA;EAAAxB,cAAA,GAAAkB,CAAA;EACjF,MAAMO,QAAQ;EAAA;EAAA,CAAAzB,cAAA,GAAAiB,CAAA,OAAG;EAAMS;EAAAA;EAAAA;EAAAA,OAAK,CAACK,GAAG,CAAC,sBAAsBD,EAAE,EAAE,EAAEN,IAAI,CAAC;EAAC;EAAAxB,cAAA,GAAAiB,CAAA;EACnE,OAAOQ,QAAQ,CAACD,IAAI;AACtB,CAAC;AAAC;AAAAI,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAAA7B,cAAA,GAAAiB,CAAA;AAEK,MAAMe,cAAc,GAAG,MAAOF,EAAU,IAAK;EAAA;EAAA9B,cAAA,GAAAkB,CAAA;EAClD,MAAMO,QAAQ;EAAA;EAAA,CAAAzB,cAAA,GAAAiB,CAAA,OAAG;EAAMS;EAAAA;EAAAA;EAAAA,OAAK,CAACO,GAAG,CAAC,sBAAsBH,EAAE,EAAE,CAAC;EAAC;EAAA9B,cAAA,GAAAiB,CAAA;EAC7D,OAAOQ,QAAQ,CAACD,IAAI;AACtB,CAAC;AAAC;AAAAI,OAAA,CAAAI,cAAA,GAAAA,cAAA;AAAAhC,cAAA,GAAAiB,CAAA;AAEK,MAAMiB,iBAAiB,GAAG,MAAOJ,EAAU,IAAK;EAAA;EAAA9B,cAAA,GAAAkB,CAAA;EACrD,MAAMO,QAAQ;EAAA;EAAA,CAAAzB,cAAA,GAAAiB,CAAA,QAAG;EAAMS;EAAAA;EAAAA;EAAAA,OAAK,CAACS,MAAM,CAAC,sBAAsBL,EAAE,EAAE,CAAC;EAAC;EAAA9B,cAAA,GAAAiB,CAAA;EAChE,OAAOQ,QAAQ,CAACD,IAAI;AACtB,CAAC;AAAC;AAAAI,OAAA,CAAAM,iBAAA,GAAAA,iBAAA;AAAAlC,cAAA,GAAAiB,CAAA;AAEK,MAAMmB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAAA;EAAApC,cAAA,GAAAkB,CAAA;EAC1C,MAAMO,QAAQ;EAAA;EAAA,CAAAzB,cAAA,GAAAiB,CAAA,QAAG;EAAMS;EAAAA;EAAAA;EAAAA,OAAK,CAACO,GAAG,CAAC,oBAAoB,CAAC;EAAC;EAAAjC,cAAA,GAAAiB,CAAA;EACvD,OAAOQ,QAAQ,CAACD,IAAI;AACtB,CAAC;AAAC;AAAAI,OAAA,CAAAQ,gBAAA,GAAAA,gBAAA","ignoreList":[]}