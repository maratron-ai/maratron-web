a672200d82bbc3c7fbe34ac2e9b4c0d4
/* istanbul ignore next */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateRunningPlan = exports.listRunningPlans = exports.getRunningPlan = exports.deleteRunningPlan = exports.createRunningPlan = void 0;
var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));
/* istanbul ignore next */
function cov_1sxoxnu39l() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/lib/api/plan/index.ts";
  var hash = "0b46fa94f67ce01eabd4a338a55e2d403506b0f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/lib/api/plan/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 33
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 63
        }
      },
      "2": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 6,
          column: 23
        }
      },
      "3": {
        start: {
          line: 9,
          column: 33
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "4": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "5": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "6": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "7": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "8": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "9": {
        start: {
          line: 19,
          column: 33
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "10": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "11": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "12": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "13": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "14": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 4,
            column: 34
          }
        },
        loc: {
          start: {
            line: 4,
            column: 71
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 33
          },
          end: {
            line: 9,
            column: 34
          }
        },
        loc: {
          start: {
            line: 9,
            column: 83
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 14,
            column: 31
          }
        },
        loc: {
          start: {
            line: 14,
            column: 52
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 19,
            column: 34
          }
        },
        loc: {
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b46fa94f67ce01eabd4a338a55e2d403506b0f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sxoxnu39l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sxoxnu39l();
cov_1sxoxnu39l().s[0]++;
const createRunningPlan = async data => {
  /* istanbul ignore next */
  cov_1sxoxnu39l().f[0]++;
  const response =
  /* istanbul ignore next */
  (cov_1sxoxnu39l().s[1]++, await
  /* istanbul ignore next */
  _axios.
  /* istanbul ignore next */
  default.post(`/api/running-plans`, data));
  /* istanbul ignore next */
  cov_1sxoxnu39l().s[2]++;
  return response.data;
};
/* istanbul ignore next */
exports.createRunningPlan = createRunningPlan;
cov_1sxoxnu39l().s[3]++;
const updateRunningPlan = async (id, data) => {
  /* istanbul ignore next */
  cov_1sxoxnu39l().f[1]++;
  const response =
  /* istanbul ignore next */
  (cov_1sxoxnu39l().s[4]++, await
  /* istanbul ignore next */
  _axios.
  /* istanbul ignore next */
  default.put(`/api/running-plans/${id}`, data));
  /* istanbul ignore next */
  cov_1sxoxnu39l().s[5]++;
  return response.data;
};
/* istanbul ignore next */
exports.updateRunningPlan = updateRunningPlan;
cov_1sxoxnu39l().s[6]++;
const getRunningPlan = async id => {
  /* istanbul ignore next */
  cov_1sxoxnu39l().f[2]++;
  const response =
  /* istanbul ignore next */
  (cov_1sxoxnu39l().s[7]++, await
  /* istanbul ignore next */
  _axios.
  /* istanbul ignore next */
  default.get(`/api/running-plans/${id}`));
  /* istanbul ignore next */
  cov_1sxoxnu39l().s[8]++;
  return response.data;
};
/* istanbul ignore next */
exports.getRunningPlan = getRunningPlan;
cov_1sxoxnu39l().s[9]++;
const deleteRunningPlan = async id => {
  /* istanbul ignore next */
  cov_1sxoxnu39l().f[3]++;
  const response =
  /* istanbul ignore next */
  (cov_1sxoxnu39l().s[10]++, await
  /* istanbul ignore next */
  _axios.
  /* istanbul ignore next */
  default.delete(`/api/running-plans/${id}`));
  /* istanbul ignore next */
  cov_1sxoxnu39l().s[11]++;
  return response.data;
};
/* istanbul ignore next */
exports.deleteRunningPlan = deleteRunningPlan;
cov_1sxoxnu39l().s[12]++;
const listRunningPlans = async () => {
  /* istanbul ignore next */
  cov_1sxoxnu39l().f[4]++;
  const response =
  /* istanbul ignore next */
  (cov_1sxoxnu39l().s[13]++, await
  /* istanbul ignore next */
  _axios.
  /* istanbul ignore next */
  default.get(`/api/running-plans`));
  /* istanbul ignore next */
  cov_1sxoxnu39l().s[14]++;
  return response.data;
};
/* istanbul ignore next */
exports.listRunningPlans = listRunningPlans;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,