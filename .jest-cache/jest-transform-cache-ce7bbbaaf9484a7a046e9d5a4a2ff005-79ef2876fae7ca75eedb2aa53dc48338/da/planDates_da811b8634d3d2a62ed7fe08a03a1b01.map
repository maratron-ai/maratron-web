{"version":3,"names":["parseDateUTC","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","includes","startOfDayUTC","d","setUTCHours","addDays","days","setUTCDate","addWeeks","weeks","startOfWeekSunday","diff","getUTCDay","nextSunday","from","base","dayIndexMap","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","dayIndex","day","assignDatesToPlan","plan","opts","startDate","endDate","schedule","length","baseStart","finalEnd","today","map","week","wi","weekStart","runs","r","type","idx","startDow","_objectSpread","toISOString","done","every","removeDatesFromPlan","undefined"],"sources":["planDates.ts"],"sourcesContent":["export type { DayOfWeek } from \"@maratypes/basics\";\nimport { DayOfWeek } from \"@maratypes/basics\";\nimport type { RunningPlanData } from \"@maratypes/runningPlan\";\n\nfunction parseDateUTC(date: string | Date): Date {\n  if (date instanceof Date) return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));\n  // treat plain dates as UTC to avoid timezone offsets\n  return new Date(date.includes(\"T\") ? date : `${date}T00:00:00Z`);\n}\n\nfunction startOfDayUTC(date: Date): Date {\n  const d = parseDateUTC(date);\n  d.setUTCHours(0, 0, 0, 0);\n  return d;\n}\n\nfunction addDays(date: Date, days: number): Date {\n  const d = parseDateUTC(date);\n  d.setUTCDate(d.getUTCDate() + days);\n  return d;\n}\n\nfunction addWeeks(date: Date, weeks: number): Date {\n  return addDays(date, weeks * 7);\n}\n\nfunction startOfWeekSunday(date: Date): Date {\n  const d = startOfDayUTC(date);\n  const diff = d.getUTCDay();\n  d.setUTCDate(d.getUTCDate() - diff);\n  return d;\n}\n\nfunction nextSunday(from: Date = new Date()): Date {\n  const base = startOfDayUTC(from);\n  const diff = (7 - base.getUTCDay()) % 7;\n  base.setUTCDate(base.getUTCDate() + (diff === 0 ? 7 : diff));\n  return base;\n}\n\nconst dayIndexMap: Record<DayOfWeek, number> = {\n  Sunday: 0,\n  Monday: 1,\n  Tuesday: 2,\n  Wednesday: 3,\n  Thursday: 4,\n  Friday: 5,\n  Saturday: 6,\n};\n\nexport function dayIndex(day: DayOfWeek): number {\n  return dayIndexMap[day];\n}\n\nexport function assignDatesToPlan(\n  plan: RunningPlanData,\n  opts: { startDate?: string; endDate?: string }\n): RunningPlanData {\n  const { startDate, endDate } = opts;\n\n  const weeks = plan.schedule.length || plan.weeks;\n  let baseStart: Date;\n  let finalEnd: Date;\n\n  if (startDate) {\n    baseStart = startOfDayUTC(parseDateUTC(startDate));\n    finalEnd = endDate ? startOfDayUTC(parseDateUTC(endDate)) : addWeeks(baseStart, weeks);\n  } else if (endDate) {\n    finalEnd = startOfDayUTC(parseDateUTC(endDate));\n    baseStart = addWeeks(finalEnd, -weeks);\n  } else {\n    baseStart = nextSunday();\n    finalEnd = addWeeks(baseStart, weeks);\n  }\n\n  const today = startOfDayUTC(new Date());\n  if (baseStart < today) {\n    baseStart = today;\n    finalEnd = addWeeks(baseStart, weeks);\n  }\n\n  const schedule = plan.schedule.map((week, wi) => {\n    const weekStart = wi === 0 ? baseStart : startOfWeekSunday(addWeeks(baseStart, wi));\n    const runs = week.runs.map((r) => {\n      let date: Date;\n      if (\n        endDate &&\n        wi === weeks - 1 &&\n        (r.type === \"race\" || r.type === \"marathon\")\n      ) {\n        date = startOfDayUTC(parseDateUTC(endDate));\n      } else {\n        const idx = r.day ? dayIndex(r.day) : 0;\n        if (wi === 0) {\n          const startDow = baseStart.getUTCDay();\n          const diff = idx - startDow;\n          date = addDays(baseStart, diff >= 0 ? diff : 7 + diff);\n        } else {\n          date = addDays(weekStart, idx);\n        }\n      }\n      return { ...r, date: date.toISOString() };\n    });\n    const done = runs.every((r) => r.done);\n    return { ...week, startDate: weekStart.toISOString(), runs, done };\n  });\n\n  return {\n    ...plan,\n    weeks,\n    schedule,\n    startDate: baseStart.toISOString(),\n    endDate: finalEnd.toISOString(),\n  };\n}\n\nexport function removeDatesFromPlan(plan: RunningPlanData): RunningPlanData {\n  const schedule = plan.schedule.map((week) => ({\n    ...week,\n    startDate: undefined,\n    runs: week.runs.map((r) => ({ ...r, date: undefined })),\n  }));\n  return {\n    ...plan,\n    schedule,\n    startDate: undefined,\n    endDate: undefined,\n  };\n}\n"],"mappings":"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","ignoreList":[]}