0d1dc171d353a99d2ffc5fd148e1b304
/* istanbul ignore next */
"use strict";
"use client";

/* istanbul ignore next */
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));
var
/* istanbul ignore next */
_ui = require("@components/ui");
var
/* istanbul ignore next */
_input = require("@components/ui/input");
/* istanbul ignore next */
const _excluded = ["label", "name", "options", "value", "editing", "onChange", "className"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/FormField/CheckboxGroupField.tsx";
var __jsx = _react.default.createElement;
function cov_1l1y6xdwtv() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/FormField/CheckboxGroupField.tsx";
  var hash = "2b2ed1c22928ef6f51b8245d70e3cb13c0ed9ce3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/FormField/CheckboxGroupField.tsx",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 62
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 65,
          column: 4
        }
      },
      "2": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "3": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 47,
          column: 60
        }
      },
      "4": {
        start: {
          line: 47,
          column: 44
        },
        end: {
          line: 47,
          column: 59
        }
      },
      "5": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 62
          },
          end: {
            line: 17,
            column: 63
          }
        },
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 24
          }
        },
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 56,
            column: 20
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 29
          }
        },
        loc: {
          start: {
            line: 44,
            column: 72
          },
          end: {
            line: 49,
            column: 19
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 38
          }
        },
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 59
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 16
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 14
          },
          end: {
            line: 24,
            column: 16
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 28
          }
        }, {
          start: {
            line: 31,
            column: 32
          },
          end: {
            line: 31,
            column: 86
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 7
          },
          end: {
            line: 63,
            column: 7
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 58,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 12
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 47,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 60
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 61,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 46
          }
        }, {
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 52
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b2ed1c22928ef6f51b8245d70e3cb13c0ed9ce3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l1y6xdwtv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l1y6xdwtv();
cov_1l1y6xdwtv().s[0]++;
const CheckboxGroupField =
/* istanbul ignore next */
_ref => {
  /* istanbul ignore next */
  let {
      label,
      name,
      options,
      value,
      editing =
      /* istanbul ignore next */
      (cov_1l1y6xdwtv().b[0][0]++, true),
      onChange,
      className =
      /* istanbul ignore next */
      (cov_1l1y6xdwtv().b[1][0]++, "")
    } = _ref,
    inputProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  /* istanbul ignore next */
  cov_1l1y6xdwtv().f[0]++;
  cov_1l1y6xdwtv().s[1]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: `space-y-1 ${className}`,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 5
    }
  },
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  _ui.
  /* istanbul ignore next */
  Label,
  /* istanbul ignore next */
  {
    htmlFor: name,
    className: "block font-medium",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 7
    }
  }, label,
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[2][0]++, inputProps.required) &&
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[2][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "span",
  /* istanbul ignore next */
  {
    className: "text-brand-orange-dark ml-1",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 33
    }
  }, "*"))), editing ?
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[3][0]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "flex flex-wrap gap-4",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 9
    }
  }, options.map(opt => {
    /* istanbul ignore next */
    cov_1l1y6xdwtv().f[1]++;
    cov_1l1y6xdwtv().s[2]++;
    return /* istanbul ignore next */__jsx(
    /* istanbul ignore next */
    "label",
    /* istanbul ignore next */
    {
      key: opt.value,
      className: "inline-flex items-center",
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 37,
        columnNumber: 13
      }
    },
    /* istanbul ignore next */
    __jsx(
    /* istanbul ignore next */
    _input.
    /* istanbul ignore next */
    Input,
    /* istanbul ignore next */
    (0, _extends2.default)({
      id: opt.value,
      name: name,
      type: "checkbox"
    }, inputProps, {
      checked: value.includes(opt.value),
      onChange: e => {
        /* istanbul ignore next */
        cov_1l1y6xdwtv().f[2]++;
        const next =
        /* istanbul ignore next */
        (cov_1l1y6xdwtv().s[3]++, e.target.checked ?
        /* istanbul ignore next */
        (cov_1l1y6xdwtv().b[4][0]++, [...value, opt.value]) :
        /* istanbul ignore next */
        (cov_1l1y6xdwtv().b[4][1]++, value.filter(v => {
          /* istanbul ignore next */
          cov_1l1y6xdwtv().f[3]++;
          cov_1l1y6xdwtv().s[4]++;
          return v !== opt.value;
        })));
        /* istanbul ignore next */
        cov_1l1y6xdwtv().s[5]++;
        onChange(name, next);
      },
      value: opt.value,
      className: "rounded border-accent text-primary focus:ring-2 focus:ring-primary",
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 17
      }
    })),
    /* istanbul ignore next */
    __jsx(
    /* istanbul ignore next */
    "span",
    /* istanbul ignore next */
    {
      className: "ml-2 text-foreground dark:text-foreground",
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 15
      }
    }, opt.label));
  }))) :
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[3][1]++,
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "p",
  /* istanbul ignore next */
  {
    className: "mt-1 text-foreground dark:text-foreground",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 9
    }
  }, value.length > 0 ?
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[5][0]++, value.join(", ")) :
  /* istanbul ignore next */
  (cov_1l1y6xdwtv().b[5][1]++, "–"))));
};
/* istanbul ignore next */
var _default = exports.default = CheckboxGroupField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,