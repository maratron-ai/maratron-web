c77ea8db601cd3b9175f81a961677c99
"use strict";
"use client";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ProfileInfoCard;
var _react = _interopRequireDefault(require("react"));
var _image = _interopRequireDefault(require("next/image"));
var _link = _interopRequireDefault(require("next/link"));
var _ui = require("@components/ui");
var _UserStatsDialog = _interopRequireDefault(require("@components/social/UserStatsDialog"));
var _FollowUserButton = _interopRequireDefault(require("@components/social/FollowUserButton"));
var _socialLimits = require("@lib/socialLimits");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/social/ProfileInfoCard.tsx"; // import { usePathname } from "next/navigation";
var __jsx = _react.default.createElement;
function ProfileInfoCard({
  profile,
  user,
  isSelf,
  disableSelfStats,
  followers,
  following,
  runs
}) {
  const avatar = user?.avatarUrl || profile.profilePhoto || "/default_profile.png";
  const joined = user?.createdAt ?? profile.createdAt;
  const joinedText = new Date(joined).toLocaleDateString(undefined, {
    month: "short",
    year: "2-digit"
  });
  const runsList = runs?.slice(0, _socialLimits.PROFILE_STATS_LIMIT) ?? [];
  const followersList = followers?.slice(0, _socialLimits.PROFILE_STATS_LIMIT) ?? [];
  const followingList = following?.slice(0, _socialLimits.PROFILE_STATS_LIMIT) ?? [];

  // const pathname = usePathname();

  return __jsx(_react.default.Fragment, null, __jsx(_ui.Card, {
    className: "relative p-4 flex flex-wrap flex-col sm:flex-row gap-4 items-start overflow-hidden",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 5
    }
  }, __jsx(_image.default, {
    src: avatar,
    alt: profile.username,
    width: 64,
    height: 64,
    className: "w-16 h-16 rounded-full object-cover border border-brand-to bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 7
    }
  }), __jsx("div", {
    className: "flex-1 min-w-0 break-words",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 7
    }
  }, __jsx("h2", {
    className: "text-xl font-bold truncate",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 9
    }
  }, __jsx("a", {
    href: `/u/${profile.username}`,
    className: "font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 11
    }
  }, "@", profile.username), __jsx("span", {
    className: "block text-sm text-foreground opacity-60 font-normal",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 11
    }
  }, "Since ", joinedText)), profile.bio && __jsx("p", {
    className: "text-sm text-foreground opacity-70 break-words",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 11
    }
  }, profile.bio)), __jsx("div", {
    className: "w-full flex flex-col sm:flex-row justify-center items-center text-center gap-4 text-sm text-muted-foreground",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 7
    }
  }, isSelf && disableSelfStats ? __jsx("div", {
    className: "flex items-baseline justify-center w-full sm:w-auto gap-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 11
    }
  }, __jsx("span", {
    className: "text-lg font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 13
    }
  }, profile.runCount ?? 0, " runs")) : __jsx(_UserStatsDialog.default, {
    title: "Runs",
    trigger: __jsx("div", {
      className: "flex items-baseline justify-center w-full sm:w-auto gap-1 cursor-pointer hover:underline",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 83,
        columnNumber: 15
      }
    }, __jsx("span", {
      className: "text-lg font-semibold",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84,
        columnNumber: 17
      }
    }, profile.runCount ?? 0, " runs")),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 11
    }
  }, runsList.length > 0 ? __jsx("ul", {
    className: "list-disc ml-4 space-y-1 text-left",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 15
    }
  }, runsList.map(r => __jsx("li", {
    key: r.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 19
    }
  }, r.name || new Date(r.date).toLocaleDateString(), " - ", r.distance, " ", r.distanceUnit))) : __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 15
    }
  }, "No runs found.")), isSelf && disableSelfStats ? __jsx("div", {
    className: "flex items-baseline justify-center w-full sm:w-auto gap-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 11
    }
  }, __jsx("span", {
    className: "text-lg font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 13
    }
  }, profile.totalDistance ?? 0, " mi")) : __jsx(_UserStatsDialog.default, {
    title: "Distance",
    trigger: __jsx("div", {
      className: "flex items-baseline justify-center w-full sm:w-auto gap-1 cursor-pointer hover:underline",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119,
        columnNumber: 15
      }
    }, __jsx("span", {
      className: "text-lg font-semibold",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120,
        columnNumber: 17
      }
    }, profile.totalDistance ?? 0, " mi")),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 11
    }
  }, runsList.length > 0 ? __jsx("ul", {
    className: "list-disc ml-4 space-y-1 text-left",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 15
    }
  }, runsList.map(r => __jsx("li", {
    key: r.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 19
    }
  }, r.name || new Date(r.date).toLocaleDateString(), " - ", r.distance, " ", r.distanceUnit))) : __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 15
    }
  }, "No runs found.")), isSelf && disableSelfStats ? __jsx(_react.default.Fragment, null, __jsx("div", {
    className: "flex items-baseline justify-center w-full sm:w-auto gap-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 13
    }
  }, __jsx("span", {
    className: "text-lg font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 15
    }
  }, profile.followerCount ?? 0, " followers")), __jsx("div", {
    className: "flex items-baseline justify-center w-full sm:w-auto gap-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 13
    }
  }, __jsx("span", {
    className: "text-lg font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 15
    }
  }, profile.followingCount ?? 0, " following"))) : __jsx(_react.default.Fragment, null, __jsx(_UserStatsDialog.default, {
    title: "Followers",
    trigger: __jsx("div", {
      className: "flex items-baseline justify-center w-full sm:w-auto gap-1 cursor-pointer hover:underline",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 158,
        columnNumber: 17
      }
    }, __jsx("span", {
      className: "text-lg font-semibold",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 159,
        columnNumber: 19
      }
    }, profile.followerCount ?? 0, " followers")),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 13
    }
  }, followersList.length > 0 ? __jsx("ul", {
    className: "space-y-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 17
    }
  }, followersList.map(f => __jsx("li", {
    key: f.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 168,
      columnNumber: 21
    }
  }, __jsx(_link.default, {
    href: `/u/${f.username}`,
    className: "underline",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 169,
      columnNumber: 23
    }
  }, "@", f.username)))) : __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 17
    }
  }, "No followers yet.")), __jsx(_UserStatsDialog.default, {
    title: "Following",
    trigger: __jsx("div", {
      className: "flex items-baseline justify-center w-full sm:w-auto gap-1 cursor-pointer hover:underline",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 182,
        columnNumber: 17
      }
    }, __jsx("span", {
      className: "text-lg font-semibold",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 183,
        columnNumber: 19
      }
    }, profile.followingCount ?? 0, " following")),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 13
    }
  }, followingList.length > 0 ? __jsx("ul", {
    className: "space-y-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 17
    }
  }, followingList.map(f => __jsx("li", {
    key: f.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 21
    }
  }, __jsx(_link.default, {
    href: `/u/${f.username}`,
    className: "underline",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 23
    }
  }, "@", f.username)))) : __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 17
    }
  }, "Not following anyone.")))), isSelf ? __jsx(_ui.Button, {
    asChild: true,
    size: "sm",
    className: "absolute top-4 right-4 text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 9
    }
  }, __jsx(_link.default, {
    href: "/social/profile/edit",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 212,
      columnNumber: 11
    }
  }, "Edit")) : __jsx("div", {
    className: "absolute top-4 right-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 9
    }
  }, __jsx(_FollowUserButton.default, {
    profileId: profile.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 11
    }
  }))));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,