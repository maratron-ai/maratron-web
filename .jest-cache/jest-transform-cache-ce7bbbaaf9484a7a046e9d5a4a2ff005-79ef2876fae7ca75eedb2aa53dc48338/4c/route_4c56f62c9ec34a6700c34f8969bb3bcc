7bd11e8832127aa22b48184838fbf37e
/* istanbul ignore next */
function cov_23wuaxi0gx() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/shoes/[id]/route.ts";
  var hash = "bed7b020af3601e75e9b9e3c94770b2dbba9f460";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/shoes/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "2": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "3": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "4": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "5": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "9": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "10": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 79
        }
      },
      "12": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "13": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "14": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "15": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "16": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 49
        }
      },
      "17": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "18": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "19": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "20": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "21": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "22": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 75
        }
      },
      "23": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "24": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 72,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 7,
            column: 25
          }
        },
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "PUT",
        decl: {
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 31,
            column: 25
          }
        },
        loc: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "DELETE",
        decl: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 28
          }
        },
        loc: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 40
          },
          end: {
            line: 24,
            column: 53
          }
        }, {
          start: {
            line: 24,
            column: 56
          },
          end: {
            line: 24,
            column: 77
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 15
          },
          end: {
            line: 49,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 56
          },
          end: {
            line: 49,
            column: 77
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 15
          },
          end: {
            line: 70,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 53
          }
        }, {
          start: {
            line: 70,
            column: 56
          },
          end: {
            line: 70,
            column: 77
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bed7b020af3601e75e9b9e3c94770b2dbba9f460"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23wuaxi0gx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23wuaxi0gx();
// app/api/shoes/[id]/route.ts
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
import { shoeSchema } from "@lib/schemas/shoeSchema";

// GET /api/shoes/[id] â€” Get a specific shoe
export async function GET(request, context) {
  /* istanbul ignore next */
  cov_23wuaxi0gx().f[0]++;
  cov_23wuaxi0gx().s[0]++;
  try {
    const params =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[1]++, await context.params);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[2]++, params);
    const shoe =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[3]++, await prisma.shoe.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[4]++;
    if (!shoe) {
      /* istanbul ignore next */
      cov_23wuaxi0gx().b[0][0]++;
      cov_23wuaxi0gx().s[5]++;
      return NextResponse.json({
        error: "Shoe not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_23wuaxi0gx().b[0][1]++;
    }
    cov_23wuaxi0gx().s[6]++;
    return NextResponse.json(shoe, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[7]++;
    console.error("Error fetching shoe:", error);
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[8]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[1][1]++, "Error fetching shoe")
    }, {
      status: 500
    });
  }
}

// PUT /api/shoes/[id] â€” Update a shoe
export async function PUT(request, context) {
  /* istanbul ignore next */
  cov_23wuaxi0gx().f[1]++;
  cov_23wuaxi0gx().s[9]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[10]++, await request.json());
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[11]++;
    await shoeSchema.validate(body, {
      abortEarly: false,
      stripUnknown: true
    });
    const params =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[12]++, await context.params);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[13]++, params);
    const updatedShoe =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[14]++, await prisma.shoe.update({
      where: {
        id
      },
      data: body
    }));
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[15]++;
    return NextResponse.json(updatedShoe, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[16]++;
    console.error("Error updating shoe:", error);
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[17]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[2][1]++, "Error updating shoe")
    }, {
      status: 500
    });
  }
}

// DELETE /api/shoes/[id] â€” Delete a shoe
export async function DELETE(request, context) {
  /* istanbul ignore next */
  cov_23wuaxi0gx().f[2]++;
  cov_23wuaxi0gx().s[18]++;
  try {
    const params =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[19]++, await context.params);
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_23wuaxi0gx().s[20]++, params);
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[21]++;
    await prisma.shoe.delete({
      where: {
        id
      }
    });
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[22]++;
    return NextResponse.json({
      message: "Shoe deleted"
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[23]++;
    console.error("Error deleting shoe:", error);
    /* istanbul ignore next */
    cov_23wuaxi0gx().s[24]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_23wuaxi0gx().b[3][1]++, "Error deleting shoe")
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,