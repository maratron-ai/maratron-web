598e47b6c80da7a8f2ac4320df4818bd
"use strict";
"use client";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ProfileSearch;
var _react = _interopRequireWildcard(require("react"));
var _axios = _interopRequireDefault(require("axios"));
var _react2 = require("next-auth/react");
var _ui = require("@components/ui");
var _FollowUserButton = _interopRequireDefault(require("@components/social/FollowUserButton"));
var _image = _interopRequireDefault(require("next/image"));
var _link = _interopRequireDefault(require("next/link"));
var _navigation = require("next/navigation");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/social/ProfileSearch.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
function ProfileSearch({
  limit = 5
}) {
  const {
    0: visibleCount,
    1: setVisibleCount
  } = (0, _react.useState)(limit);
  const {
    data: session
  } = (0, _react2.useSession)();
  const {
    0: query,
    1: setQuery
  } = (0, _react.useState)("");
  const {
    0: results,
    1: setResults
  } = (0, _react.useState)([]);
  const {
    0: myProfileId,
    1: setMyProfileId
  } = (0, _react.useState)(null);
  const {
    0: loading,
    1: setLoading
  } = (0, _react.useState)(true);
  const pathname = (0, _navigation.usePathname)();
  (0, _react.useEffect)(() => {
    const fetchMyProfile = async () => {
      if (session?.user?.id) {
        try {
          const {
            data
          } = await _axios.default.get(`/api/social/profile/byUser/${session.user.id}`);
          setMyProfileId(data.id);
        } catch {
          setMyProfileId(null);
        } finally {
          setLoading(false);
        }
      } else {
        setLoading(false);
      }
    };
    fetchMyProfile();
  }, [session?.user?.id]);
  const handleSearch = async e => {
    e.preventDefault();
    try {
      const {
        data
      } = await _axios.default.get(`/api/social/search?q=${encodeURIComponent(query)}${myProfileId ? `&profileId=${myProfileId}` : ""}`);
      setResults(data);
    } catch (err) {
      console.error(err);
    }
  };
  (0, _react.useEffect)(() => {
    if (!query) {
      setResults([]);
      return;
    }
    const timeout = setTimeout(async () => {
      try {
        const {
          data
        } = await _axios.default.get(`/api/social/search?q=${encodeURIComponent(query)}${myProfileId ? `&profileId=${myProfileId}` : ""}`);
        setResults(data);
      } catch (err) {
        console.error(err);
      }
    }, 300);
    return () => clearTimeout(timeout);
  }, [query, myProfileId]);
  const showMore = () => {
    setVisibleCount(prev => prev + (5 - limit) % 5); // output should be a multiple of 5
  };
  if (!session?.user?.id) return __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 34
    }
  }, "Please log in to search.");
  if (loading) return __jsx("div", {
    className: "flex justify-center py-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 7
    }
  }, __jsx(_ui.Spinner, {
    className: "h-4 w-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 9
    }
  }));
  if (!myProfileId) return __jsx("div", {
    className: "space-y-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 7
    }
  }, __jsx("p", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 9
    }
  }, "Create your social profile first."), __jsx(_ui.Button, {
    asChild: true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 9
    }
  }, __jsx("a", {
    href: "/social/profile/new",
    className: "block mx-auto w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 11
    }
  }, "Create Social Profile")));
  return __jsx("div", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 5
    }
  }, __jsx("form", {
    onSubmit: handleSearch,
    className: "flex items-center gap-2 mb-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 7
    }
  }, __jsx(_ui.Input, {
    placeholder: "Search runners",
    className: "placeholder:text-foreground",
    value: query,
    onChange: e => setQuery(e.target.value),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 9
    }
  }), __jsx(_ui.Button, {
    type: "submit",
    className: "w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from focus:ring-0",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 9
    }
  }, "Search")), __jsx("div", {
    className: "space-y-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 7
    }
  }, results.slice(0, visibleCount).map(p => __jsx(_ui.Card, {
    key: p.id,
    className: "p-4 flex items-center justify-between",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center gap-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 13
    }
  }, __jsx(_image.default, {
    src: p.avatarUrl || "/default_profile.png",
    alt: p.username,
    width: 40,
    height: 40,
    className: "w-10 h-10 rounded-full object-cover border border-brand-to bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 15
    }
  }), __jsx("div", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 15
    }
  }, __jsx("a", {
    href: `/u/${p.username}`,
    className: "font-semibold",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 17
    }
  }, p.name ?? p.username), p.bio && __jsx("p", {
    className: "text-foreground opacity-70",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 27
    }
  }, p.bio), __jsx("div", {
    className: "text-sm text-foreground opacity-60",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 17
    }
  }, __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 19
    }
  }, p.runCount ?? 0, " runs"), " ", __jsx("span", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 19
    }
  }, p.followerCount ?? 0, " followers")))), myProfileId && myProfileId !== p.id && __jsx(_FollowUserButton.default, {
    profileId: p.id,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 15
    }
  }))), results.length > visibleCount && pathname != "/social/search" && __jsx("div", {
    className: "flex justify-center mt-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 11
    }
  }, __jsx(_link.default, {
    href: "/social/search",
    passHref: true,
    style: {
      textDecoration: "none"
    },
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 13
    }
  }, __jsx(_ui.Button, {
    size: "sm",
    className: "block w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from focus:ring-0",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 15
    }
  }, "See more"))), results.length > visibleCount && __jsx("div", {
    className: "flex justify-center mt-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 11
    }
  }, __jsx(_ui.Button, {
    size: "sm",
    className: "block w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from focus:ring-0",
    onClick: showMore,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 13
    }
  }, "See more"))));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,