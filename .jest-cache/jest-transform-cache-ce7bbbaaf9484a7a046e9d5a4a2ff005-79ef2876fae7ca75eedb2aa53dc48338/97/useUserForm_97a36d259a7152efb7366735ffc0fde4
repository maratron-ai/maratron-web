f4fc8e6018861d4243dfbddb86dad767
/* istanbul ignore next */
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
const _excluded = ["id"];
function cov_ukxer3uxl() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/hooks/useUserForm.ts";
  var hash = "a0b34773377f038171dbcf331481aa91d11b7876";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/hooks/useUserForm.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "1": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 66
        }
      },
      "2": {
        start: {
          line: 14,
          column: 36
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "3": {
        start: {
          line: 15,
          column: 50
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "4": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 21,
          column: 15
        }
      },
      "5": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "7": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "9": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 26,
          column: 8
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "11": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "12": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 54,
          column: 44
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "14": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 35,
          column: 8
        }
      },
      "17": {
        start: {
          line: 36,
          column: 33
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "18": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 51
        }
      },
      "19": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "20": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "22": {
        start: {
          line: 41,
          column: 10
        },
        end: {
          line: 41,
          column: 75
        }
      },
      "23": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "24": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "25": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "27": {
        start: {
          line: 49,
          column: 49
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "29": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 63,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "useUserForm",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 27
          }
        },
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 17,
            column: 37
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 26
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 52
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 50
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 43
          }
        },
        loc: {
          start: {
            line: 49,
            column: 49
          },
          end: {
            line: 49,
            column: 58
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 61
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 69
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }, {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 52,
            column: 7
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0b34773377f038171dbcf331481aa91d11b7876"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ukxer3uxl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ukxer3uxl();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { useState, useCallback } from "react";
import { useSession } from "next-auth/react";
import userSchema from "@lib/schemas/userSchema";
import isYupValidationError from "@lib/utils/validation/isYupValidationError";
import { updateUser } from "@lib/api/user/user";
export function useUserForm(initial, onSuccess) {
  /* istanbul ignore next */
  cov_ukxer3uxl().f[0]++;
  const {
    update
  } =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[0]++, useSession());
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[1]++, useState(initial));
  const [isEditing, setIsEditing] =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[2]++, useState(false));
  const [validationErrors, setValidationErrors] =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[3]++, useState([]));
  const toggleEditing =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[4]++, useCallback(() => {
    /* istanbul ignore next */
    cov_ukxer3uxl().f[1]++;
    cov_ukxer3uxl().s[5]++;
    setValidationErrors([]);
    /* istanbul ignore next */
    cov_ukxer3uxl().s[6]++;
    setIsEditing(f => {
      /* istanbul ignore next */
      cov_ukxer3uxl().f[2]++;
      cov_ukxer3uxl().s[7]++;
      return !f;
    });
    /* istanbul ignore next */
    cov_ukxer3uxl().s[8]++;
    setFormData(initial);
  }, [initial]));
  const handleChange =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[9]++, useCallback((field, value) => {
    /* istanbul ignore next */
    cov_ukxer3uxl().f[3]++;
    cov_ukxer3uxl().s[10]++;
    setFormData(fd => {
      /* istanbul ignore next */
      cov_ukxer3uxl().f[4]++;
      cov_ukxer3uxl().s[11]++;
      return /* istanbul ignore next */_objectSpread(_objectSpread({}, fd), {}, {
        [field]: value
      });
    });
  }, []));
  const handleSave =
  /* istanbul ignore next */
  (cov_ukxer3uxl().s[12]++, useCallback(async () => {
    /* istanbul ignore next */
    cov_ukxer3uxl().f[5]++;
    cov_ukxer3uxl().s[13]++;
    setValidationErrors([]);
    const raw =
    /* istanbul ignore next */
    (cov_ukxer3uxl().s[14]++, _objectSpread({
      id: initial.id
    }, formData));
    /* istanbul ignore next */
    cov_ukxer3uxl().s[15]++;
    try {
      const valid =
      /* istanbul ignore next */
      (cov_ukxer3uxl().s[16]++, await userSchema.validate(raw, {
        abortEarly: false,
        stripUnknown: true
      }));
      const
        /* istanbul ignore next */
        _ref = (cov_ukxer3uxl().s[17]++, valid),
        /* istanbul ignore next */
        {
          id
        } = _ref,
        /* istanbul ignore next */
        payload = _objectWithoutProperties(_ref, _excluded);
      const updated =
      /* istanbul ignore next */
      (cov_ukxer3uxl().s[18]++, await updateUser(id, payload));
      /* istanbul ignore next */
      cov_ukxer3uxl().s[19]++;
      onSuccess(updated);
      /* istanbul ignore next */
      cov_ukxer3uxl().s[20]++;
      if (update) {
        /* istanbul ignore next */
        cov_ukxer3uxl().b[0][0]++;
        cov_ukxer3uxl().s[21]++;
        try {
          /* istanbul ignore next */
          cov_ukxer3uxl().s[22]++;
          await update({
            user: {
              avatarUrl:
              /* istanbul ignore next */
              (cov_ukxer3uxl().b[1][0]++, updated.avatarUrl) ??
              /* istanbul ignore next */
              (cov_ukxer3uxl().b[1][1]++, null)
            }
          });
        } catch (e) {
          /* istanbul ignore next */
          cov_ukxer3uxl().s[23]++;
          console.error("Failed to refresh session", e);
        }
      } else
      /* istanbul ignore next */
      {
        cov_ukxer3uxl().b[0][1]++;
      }
      cov_ukxer3uxl().s[24]++;
      setIsEditing(false);
    } catch (err) {
      /* istanbul ignore next */
      cov_ukxer3uxl().s[25]++;
      if (isYupValidationError(err)) {
        /* istanbul ignore next */
        cov_ukxer3uxl().b[2][0]++;
        cov_ukxer3uxl().s[26]++;
        setValidationErrors(err.inner.map(e => {
          /* istanbul ignore next */
          cov_ukxer3uxl().f[6]++;
          cov_ukxer3uxl().s[27]++;
          return e.message;
        }));
      } else {
        /* istanbul ignore next */
        cov_ukxer3uxl().b[2][1]++;
        cov_ukxer3uxl().s[28]++;
        console.error(err);
      }
    }
  }, [formData, initial, onSuccess, update]));
  /* istanbul ignore next */
  cov_ukxer3uxl().s[29]++;
  return {
    formData,
    isEditing,
    validationErrors,
    toggleEditing,
    handleChange,
    handleSave
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,