b38d531018190b001715ffa2391d86f0
/* istanbul ignore next */
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
function cov_67lp7kl2q() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/groups/[id]/posts/route.ts";
  var hash = "ed0d669d2a96ee06c4d7caf9be0b7812b08e45c8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/groups/[id]/posts/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "1": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "2": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "3": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 58,
          column: 3
        }
      },
      "4": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 13,
          column: 6
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "6": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 23,
          column: 8
        }
      },
      "11": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "13": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "14": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "15": {
        start: {
          line: 39,
          column: 37
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "16": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 37
        }
      },
      "17": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 52
        }
      },
      "18": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 67
        }
      },
      "19": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "20": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "21": {
        start: {
          line: 64,
          column: 15
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "22": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "23": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "24": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 52
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 52
        }
      },
      "26": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 5,
            column: 22
          },
          end: {
            line: 5,
            column: 25
          }
        },
        loc: {
          start: {
            line: 5,
            column: 86
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 30
          }
        },
        loc: {
          start: {
            line: 39,
            column: 37
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 39
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 87
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 15,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 15,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 18,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 18,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 25,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 25,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 34,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 75
          }
        }, {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 21
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 52,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 43
          }
        }, {
          start: {
            line: 52,
            column: 46
          },
          end: {
            line: 52,
            column: 51
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed0d669d2a96ee06c4d7caf9be0b7812b08e45c8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_67lp7kl2q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_67lp7kl2q();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
import { GROUP_POST_LIMIT } from "@lib/socialLimits";
export async function GET(req, ctx) {
  /* istanbul ignore next */
  cov_67lp7kl2q().f[0]++;
  const params =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[0]++, await ctx.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[1]++, params);
  const profileId =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[2]++, req.nextUrl.searchParams.get("profileId"));
  /* istanbul ignore next */
  cov_67lp7kl2q().s[3]++;
  try {
    const group =
    /* istanbul ignore next */
    (cov_67lp7kl2q().s[4]++, await prisma.runGroup.findUnique({
      where: {
        id
      },
      select: {
        private: true
      }
    }));
    /* istanbul ignore next */
    cov_67lp7kl2q().s[5]++;
    if (!group) {
      /* istanbul ignore next */
      cov_67lp7kl2q().b[0][0]++;
      cov_67lp7kl2q().s[6]++;
      return NextResponse.json({
        error: "Not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_67lp7kl2q().b[0][1]++;
    }
    cov_67lp7kl2q().s[7]++;
    if (group.private) {
      /* istanbul ignore next */
      cov_67lp7kl2q().b[1][0]++;
      cov_67lp7kl2q().s[8]++;
      if (!profileId) {
        /* istanbul ignore next */
        cov_67lp7kl2q().b[2][0]++;
        cov_67lp7kl2q().s[9]++;
        return NextResponse.json({
          error: "Unauthorized"
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_67lp7kl2q().b[2][1]++;
      }
      const member =
      /* istanbul ignore next */
      (cov_67lp7kl2q().s[10]++, await prisma.runGroupMember.findUnique({
        where: {
          groupId_socialProfileId: {
            groupId: id,
            socialProfileId: profileId
          }
        }
      }));
      /* istanbul ignore next */
      cov_67lp7kl2q().s[11]++;
      if (!member) {
        /* istanbul ignore next */
        cov_67lp7kl2q().b[3][0]++;
        cov_67lp7kl2q().s[12]++;
        return NextResponse.json({
          error: "Unauthorized"
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_67lp7kl2q().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_67lp7kl2q().b[1][1]++;
    }
    const posts =
    /* istanbul ignore next */
    (cov_67lp7kl2q().s[13]++, await prisma.runPost.findMany({
      where: {
        groupId: id
      },
      include: {
        socialProfile: {
          include: {
            user: {
              select: {
                avatarUrl: true
              }
            }
          }
        },
        _count: {
          select: {
            likes: true,
            comments: true
          }
        },
        likes: profileId ?
        /* istanbul ignore next */
        (cov_67lp7kl2q().b[4][0]++, {
          where: {
            socialProfileId: profileId
          },
          select: {
            id: true
          }
        }) :
        /* istanbul ignore next */
        (cov_67lp7kl2q().b[4][1]++, undefined)
      },
      orderBy: {
        createdAt: "desc"
      },
      take: GROUP_POST_LIMIT
    }));
    const mapped =
    /* istanbul ignore next */
    (cov_67lp7kl2q().s[14]++, posts.map(p => {
      /* istanbul ignore next */
      cov_67lp7kl2q().f[1]++;
      cov_67lp7kl2q().s[15]++;
      return {
        id: p.id,
        socialProfileId: p.socialProfileId,
        groupId: p.groupId,
        distance: p.distance,
        time: p.time,
        caption: p.caption,
        photoUrl: p.photoUrl,
        createdAt: p.createdAt,
        updatedAt: p.updatedAt,
        socialProfile: p.socialProfile,
        likeCount: p._count.likes,
        commentCount: p._count.comments,
        liked: profileId ?
        /* istanbul ignore next */
        (cov_67lp7kl2q().b[5][0]++, p.likes.length > 0) :
        /* istanbul ignore next */
        (cov_67lp7kl2q().b[5][1]++, false)
      };
    }));
    /* istanbul ignore next */
    cov_67lp7kl2q().s[16]++;
    return NextResponse.json(mapped);
  } catch (err) {
    /* istanbul ignore next */
    cov_67lp7kl2q().s[17]++;
    console.error("Error listing group posts", err);
    /* istanbul ignore next */
    cov_67lp7kl2q().s[18]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
export async function POST(req, ctx) {
  /* istanbul ignore next */
  cov_67lp7kl2q().f[2]++;
  const params =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[19]++, await ctx.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[20]++, params);
  const data =
  /* istanbul ignore next */
  (cov_67lp7kl2q().s[21]++, await req.json());
  /* istanbul ignore next */
  cov_67lp7kl2q().s[22]++;
  try {
    const post =
    /* istanbul ignore next */
    (cov_67lp7kl2q().s[23]++, await prisma.runPost.create({
      data:
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, data), {}, {
        groupId: id
      })
    }));
    /* istanbul ignore next */
    cov_67lp7kl2q().s[24]++;
    return NextResponse.json(post, {
      status: 201
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_67lp7kl2q().s[25]++;
    console.error("Error creating group post", err);
    /* istanbul ignore next */
    cov_67lp7kl2q().s[26]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,