{"version":3,"names":["cov_1ydy2k1g0a","actualCoverage","CredentialsProvider","prisma","authOptions","s","providers","name","credentials","email","label","type","placeholder","password","authorize","f","user","findUnique","where","b","error","console","session","strategy","maxAge","secret","process","env","NEXTAUTH_SECRET","callbacks","token","sub","id","avatarUrl","avatar","jwt","trigger","undefined","pages","signIn"],"sources":["auth.ts"],"sourcesContent":["// lib/auth.ts\nimport { NextAuthOptions, Session, User } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport { prisma } from \"@lib/prisma\";\nimport type { JWT } from \"next-auth/jwt\";\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\", placeholder: \"your@email.com\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        try {\n          const user = await prisma.user.findUnique({\n            where: { email: credentials?.email },\n          });\n          if (!user) return null;\n          return user;\n        } catch (error) {\n          console.error(\"Auth error:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n  session: { \n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60, // 24 hours\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n  callbacks: {\n    async session({ session, token }: { session: Session; token: JWT }) {\n      if (session.user && token.sub) {\n        session.user.id = token.sub;\n      }\n      if (session.user && (token as JWT & { avatarUrl?: string }).avatarUrl) {\n        const avatar = (\n          token as JWT & { avatarUrl?: string }\n        ).avatarUrl as string;\n        session.user.avatarUrl = avatar;\n      }\n      return session;\n    },\n    async jwt({\n        token,\n        user,\n        trigger,\n        session,\n      }: {\n        token: JWT;\n        user?: User;\n        trigger?: string;\n        session?: Session;\n      }) {  \n      \n      if (user) {\n        token.id = user.id;\n        (token as JWT & { avatarUrl?: string }).avatarUrl = (\n          user as User & { avatarUrl?: string }\n        ).avatarUrl;\n      }\n      if (trigger === \"update\" && session?.user?.avatarUrl !== undefined) {\n        (token as JWT & { avatarUrl?: string }).avatarUrl = session.user\n          .avatarUrl as string | undefined;\n      }\n      return token;\n    },\n  },\n  pages: {\n    signIn: \"/login\",\n  },\n};"],"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","ignoreList":[]}