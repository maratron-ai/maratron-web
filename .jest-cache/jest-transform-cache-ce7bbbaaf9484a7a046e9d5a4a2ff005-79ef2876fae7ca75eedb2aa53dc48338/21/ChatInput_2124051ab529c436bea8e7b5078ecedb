62a6f7089547fdb074f3bb0260bc30e3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChatInput = ChatInput;
var _react = _interopRequireWildcard(require("react"));
var _button = require("@components/ui/button");
var _textarea = require("@components/ui/textarea");
var _lucideReact = require("lucide-react");
var _cn = require("@lib/utils/cn");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/chat/ChatInput.tsx";
/**
 * ChatInput Component - Input field for chat messages
 */
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
function ChatInput({
  onSendMessage,
  isLoading = false,
  disabled = false,
  placeholder = "Ask about your runs, training, or fitness data..."
}) {
  const {
    0: message,
    1: setMessage
  } = (0, _react.useState)('');
  const textareaRef = (0, _react.useRef)(null);
  const handleSend = () => {
    const trimmedMessage = message.trim();
    if (trimmedMessage && !isLoading && !disabled) {
      onSendMessage(trimmedMessage);
      setMessage('');
      // Reset textarea height
      if (textareaRef.current) {
        textareaRef.current.style.height = 'auto';
      }
    }
  };
  const handleKeyDown = e => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSend();
    }
  };
  const handleInput = e => {
    setMessage(e.target.value);

    // Auto-resize textarea
    const textarea = e.target;
    textarea.style.height = 'auto';
    textarea.style.height = `${Math.min(textarea.scrollHeight, 120)}px`;
  };
  return __jsx("div", {
    className: "border-t bg-background p-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "flex gap-2 items-end max-w-4xl mx-auto",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 7
    }
  }, __jsx("div", {
    className: "flex-1 relative",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 9
    }
  }, __jsx(_textarea.Textarea, {
    ref: textareaRef,
    value: message,
    onChange: handleInput,
    onKeyDown: handleKeyDown,
    placeholder: placeholder,
    disabled: disabled || isLoading,
    className: (0, _cn.cn)("min-h-[44px] max-h-[120px] resize-none pr-12", "focus-visible:ring-1"),
    rows: 1,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 11
    }
  }), __jsx("div", {
    className: "absolute right-2 bottom-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 11
    }
  }, __jsx(_button.Button, {
    onClick: handleSend,
    disabled: !message.trim() || isLoading || disabled,
    size: "sm",
    className: "h-8 w-8 p-0",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 13
    }
  }, isLoading ? __jsx(_lucideReact.Loader2, {
    className: "h-4 w-4 animate-spin",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 17
    }
  }) : __jsx(_lucideReact.Send, {
    className: "h-4 w-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 17
    }
  }))))), __jsx("div", {
    className: "flex gap-2 mt-2 max-w-4xl mx-auto",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 7
    }
  }, __jsx(_button.Button, {
    variant: "outline",
    size: "sm",
    onClick: () => onSendMessage("Show me my recent runs"),
    disabled: isLoading || disabled,
    className: "text-xs",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 9
    }
  }, "Recent Runs"), __jsx(_button.Button, {
    variant: "outline",
    size: "sm",
    onClick: () => onSendMessage("What's my training summary?"),
    disabled: isLoading || disabled,
    className: "text-xs",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 9
    }
  }, "Training Summary"), __jsx(_button.Button, {
    variant: "outline",
    size: "sm",
    onClick: () => onSendMessage("Show me my shoes"),
    disabled: isLoading || disabled,
    className: "text-xs",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 9
    }
  }, "My Shoes")));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,