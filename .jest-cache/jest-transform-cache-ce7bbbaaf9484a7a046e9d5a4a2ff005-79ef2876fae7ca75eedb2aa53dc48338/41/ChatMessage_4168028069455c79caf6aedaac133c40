112199855e5e304dfc84f567b0632df9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChatMessage = ChatMessage;
var _react = _interopRequireDefault(require("react"));
var _avatar = require("@components/ui/avatar");
var _badge = require("@components/ui/badge");
var _card = require("@components/ui/card");
var _skeleton = require("@components/ui/skeleton");
var _lucideReact = require("lucide-react");
var _cn = require("@lib/utils/cn");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/chat/ChatMessage.tsx";
/**
 * ChatMessage Component - Displays individual chat messages
 */
var __jsx = _react.default.createElement;
function ChatMessage({
  role,
  content,
  timestamp,
  isLoading = false,
  toolCalls,
  avatarUrl,
  userName
}) {
  const isUser = role === 'user';
  const isSystem = role === 'system';
  if (isSystem) return null; // Don't render system messages

  return __jsx("div", {
    className: "w-full px-4 py-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: (0, _cn.cn)('flex gap-3 max-w-full', isUser ? 'justify-end' : 'justify-start'),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 7
    }
  }, !isUser && __jsx(_avatar.Avatar, {
    className: "h-8 w-8 mt-1 flex-shrink-0",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 11
    }
  }, __jsx(_avatar.AvatarImage, {
    src: "/tron.svg",
    alt: "Maratron AI",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 13
    }
  }), __jsx(_avatar.AvatarFallback, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 13
    }
  }, __jsx(_lucideReact.Bot, {
    className: "h-4 w-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 15
    }
  }))), __jsx("div", {
    className: (0, _cn.cn)('max-w-[calc(100%-4rem)] min-w-0 space-y-2', isUser ? 'flex flex-col items-end' : 'flex flex-col items-start'),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 9
    }
  }, toolCalls && toolCalls.length > 0 && __jsx("div", {
    className: "flex flex-wrap gap-1 mb-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 13
    }
  }, toolCalls.map((tool, index) => __jsx(_badge.Badge, {
    key: index,
    variant: "secondary",
    className: "text-xs",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 17
    }
  }, __jsx(_lucideReact.Zap, {
    className: "h-3 w-3 mr-1",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 19
    }
  }), tool.name))), __jsx(_card.Card, {
    className: (0, _cn.cn)('relative max-w-full min-w-0', isUser ? 'bg-primary text-primary-foreground' : 'bg-muted'),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 11
    }
  }, __jsx(_card.CardContent, {
    className: "p-3 min-w-0 max-w-full",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 13
    }
  }, isLoading ? __jsx("div", {
    className: "space-y-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 17
    }
  }, __jsx(_skeleton.Skeleton, {
    className: "h-4 w-full",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 19
    }
  }), __jsx(_skeleton.Skeleton, {
    className: "h-4 w-3/4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 19
    }
  })) : __jsx("div", {
    className: "text-sm whitespace-pre-wrap break-all min-w-0 max-w-full",
    style: {
      wordWrap: 'break-word',
      overflowWrap: 'anywhere',
      wordBreak: 'break-word'
    },
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 17
    }
  }, content))), timestamp && __jsx("div", {
    className: (0, _cn.cn)('text-xs text-muted-foreground', isUser ? 'text-right' : 'text-left'),
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 13
    }
  }, timestamp.toLocaleTimeString([], {
    hour: '2-digit',
    minute: '2-digit'
  }))), isUser && __jsx(_avatar.Avatar, {
    className: "h-8 w-8 mt-1 flex-shrink-0",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 11
    }
  }, __jsx(_avatar.AvatarImage, {
    src: avatarUrl,
    alt: userName,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 13
    }
  }), __jsx(_avatar.AvatarFallback, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 13
    }
  }, __jsx(_lucideReact.User, {
    className: "h-4 w-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 15
    }
  })))));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXZhdGFyIiwicmVxdWlyZSIsIl9iYWRnZSIsIl9jYXJkIiwiX3NrZWxldG9uIiwiX2x1Y2lkZVJlYWN0IiwiX2NuIiwiX2pzeEZpbGVOYW1lIiwiX19qc3giLCJfcmVhY3QiLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsIkNoYXRNZXNzYWdlIiwicm9sZSIsImNvbnRlbnQiLCJ0aW1lc3RhbXAiLCJpc0xvYWRpbmciLCJ0b29sQ2FsbHMiLCJhdmF0YXJVcmwiLCJ1c2VyTmFtZSIsImlzVXNlciIsImlzU3lzdGVtIiwiY2xhc3NOYW1lIiwiX19zZWxmIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJjbiIsIkF2YXRhciIsIkF2YXRhckltYWdlIiwic3JjIiwiYWx0IiwiQXZhdGFyRmFsbGJhY2siLCJCb3QiLCJsZW5ndGgiLCJtYXAiLCJ0b29sIiwiaW5kZXgiLCJCYWRnZSIsImtleSIsInZhcmlhbnQiLCJaYXAiLCJuYW1lIiwiQ2FyZCIsIkNhcmRDb250ZW50IiwiU2tlbGV0b24iLCJzdHlsZSIsIndvcmRXcmFwIiwib3ZlcmZsb3dXcmFwIiwid29yZEJyZWFrIiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwiaG91ciIsIm1pbnV0ZSIsIlVzZXIiXSwic291cmNlcyI6WyJDaGF0TWVzc2FnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGF0TWVzc2FnZSBDb21wb25lbnQgLSBEaXNwbGF5cyBpbmRpdmlkdWFsIGNoYXQgbWVzc2FnZXNcbiAqL1xuXG5pbXBvcnQgeyBBdmF0YXIsIEF2YXRhckZhbGxiYWNrLCBBdmF0YXJJbWFnZSB9IGZyb20gJ0Bjb21wb25lbnRzL3VpL2F2YXRhcic7XG5pbXBvcnQgeyBCYWRnZSB9IGZyb20gJ0Bjb21wb25lbnRzL3VpL2JhZGdlJztcbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50IH0gZnJvbSAnQGNvbXBvbmVudHMvdWkvY2FyZCc7XG5pbXBvcnQgeyBTa2VsZXRvbiB9IGZyb20gJ0Bjb21wb25lbnRzL3VpL3NrZWxldG9uJztcbmltcG9ydCB7IEJvdCwgVXNlciwgWmFwIH0gZnJvbSAnbHVjaWRlLXJlYWN0JztcbmltcG9ydCB7IGNuIH0gZnJvbSAnQGxpYi91dGlscy9jbic7XG5cbmludGVyZmFjZSBDaGF0TWVzc2FnZVByb3BzIHtcbiAgcm9sZTogJ3VzZXInIHwgJ2Fzc2lzdGFudCcgfCAnc3lzdGVtJztcbiAgY29udGVudDogc3RyaW5nO1xuICB0aW1lc3RhbXA/OiBEYXRlO1xuICBpc0xvYWRpbmc/OiBib29sZWFuO1xuICB0b29sQ2FsbHM/OiBBcnJheTx7IG5hbWU6IHN0cmluZzsgYXJndW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiB9PjtcbiAgYXZhdGFyVXJsPzogc3RyaW5nO1xuICB1c2VyTmFtZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENoYXRNZXNzYWdlKHtcbiAgcm9sZSxcbiAgY29udGVudCxcbiAgdGltZXN0YW1wLFxuICBpc0xvYWRpbmcgPSBmYWxzZSxcbiAgdG9vbENhbGxzLFxuICBhdmF0YXJVcmwsXG4gIHVzZXJOYW1lXG59OiBDaGF0TWVzc2FnZVByb3BzKSB7XG4gIGNvbnN0IGlzVXNlciA9IHJvbGUgPT09ICd1c2VyJztcbiAgY29uc3QgaXNTeXN0ZW0gPSByb2xlID09PSAnc3lzdGVtJztcblxuICBpZiAoaXNTeXN0ZW0pIHJldHVybiBudWxsOyAvLyBEb24ndCByZW5kZXIgc3lzdGVtIG1lc3NhZ2VzXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBweC00IHB5LTJcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgJ2ZsZXggZ2FwLTMgbWF4LXctZnVsbCcsXG4gICAgICAgIGlzVXNlciA/ICdqdXN0aWZ5LWVuZCcgOiAnanVzdGlmeS1zdGFydCdcbiAgICAgICl9PlxuICAgICAgICB7IWlzVXNlciAmJiAoXG4gICAgICAgICAgPEF2YXRhciBjbGFzc05hbWU9XCJoLTggdy04IG10LTEgZmxleC1zaHJpbmstMFwiPlxuICAgICAgICAgICAgPEF2YXRhckltYWdlIHNyYz1cIi90cm9uLnN2Z1wiIGFsdD1cIk1hcmF0cm9uIEFJXCIgLz5cbiAgICAgICAgICAgIDxBdmF0YXJGYWxsYmFjaz5cbiAgICAgICAgICAgICAgPEJvdCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgIDwvQXZhdGFyRmFsbGJhY2s+XG4gICAgICAgICAgPC9BdmF0YXI+XG4gICAgICAgICl9XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgICdtYXgtdy1bY2FsYygxMDAlLTRyZW0pXSBtaW4tdy0wIHNwYWNlLXktMicsXG4gICAgICAgICAgaXNVc2VyID8gJ2ZsZXggZmxleC1jb2wgaXRlbXMtZW5kJyA6ICdmbGV4IGZsZXgtY29sIGl0ZW1zLXN0YXJ0J1xuICAgICAgICApfT5cbiAgICAgICAgICB7LyogVG9vbCBjYWxscyBpbmRpY2F0b3IgKi99XG4gICAgICAgICAge3Rvb2xDYWxscyAmJiB0b29sQ2FsbHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC13cmFwIGdhcC0xIG1iLTJcIj5cbiAgICAgICAgICAgICAge3Rvb2xDYWxscy5tYXAoKHRvb2wsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgPEJhZGdlIGtleT17aW5kZXh9IHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBjbGFzc05hbWU9XCJ0ZXh0LXhzXCI+XG4gICAgICAgICAgICAgICAgICA8WmFwIGNsYXNzTmFtZT1cImgtMyB3LTMgbXItMVwiIC8+XG4gICAgICAgICAgICAgICAgICB7dG9vbC5uYW1lfVxuICAgICAgICAgICAgICAgIDwvQmFkZ2U+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHsvKiBNZXNzYWdlIGNvbnRlbnQgKi99XG4gICAgICAgICAgPENhcmQgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICAgICdyZWxhdGl2ZSBtYXgtdy1mdWxsIG1pbi13LTAnLFxuICAgICAgICAgICAgaXNVc2VyIFxuICAgICAgICAgICAgICA/ICdiZy1wcmltYXJ5IHRleHQtcHJpbWFyeS1mb3JlZ3JvdW5kJyBcbiAgICAgICAgICAgICAgOiAnYmctbXV0ZWQnXG4gICAgICAgICAgKX0+XG4gICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC0zIG1pbi13LTAgbWF4LXctZnVsbFwiPlxuICAgICAgICAgICAgICB7aXNMb2FkaW5nID8gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0yXCI+XG4gICAgICAgICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC00IHctZnVsbFwiIC8+XG4gICAgICAgICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC00IHctMy80XCIgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1zbSB3aGl0ZXNwYWNlLXByZS13cmFwIGJyZWFrLWFsbCBtaW4tdy0wIG1heC13LWZ1bGxcIlxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgXG4gICAgICAgICAgICAgICAgICAgIHdvcmRXcmFwOiAnYnJlYWstd29yZCcsXG4gICAgICAgICAgICAgICAgICAgIG92ZXJmbG93V3JhcDogJ2FueXdoZXJlJyxcbiAgICAgICAgICAgICAgICAgICAgd29yZEJyZWFrOiAnYnJlYWstd29yZCdcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge2NvbnRlbnR9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgIDwvQ2FyZD5cblxuICAgICAgICAgIHsvKiBUaW1lc3RhbXAgKi99XG4gICAgICAgICAge3RpbWVzdGFtcCAmJiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y24oXG4gICAgICAgICAgICAgICd0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZCcsXG4gICAgICAgICAgICAgIGlzVXNlciA/ICd0ZXh0LXJpZ2h0JyA6ICd0ZXh0LWxlZnQnXG4gICAgICAgICAgICApfT5cbiAgICAgICAgICAgICAge3RpbWVzdGFtcC50b0xvY2FsZVRpbWVTdHJpbmcoW10sIHsgXG4gICAgICAgICAgICAgICAgaG91cjogJzItZGlnaXQnLCBcbiAgICAgICAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JyBcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7aXNVc2VyICYmIChcbiAgICAgICAgICA8QXZhdGFyIGNsYXNzTmFtZT1cImgtOCB3LTggbXQtMSBmbGV4LXNocmluay0wXCI+XG4gICAgICAgICAgICA8QXZhdGFySW1hZ2Ugc3JjPXthdmF0YXJVcmx9IGFsdD17dXNlck5hbWV9IC8+XG4gICAgICAgICAgICA8QXZhdGFyRmFsbGJhY2s+XG4gICAgICAgICAgICAgIDxVc2VyIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxuICAgICAgICAgICAgPC9BdmF0YXJGYWxsYmFjaz5cbiAgICAgICAgICA8L0F2YXRhcj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFJQSxJQUFBQSxPQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxNQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxTQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxZ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