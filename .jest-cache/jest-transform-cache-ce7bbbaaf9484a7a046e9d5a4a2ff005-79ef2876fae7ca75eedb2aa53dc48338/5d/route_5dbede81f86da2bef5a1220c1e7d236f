ba7a2aed4ce9bb223aa61a2ffc1efc06
/* istanbul ignore next */
function cov_gb3vul3za() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/users/[id]/route.ts";
  var hash = "f07c2ae40c9f36425db273eda72ce825e9a4968e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/users/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "1": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 23
        }
      },
      "2": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "3": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 14,
          column: 6
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "5": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 76
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "9": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "10": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 23
        }
      },
      "11": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "12": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "13": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 49
        }
      },
      "16": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      },
      "17": {
        start: {
          line: 54,
          column: 17
        },
        end: {
          line: 54,
          column: 37
        }
      },
      "18": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "19": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "20": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "21": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 75
        }
      },
      "22": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "23": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 66,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 5,
            column: 22
          },
          end: {
            line: 5,
            column: 25
          }
        },
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "PUT",
        decl: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 28,
            column: 25
          }
        },
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "DELETE",
        decl: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 22,
            column: 53
          }
        }, {
          start: {
            line: 22,
            column: 56
          },
          end: {
            line: 22,
            column: 77
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 56
          },
          end: {
            line: 44,
            column: 77
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 64,
            column: 56
          },
          end: {
            line: 64,
            column: 77
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f07c2ae40c9f36425db273eda72ce825e9a4968e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gb3vul3za = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gb3vul3za();
// src/app/api/users/[id]/route.ts
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
export async function GET(request, context) {
  /* istanbul ignore next */
  cov_gb3vul3za().f[0]++;
  const params =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[0]++, await context.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[1]++, params);
  /* istanbul ignore next */
  cov_gb3vul3za().s[2]++;
  try {
    const user =
    /* istanbul ignore next */
    (cov_gb3vul3za().s[3]++, await prisma.user.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_gb3vul3za().s[4]++;
    if (!user) {
      /* istanbul ignore next */
      cov_gb3vul3za().b[0][0]++;
      cov_gb3vul3za().s[5]++;
      return NextResponse.json({
        error: "User not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_gb3vul3za().b[0][1]++;
    }
    cov_gb3vul3za().s[6]++;
    return NextResponse.json(user, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_gb3vul3za().s[7]++;
    console.error("Error fetching user:", error);
    /* istanbul ignore next */
    cov_gb3vul3za().s[8]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_gb3vul3za().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_gb3vul3za().b[1][1]++, "Error fetching user")
    }, {
      status: 500
    });
  }
}
export async function PUT(request, context) {
  /* istanbul ignore next */
  cov_gb3vul3za().f[1]++;
  const params =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[9]++, await context.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[10]++, params);
  /* istanbul ignore next */
  cov_gb3vul3za().s[11]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_gb3vul3za().s[12]++, await request.json());
    const updatedUser =
    /* istanbul ignore next */
    (cov_gb3vul3za().s[13]++, await prisma.user.update({
      where: {
        id
      },
      data: body
    }));
    /* istanbul ignore next */
    cov_gb3vul3za().s[14]++;
    return NextResponse.json(updatedUser, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_gb3vul3za().s[15]++;
    console.error("Error updating user:", error);
    /* istanbul ignore next */
    cov_gb3vul3za().s[16]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_gb3vul3za().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_gb3vul3za().b[2][1]++, "Error updating user")
    }, {
      status: 500
    });
  }
}
export async function DELETE(request, context) {
  /* istanbul ignore next */
  cov_gb3vul3za().f[2]++;
  const params =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[17]++, await context.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_gb3vul3za().s[18]++, params);
  /* istanbul ignore next */
  cov_gb3vul3za().s[19]++;
  try {
    /* istanbul ignore next */
    cov_gb3vul3za().s[20]++;
    await prisma.user.delete({
      where: {
        id
      }
    });
    /* istanbul ignore next */
    cov_gb3vul3za().s[21]++;
    return NextResponse.json({
      message: "User deleted"
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_gb3vul3za().s[22]++;
    console.error("Error deleting user:", error);
    /* istanbul ignore next */
    cov_gb3vul3za().s[23]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_gb3vul3za().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_gb3vul3za().b[3][1]++, "Error deleting user")
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ2IzdnVsM3phIiwiYWN0dWFsQ292ZXJhZ2UiLCJOZXh0UmVzcG9uc2UiLCJwcmlzbWEiLCJHRVQiLCJyZXF1ZXN0IiwiY29udGV4dCIsImYiLCJwYXJhbXMiLCJzIiwiaWQiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiYiIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsImNvbnNvbGUiLCJFcnJvciIsIm1lc3NhZ2UiLCJQVVQiLCJib2R5IiwidXBkYXRlZFVzZXIiLCJ1cGRhdGUiLCJkYXRhIiwiREVMRVRFIiwiZGVsZXRlIl0sInNvdXJjZXMiOlsicm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2FwcC9hcGkvdXNlcnMvW2lkXS9yb3V0ZS50c1xuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIkBsaWIvcHJpc21hXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoXG4gIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxuICBjb250ZXh0OiB7IHBhcmFtczogUHJvbWlzZTx7IGlkOiBzdHJpbmcgfT4gfVxuKSB7XG4gIGNvbnN0IHBhcmFtcyA9IGF3YWl0IGNvbnRleHQucGFyYW1zXG4gIGNvbnN0IHsgaWQgfSA9IHBhcmFtc1xuICB0cnkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7IGlkIH0sXG4gICAgfSlcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIlVzZXIgbm90IGZvdW5kXCIgfSwgeyBzdGF0dXM6IDQwNCB9KVxuICAgIH1cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24odXNlciwgeyBzdGF0dXM6IDIwMCB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB1c2VyOlwiLCBlcnJvcilcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFwiRXJyb3IgZmV0Y2hpbmcgdXNlclwiIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBVVChcbiAgcmVxdWVzdDogTmV4dFJlcXVlc3QsXG4gIGNvbnRleHQ6IHsgcGFyYW1zOiBQcm9taXNlPHsgaWQ6IHN0cmluZyB9PiB9XG4pIHtcbiAgY29uc3QgcGFyYW1zID0gYXdhaXQgY29udGV4dC5wYXJhbXM7XG4gIGNvbnN0IHsgaWQgfSA9IHBhcmFtcztcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgdXBkYXRlZFVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgd2hlcmU6IHsgaWQgfSxcbiAgICAgIGRhdGE6IGJvZHksXG4gICAgfSk7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHVwZGF0ZWRVc2VyLCB7IHN0YXR1czogMjAwIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyB1c2VyOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIkVycm9yIHVwZGF0aW5nIHVzZXJcIiB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gREVMRVRFKFxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcbiAgY29udGV4dDogeyBwYXJhbXM6IFByb21pc2U8eyBpZDogc3RyaW5nIH0+IH1cbikge1xuICBjb25zdCBwYXJhbXMgPSBhd2FpdCBjb250ZXh0LnBhcmFtcztcbiAgY29uc3QgeyBpZCB9ID0gcGFyYW1zO1xuICB0cnkge1xuICAgIGF3YWl0IHByaXNtYS51c2VyLmRlbGV0ZSh7XG4gICAgICB3aGVyZTogeyBpZCB9LFxuICAgIH0pO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IG1lc3NhZ2U6IFwiVXNlciBkZWxldGVkXCIgfSwgeyBzdGF0dXM6IDIwMCB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGVsZXRpbmcgdXNlcjpcIiwgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJFcnJvciBkZWxldGluZyB1c2VyXCIgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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