{"version":3,"names":["cov_gb3vul3za","actualCoverage","NextResponse","prisma","GET","request","context","f","params","s","id","user","findUnique","where","b","json","error","status","console","Error","message","PUT","body","updatedUser","update","data","DELETE","delete"],"sources":["route.ts"],"sourcesContent":["// src/app/api/users/[id]/route.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\n\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  const params = await context.params\n  const { id } = params\n  try {\n    const user = await prisma.user.findUnique({\n      where: { id },\n    })\n    if (!user) {\n      return NextResponse.json({ error: \"User not found\" }, { status: 404 })\n    }\n    return NextResponse.json(user, { status: 200 })\n  } catch (error) {\n    console.error(\"Error fetching user:\", error)\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : \"Error fetching user\" },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function PUT(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  const params = await context.params;\n  const { id } = params;\n  try {\n    const body = await request.json();\n    const updatedUser = await prisma.user.update({\n      where: { id },\n      data: body,\n    });\n    return NextResponse.json(updatedUser, { status: 200 });\n  } catch (error) {\n    console.error(\"Error updating user:\", error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : \"Error updating user\" },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  const params = await context.params;\n  const { id } = params;\n  try {\n    await prisma.user.delete({\n      where: { id },\n    });\n    return NextResponse.json({ message: \"User deleted\" }, { status: 200 });\n  } catch (error) {\n    console.error(\"Error deleting user:\", error);\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : \"Error deleting user\" },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}