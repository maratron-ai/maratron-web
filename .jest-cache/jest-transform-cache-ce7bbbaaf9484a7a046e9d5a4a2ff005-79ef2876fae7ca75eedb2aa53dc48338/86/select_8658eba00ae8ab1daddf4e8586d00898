db1940302ffa1a55cc4596cfb3251cf2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectValue = exports.SelectTrigger = exports.SelectItem = exports.SelectGroup = exports.SelectContent = exports.Select = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var SelectPrimitive = _interopRequireWildcard(require("@radix-ui/react-select"));
var _lucideReact = require("lucide-react");
var _cn = require("@lib/utils/cn");
const _excluded = ["className", "children"],
  _excluded2 = ["className", "children"],
  _excluded3 = ["className", "children"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/select.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = React.createElement;
const Select = exports.Select = SelectPrimitive.Root;
const SelectGroup = exports.SelectGroup = SelectPrimitive.Group;
const SelectValue = exports.SelectValue = SelectPrimitive.Value;
const SelectTrigger = exports.SelectTrigger = /*#__PURE__*/React.forwardRef((_ref, ref) => {
  let {
      className,
      children
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return __jsx(SelectPrimitive.Trigger, (0, _extends2.default)({
    ref: ref,
    className: (0, _cn.cn)("flex h-10 w-full items-center justify-between rounded-md border border-accent-2 bg-accent-2 px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-accent-2 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 3
    }
  }), children, __jsx(SelectPrimitive.Icon, {
    asChild: true,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 5
    }
  }, __jsx(_lucideReact.ChevronDown, {
    className: "h-4 w-4 opacity-50",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 7
    }
  })));
});
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;
const SelectContent = exports.SelectContent = /*#__PURE__*/React.forwardRef((_ref2, ref) => {
  let {
      className,
      children
    } = _ref2,
    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return __jsx(SelectPrimitive.Portal, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 3
    }
  }, __jsx(SelectPrimitive.Content, (0, _extends2.default)({
    ref: ref,
    className: (0, _cn.cn)("relative z-50 max-h-60 w-full overflow-auto rounded-md border bg-background text-foreground shadow-md", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 5
    }
  }), __jsx(SelectPrimitive.ScrollUpButton, {
    className: "flex cursor-default items-center justify-center py-1",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }
  }, __jsx(_lucideReact.ChevronUp, {
    className: "h-4 w-4",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  })), __jsx(SelectPrimitive.Viewport, {
    className: "p-1",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 7
    }
  }, children), __jsx(SelectPrimitive.ScrollDownButton, {
    className: "flex cursor-default items-center justify-center py-1",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 7
    }
  }, __jsx(_lucideReact.ChevronDown, {
    className: "h-4 w-4",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 9
    }
  }))));
});
SelectContent.displayName = SelectPrimitive.Content.displayName;
const SelectItem = exports.SelectItem = /*#__PURE__*/React.forwardRef((_ref3, ref) => {
  let {
      className,
      children
    } = _ref3,
    props = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);
  return __jsx(SelectPrimitive.Item, (0, _extends2.default)({
    ref: ref,
    className: (0, _cn.cn)("relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm focus:bg-accent focus:text-accent-foreground focus:outline-none", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 3
    }
  }), __jsx(SelectPrimitive.ItemText, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 5
    }
  }, children), __jsx(SelectPrimitive.ItemIndicator, {
    className: "absolute right-2 flex h-3.5 w-3.5 items-center justify-center",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 5
    }
  }, __jsx(_lucideReact.Check, {
    className: "h-4 w-4",
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 7
    }
  })));
});
SelectItem.displayName = SelectPrimitive.Item.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,