962fbc925c4711bd8ca481a5679699df
/* istanbul ignore next */
function cov_g8vrzrgm6() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/auth/login/route.ts";
  var hash = "3d6904fcffee08afe33a78e660e345aa748d26e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/auth/login/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "1": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "2": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "3": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "4": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "5": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 25,
          column: 8
        }
      },
      "6": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "7": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "8": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 33,
          column: 8
        }
      },
      "9": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "10": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "11": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 20
        }
      },
      "12": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "setCookie",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 18
          }
        },
        loc: {
          start: {
            line: 6,
            column: 72
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 49
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 27
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3d6904fcffee08afe33a78e660e345aa748d26e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_g8vrzrgm6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_g8vrzrgm6();
// app/api/auth/login/route.ts
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";

// set cookie
function setCookie(response, name, value) {
  /* istanbul ignore next */
  cov_g8vrzrgm6().f[0]++;
  cov_g8vrzrgm6().s[0]++;
  response.cookies.set(name, value, {
    httpOnly: true,
    path: "/",
    sameSite: "lax",
    // secure: true, // use in production with HTTPS
    maxAge: 60 * 60 * 24 * 7 // 1 week
  });
}
export async function POST(request) {
  /* istanbul ignore next */
  cov_g8vrzrgm6().f[1]++;
  cov_g8vrzrgm6().s[1]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_g8vrzrgm6().s[2]++, await request.json());
    const {
      email,
      password
    } =
    /* istanbul ignore next */
    (cov_g8vrzrgm6().s[3]++, body);
    /* istanbul ignore next */
    cov_g8vrzrgm6().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_g8vrzrgm6().b[1][0]++, !email) ||
    /* istanbul ignore next */
    (cov_g8vrzrgm6().b[1][1]++, !password)) {
      /* istanbul ignore next */
      cov_g8vrzrgm6().b[0][0]++;
      cov_g8vrzrgm6().s[5]++;
      return NextResponse.json({
        error: "Email and password are required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_g8vrzrgm6().b[0][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_g8vrzrgm6().s[6]++, await prisma.user.findUnique({
      where: {
        email
      }
    }));
    /* istanbul ignore next */
    cov_g8vrzrgm6().s[7]++;
    if (!user) {
      /* istanbul ignore next */
      cov_g8vrzrgm6().b[2][0]++;
      cov_g8vrzrgm6().s[8]++;
      return NextResponse.json({
        error: "Invalid email or password"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_g8vrzrgm6().b[2][1]++;
    }

    // For now, no password check

    // Set a simple session cookie (user ID)
    const response =
    /* istanbul ignore next */
    (cov_g8vrzrgm6().s[9]++, NextResponse.json(user, {
      status: 200
    }));
    /* istanbul ignore next */
    cov_g8vrzrgm6().s[10]++;
    setCookie(response, "session_user", user.id);
    /* istanbul ignore next */
    cov_g8vrzrgm6().s[11]++;
    return response;
  } catch {
    /* istanbul ignore next */
    cov_g8vrzrgm6().s[12]++;
    return NextResponse.json({
      error: "Server error"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZzh2cnpyZ202IiwiYWN0dWFsQ292ZXJhZ2UiLCJOZXh0UmVzcG9uc2UiLCJwcmlzbWEiLCJzZXRDb29raWUiLCJyZXNwb25zZSIsIm5hbWUiLCJ2YWx1ZSIsImYiLCJzIiwiY29va2llcyIsInNldCIsImh0dHBPbmx5IiwicGF0aCIsInNhbWVTaXRlIiwibWF4QWdlIiwiUE9TVCIsInJlcXVlc3QiLCJib2R5IiwianNvbiIsImVtYWlsIiwicGFzc3dvcmQiLCJiIiwiZXJyb3IiLCJzdGF0dXMiLCJ1c2VyIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaWQiXSwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhcHAvYXBpL2F1dGgvbG9naW4vcm91dGUudHNcbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCJAbGliL3ByaXNtYVwiO1xuXG4vLyBzZXQgY29va2llXG5mdW5jdGlvbiBzZXRDb29raWUocmVzcG9uc2U6IE5leHRSZXNwb25zZSwgbmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gIHJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCB7XG4gICAgaHR0cE9ubHk6IHRydWUsXG4gICAgcGF0aDogXCIvXCIsXG4gICAgc2FtZVNpdGU6IFwibGF4XCIsXG4gICAgLy8gc2VjdXJlOiB0cnVlLCAvLyB1c2UgaW4gcHJvZHVjdGlvbiB3aXRoIEhUVFBTXG4gICAgbWF4QWdlOiA2MCAqIDYwICogMjQgKiA3LCAvLyAxIHdlZWtcbiAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSBib2R5O1xuXG4gICAgaWYgKCFlbWFpbCB8fCAhcGFzc3dvcmQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJFbWFpbCBhbmQgcGFzc3dvcmQgYXJlIHJlcXVpcmVkXCIgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHsgd2hlcmU6IHsgZW1haWwgfSB9KTtcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJJbnZhbGlkIGVtYWlsIG9yIHBhc3N3b3JkXCIgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIEZvciBub3csIG5vIHBhc3N3b3JkIGNoZWNrXG5cbiAgICAvLyBTZXQgYSBzaW1wbGUgc2Vzc2lvbiBjb29raWUgKHVzZXIgSUQpXG4gICAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UuanNvbih1c2VyLCB7IHN0YXR1czogMjAwIH0pO1xuICAgIHNldENvb2tpZShyZXNwb25zZSwgXCJzZXNzaW9uX3VzZXJcIiwgdXNlci5pZCk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIlNlcnZlciBlcnJvclwiIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFmWjtBQUNBLFNBQXNCRSxZQUFZLFFBQVEsYUFBYTtBQUN2RCxTQUFTQyxNQUFNLFFBQVEsYUFBYTs7QUFFcEM7QUFDQSxTQUFTQyxTQUFTQSxDQUFDQyxRQUFzQixFQUFFQyxJQUFZLEVBQUVDLEtBQWEsRUFBRTtFQUFBO0VBQUFQLGFBQUEsR0FBQVEsQ0FBQTtFQUFBUixhQUFBLEdBQUFTLENBQUE7RUFDdEVKLFFBQVEsQ0FBQ0ssT0FBTyxDQUFDQyxHQUFHLENBQUNMLElBQUksRUFBRUMsS0FBSyxFQUFFO0lBQ2hDSyxRQUFRLEVBQUUsSUFBSTtJQUNkQyxJQUFJLEVBQUUsR0FBRztJQUNUQyxRQUFRLEVBQUUsS0FBSztJQUNmO0lBQ0FDLE1BQU0sRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUU7RUFDNUIsQ0FBQyxDQUFDO0FBQ0o7QUFFQSxPQUFPLGVBQWVDLElBQUlBLENBQUNDLE9BQW9CLEVBQUU7RUFBQTtFQUFBakIsYUFBQSxHQUFBUSxDQUFBO0VBQUFSLGFBQUEsR0FBQVMsQ0FBQTtFQUMvQyxJQUFJO0lBQ0YsTUFBTVMsSUFBSTtJQUFBO0lBQUEsQ0FBQWxCLGFBQUEsR0FBQVMsQ0FBQSxPQUFHLE1BQU1RLE9BQU8sQ0FBQ0UsSUFBSSxDQUFDLENBQUM7SUFDakMsTUFBTTtNQUFFQyxLQUFLO01BQUVDO0lBQVMsQ0FBQztJQUFBO0lBQUEsQ0FBQXJCLGFBQUEsR0FBQVMsQ0FBQSxPQUFHUyxJQUFJO0lBQUM7SUFBQWxCLGFBQUEsR0FBQVMsQ0FBQTtJQUVqQztJQUFJO0lBQUEsQ0FBQVQsYUFBQSxHQUFBc0IsQ0FBQSxXQUFDRixLQUFLO0lBQUE7SUFBQSxDQUFBcEIsYUFBQSxHQUFBc0IsQ0FBQSxVQUFJLENBQUNELFFBQVEsR0FBRTtNQUFBO01BQUFyQixhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFTLENBQUE7TUFDdkIsT0FBT1AsWUFBWSxDQUFDaUIsSUFBSSxDQUN0QjtRQUFFSSxLQUFLLEVBQUU7TUFBa0MsQ0FBQyxFQUM1QztRQUFFQyxNQUFNLEVBQUU7TUFBSSxDQUNoQixDQUFDO0lBQ0gsQ0FBQztJQUFBO0lBQUE7TUFBQXhCLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUVELE1BQU1HLElBQUk7SUFBQTtJQUFBLENBQUF6QixhQUFBLEdBQUFTLENBQUEsT0FBRyxNQUFNTixNQUFNLENBQUNzQixJQUFJLENBQUNDLFVBQVUsQ0FBQztNQUFFQyxLQUFLLEVBQUU7UUFBRVA7TUFBTTtJQUFFLENBQUMsQ0FBQztJQUFDO0lBQUFwQixhQUFBLEdBQUFTLENBQUE7SUFDaEUsSUFBSSxDQUFDZ0IsSUFBSSxFQUFFO01BQUE7TUFBQXpCLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQVMsQ0FBQTtNQUNULE9BQU9QLFlBQVksQ0FBQ2lCLElBQUksQ0FDdEI7UUFBRUksS0FBSyxFQUFFO01BQTRCLENBQUMsRUFDdEM7UUFBRUMsTUFBTSxFQUFFO01BQUksQ0FDaEIsQ0FBQztJQUNILENBQUM7SUFBQTtJQUFBO01BQUF4QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7O0lBRUQ7O0lBRUE7SUFDQSxNQUFNakIsUUFBUTtJQUFBO0lBQUEsQ0FBQUwsYUFBQSxHQUFBUyxDQUFBLE9BQUdQLFlBQVksQ0FBQ2lCLElBQUksQ0FBQ00sSUFBSSxFQUFFO01BQUVELE1BQU0sRUFBRTtJQUFJLENBQUMsQ0FBQztJQUFDO0lBQUF4QixhQUFBLEdBQUFTLENBQUE7SUFDMURMLFNBQVMsQ0FBQ0MsUUFBUSxFQUFFLGNBQWMsRUFBRW9CLElBQUksQ0FBQ0csRUFBRSxDQUFDO0lBQUM7SUFBQTVCLGFBQUEsR0FBQVMsQ0FBQTtJQUU3QyxPQUFPSixRQUFRO0VBQ2pCLENBQUMsQ0FBQyxNQUFNO0lBQUE7SUFBQUwsYUFBQSxHQUFBUyxDQUFBO0lBQ04sT0FBT1AsWUFBWSxDQUFDaUIsSUFBSSxDQUFDO01BQUVJLEtBQUssRUFBRTtJQUFlLENBQUMsRUFBRTtNQUFFQyxNQUFNLEVBQUU7SUFBSSxDQUFDLENBQUM7RUFDdEU7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==