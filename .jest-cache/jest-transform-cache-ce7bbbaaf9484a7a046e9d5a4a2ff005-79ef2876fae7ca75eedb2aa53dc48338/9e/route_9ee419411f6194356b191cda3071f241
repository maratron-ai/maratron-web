1595f7622c1253aafa4d1bdc95e444e1
/* istanbul ignore next */
function cov_2fgtilp3yb() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/groups/[id]/join/route.ts";
  var hash = "3baca3bc369c92969a9286832c232a92d25fdba9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/groups/[id]/join/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "1": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "2": {
        start: {
          line: 8,
          column: 34
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "3": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 79
        }
      },
      "5": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "6": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 69
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "8": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 20,
          column: 7
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 82
        }
      },
      "12": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 77
        }
      },
      "13": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 81
        }
      },
      "15": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 46
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "19": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "20": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "21": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "22": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 79
        }
      },
      "24": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "26": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "27": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "28": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "POST",
        decl: {
          start: {
            line: 5,
            column: 22
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 87
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "DELETE",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 28
          }
        },
        loc: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 70
          }
        }, {
          start: {
            line: 21,
            column: 74
          },
          end: {
            line: 21,
            column: 76
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 24,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 24,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3baca3bc369c92969a9286832c232a92d25fdba9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fgtilp3yb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fgtilp3yb();
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
import bcrypt from "bcryptjs";
export async function POST(req, ctx) {
  /* istanbul ignore next */
  cov_2fgtilp3yb().f[0]++;
  const params =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[0]++, await ctx.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[1]++, params);
  const {
    profileId,
    password
  } =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[2]++, await req.json());
  /* istanbul ignore next */
  cov_2fgtilp3yb().s[3]++;
  if (!profileId) {
    /* istanbul ignore next */
    cov_2fgtilp3yb().b[0][0]++;
    cov_2fgtilp3yb().s[4]++;
    return NextResponse.json({
      error: "profileId required"
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_2fgtilp3yb().b[0][1]++;
  }
  cov_2fgtilp3yb().s[5]++;
  try {
    const group =
    /* istanbul ignore next */
    (cov_2fgtilp3yb().s[6]++, await prisma.runGroup.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[7]++;
    if (!group) {
      /* istanbul ignore next */
      cov_2fgtilp3yb().b[1][0]++;
      cov_2fgtilp3yb().s[8]++;
      return NextResponse.json({
        error: "Not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fgtilp3yb().b[1][1]++;
    }
    cov_2fgtilp3yb().s[9]++;
    if (group.private) {
      /* istanbul ignore next */
      cov_2fgtilp3yb().b[2][0]++;
      cov_2fgtilp3yb().s[10]++;
      if (!password) {
        /* istanbul ignore next */
        cov_2fgtilp3yb().b[3][0]++;
        cov_2fgtilp3yb().s[11]++;
        return NextResponse.json({
          error: "Password required"
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_2fgtilp3yb().b[3][1]++;
      }
      const ok =
      /* istanbul ignore next */
      (cov_2fgtilp3yb().s[12]++, await bcrypt.compare(String(password),
      /* istanbul ignore next */
      (cov_2fgtilp3yb().b[4][0]++, group.password) ??
      /* istanbul ignore next */
      (cov_2fgtilp3yb().b[4][1]++, "")));
      /* istanbul ignore next */
      cov_2fgtilp3yb().s[13]++;
      if (!ok) {
        /* istanbul ignore next */
        cov_2fgtilp3yb().b[5][0]++;
        cov_2fgtilp3yb().s[14]++;
        return NextResponse.json({
          error: "Invalid password"
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_2fgtilp3yb().b[5][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fgtilp3yb().b[2][1]++;
    }
    cov_2fgtilp3yb().s[15]++;
    await prisma.runGroupMember.upsert({
      where: {
        groupId_socialProfileId: {
          groupId: id,
          socialProfileId: profileId
        }
      },
      update: {},
      create: {
        groupId: id,
        socialProfileId: profileId
      }
    });
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[16]++;
    return NextResponse.json({}, {
      status: 201
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[17]++;
    console.error("Error joining group", err);
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[18]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
export async function DELETE(req, ctx) {
  /* istanbul ignore next */
  cov_2fgtilp3yb().f[1]++;
  const params =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[19]++, await ctx.params);
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[20]++, params);
  const {
    profileId
  } =
  /* istanbul ignore next */
  (cov_2fgtilp3yb().s[21]++, await req.json());
  /* istanbul ignore next */
  cov_2fgtilp3yb().s[22]++;
  if (!profileId) {
    /* istanbul ignore next */
    cov_2fgtilp3yb().b[6][0]++;
    cov_2fgtilp3yb().s[23]++;
    return NextResponse.json({
      error: "profileId required"
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_2fgtilp3yb().b[6][1]++;
  }
  cov_2fgtilp3yb().s[24]++;
  try {
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[25]++;
    await prisma.runGroupMember.delete({
      where: {
        groupId_socialProfileId: {
          groupId: id,
          socialProfileId: profileId
        }
      }
    });
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[26]++;
    return NextResponse.json({});
  } catch (err) {
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[27]++;
    console.error("Error leaving group", err);
    /* istanbul ignore next */
    cov_2fgtilp3yb().s[28]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZndGlscDN5YiIsImFjdHVhbENvdmVyYWdlIiwiTmV4dFJlc3BvbnNlIiwicHJpc21hIiwiYmNyeXB0IiwiUE9TVCIsInJlcSIsImN0eCIsImYiLCJwYXJhbXMiLCJzIiwiaWQiLCJwcm9maWxlSWQiLCJwYXNzd29yZCIsImpzb24iLCJiIiwiZXJyb3IiLCJzdGF0dXMiLCJncm91cCIsInJ1bkdyb3VwIiwiZmluZFVuaXF1ZSIsIndoZXJlIiwicHJpdmF0ZSIsIm9rIiwiY29tcGFyZSIsIlN0cmluZyIsInJ1bkdyb3VwTWVtYmVyIiwidXBzZXJ0IiwiZ3JvdXBJZF9zb2NpYWxQcm9maWxlSWQiLCJncm91cElkIiwic29jaWFsUHJvZmlsZUlkIiwidXBkYXRlIiwiY3JlYXRlIiwiZXJyIiwiY29uc29sZSIsIkRFTEVURSIsImRlbGV0ZSJdLCJzb3VyY2VzIjpbInJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHByaXNtYSB9IGZyb20gXCJAbGliL3ByaXNtYVwiO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0anNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBOZXh0UmVxdWVzdCwgY3R4OiB7IHBhcmFtczogUHJvbWlzZTx7IGlkOiBzdHJpbmcgfT4gfSkge1xuICBjb25zdCBwYXJhbXMgPSBhd2FpdCBjdHgucGFyYW1zO1xuICBjb25zdCB7IGlkIH0gPSBwYXJhbXM7XG4gIGNvbnN0IHsgcHJvZmlsZUlkLCBwYXNzd29yZCB9ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgaWYgKCFwcm9maWxlSWQpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJwcm9maWxlSWQgcmVxdWlyZWRcIiB9LCB7IHN0YXR1czogNDAwIH0pO1xuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgZ3JvdXAgPSBhd2FpdCBwcmlzbWEucnVuR3JvdXAuZmluZFVuaXF1ZSh7IHdoZXJlOiB7IGlkIH0gfSk7XG4gICAgaWYgKCFncm91cCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiTm90IGZvdW5kXCIgfSwgeyBzdGF0dXM6IDQwNCB9KTtcbiAgICB9XG4gICAgaWYgKGdyb3VwLnByaXZhdGUpIHtcbiAgICAgIGlmICghcGFzc3dvcmQpIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiUGFzc3dvcmQgcmVxdWlyZWRcIiB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgICAgfVxuICAgICAgY29uc3Qgb2sgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShTdHJpbmcocGFzc3dvcmQpLCBncm91cC5wYXNzd29yZCA/PyBcIlwiKTtcbiAgICAgIGlmICghb2spIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiSW52YWxpZCBwYXNzd29yZFwiIH0sIHsgc3RhdHVzOiA0MDMgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGF3YWl0IHByaXNtYS5ydW5Hcm91cE1lbWJlci51cHNlcnQoe1xuICAgICAgd2hlcmU6IHsgZ3JvdXBJZF9zb2NpYWxQcm9maWxlSWQ6IHsgZ3JvdXBJZDogaWQsIHNvY2lhbFByb2ZpbGVJZDogcHJvZmlsZUlkIH0gfSxcbiAgICAgIHVwZGF0ZToge30sXG4gICAgICBjcmVhdGU6IHsgZ3JvdXBJZDogaWQsIHNvY2lhbFByb2ZpbGVJZDogcHJvZmlsZUlkIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHt9LCB7IHN0YXR1czogMjAxIH0pO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igam9pbmluZyBncm91cFwiLCBlcnIpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZFwiIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIERFTEVURShcbiAgcmVxOiBOZXh0UmVxdWVzdCxcbiAgY3R4OiB7IHBhcmFtczogUHJvbWlzZTx7IGlkOiBzdHJpbmcgfT4gfVxuKSB7XG4gIGNvbnN0IHBhcmFtcyA9IGF3YWl0IGN0eC5wYXJhbXM7XG4gIGNvbnN0IHsgaWQgfSA9IHBhcmFtcztcbiAgY29uc3QgeyBwcm9maWxlSWQgfSA9IGF3YWl0IHJlcS5qc29uKCk7XG4gIGlmICghcHJvZmlsZUlkKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwicHJvZmlsZUlkIHJlcXVpcmVkXCIgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgfVxuICB0cnkge1xuICAgIGF3YWl0IHByaXNtYS5ydW5Hcm91cE1lbWJlci5kZWxldGUoe1xuICAgICAgd2hlcmU6IHsgZ3JvdXBJZF9zb2NpYWxQcm9maWxlSWQ6IHsgZ3JvdXBJZDogaWQsIHNvY2lhbFByb2ZpbGVJZDogcHJvZmlsZUlkIH0gfSxcbiAgICB9KTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe30pO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgbGVhdmluZyBncm91cFwiLCBlcnIpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZFwiIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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