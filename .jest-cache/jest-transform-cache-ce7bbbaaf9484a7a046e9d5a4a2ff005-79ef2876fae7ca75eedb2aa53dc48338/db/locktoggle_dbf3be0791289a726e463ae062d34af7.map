{"version":3,"names":["_lucideReact","require","_button","_jsxFileName","__jsx","_react","default","createElement","LockToggle","locked","onChange","className","size","Button","type","variant","onClick","__self","__source","fileName","lineNumber","columnNumber","Lock","Unlock"],"sources":["lock-toggle.tsx"],"sourcesContent":["import { Lock, Unlock } from \"lucide-react\";\nimport { Button } from \"./button\";\n\ninterface LockToggleProps {\n  locked: boolean;\n  onChange?: (locked: boolean) => void;\n  className?: string;\n  size?: \"icon\" | \"sm\" | \"default\" | \"lg\";\n}\n\nexport default function LockToggle({ locked, onChange, className, size }: LockToggleProps) {\n  return (\n    <Button\n      type=\"button\"\n      variant=\"ghost\"\n      size={size || \"icon\"}\n      className={className}\n      aria-label={locked ? \"group is private\" : \"group is public\"}\n      onClick={() => onChange?.(!locked)}\n    >\n      {locked ? <Lock className=\"h-10 w-10\" /> : <Unlock className=\"h-10 w-10\" />}\n    </Button>\n  );\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAAkC,IAAAE,YAAA;AAAA,IAAAC,KAAA,GAAAC,MAAA,CAAAC,OAAA,CAAAC,aAAA;AASnB,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAsB,CAAC,EAAE;EACzF,OACER,KAAA,CAACF,OAAA,CAAAW,MAAM;IACLC,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAC,OAAO;IACfH,IAAI,EAAEA,IAAI,IAAI,MAAO;IACrBD,SAAS,EAAEA,SAAU;IACrB,cAAYF,MAAM,GAAG,kBAAkB,GAAG,iBAAkB;IAC5DO,OAAO,EAAEA,CAAA,KAAMN,QAAQ,GAAG,CAACD,MAAM,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAhB,YAAA;MAAAiB,UAAA;MAAAC,YAAA;IAAA;EAAA,GAElCZ,MAAM,GAAGL,KAAA,CAACJ,YAAA,CAAAsB,IAAI;IAACX,SAAS,EAAC,WAAW;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAhB,YAAA;MAAAiB,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,GAAGjB,KAAA,CAACJ,YAAA,CAAAuB,MAAM;IAACZ,SAAS,EAAC,WAAW;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAhB,YAAA;MAAAiB,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpE,CAAC;AAEb","ignoreList":[]}