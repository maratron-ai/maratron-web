{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_axios","_social","jest","mockedAxios","axios","describe","afterEach","clearAllMocks","it","post","mockResolvedValue","data","id","userId","username","result","createSocialProfile","expect","toHaveBeenCalledWith","toEqual","followUser","followerId","followingId","delete","unfollowUser","get","following","isFollowing","toBe","socialProfileId","distance","time","createdAt","Date","updatedAt","createPost","groupId","put","updateSocialProfile","bio","likePost","unlikePost","comment","postId","text","addComment","comments","listComments","createGroup","name","ownerId","imageUrl","joinGroup","profileId","password","undefined","leaveGroup","posts","listGroupPosts","groups","listGroups"],"sources":["social.test.ts"],"sourcesContent":["import axios from \"axios\";\nimport {\n  createSocialProfile,\n  followUser,\n  unfollowUser,\n  createPost,\n  isFollowing,\n  updateSocialProfile,\n  likePost,\n  unlikePost,\n  addComment,\n  listComments,\n  createGroup,\n  joinGroup,\n  leaveGroup,\n  listGroupPosts,\n  listGroups,\n} from \"../social\";\nimport type { RunPost, Comment, RunGroup } from \"@maratypes/social\";\n\njest.mock(\"axios\");\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe(\"social api helpers\", () => {\n  afterEach(() => jest.clearAllMocks());\n\n  it(\"createSocialProfile posts data\", async () => {\n    mockedAxios.post.mockResolvedValue({ data: { id: \"p1\" } });\n    const data = { userId: \"u1\", username: \"tester\" };\n    const result = await createSocialProfile(data);\n    expect(mockedAxios.post).toHaveBeenCalledWith(\"/api/social/profile\", data);\n    expect(result).toEqual({ id: \"p1\" });\n  });\n\n  it(\"followUser posts data\", async () => {\n    mockedAxios.post.mockResolvedValue({ data: {} });\n    await followUser(\"a\", \"b\");\n    expect(mockedAxios.post).toHaveBeenCalledWith(\"/api/social/follow\", { followerId: \"a\", followingId: \"b\" });\n  });\n\n  it(\"unfollowUser deletes data\", async () => {\n    mockedAxios.delete.mockResolvedValue({ data: {} });\n    await unfollowUser(\"a\", \"b\");\n    expect(mockedAxios.delete).toHaveBeenCalledWith(\"/api/social/follow\", { data: { followerId: \"a\", followingId: \"b\" } });\n  });\n\n  it(\"isFollowing fetches data\", async () => {\n    mockedAxios.get.mockResolvedValue({ data: { following: true } });\n    const result = await isFollowing(\"a\", \"b\");\n    expect(mockedAxios.get).toHaveBeenCalledWith(\n      \"/api/social/follow?followerId=a&followingId=b\"\n    );\n    expect(result).toBe(true);\n  });\n\n  it(\"createPost posts data\", async () => {\n    const post: RunPost = {\n      id: \"1\",\n      socialProfileId: \"p\",\n      distance: 1,\n      time: \"00:10:00\",\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    } as RunPost;\n    mockedAxios.post.mockResolvedValue({ data: post });\n    const result = await createPost({ distance: 1 });\n    expect(mockedAxios.post).toHaveBeenCalledWith(\"/api/social/posts\", { distance: 1 });\n    expect(result).toEqual(post);\n  });\n\n  it(\"createPost posts to group when groupId provided\", async () => {\n    const post: RunPost = {\n      id: \"1\",\n      socialProfileId: \"p\",\n      distance: 1,\n      time: \"00:10:00\",\n      groupId: \"g1\",\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    } as RunPost;\n    mockedAxios.post.mockResolvedValue({ data: post });\n    const result = await createPost({ distance: 1, groupId: \"g1\" });\n    expect(mockedAxios.post).toHaveBeenCalledWith(\n      \"/api/social/groups/g1/posts\",\n      { distance: 1 }\n    );\n    expect(result).toEqual(post);\n  });\n\n  it(\"updateSocialProfile puts data\", async () => {\n    mockedAxios.put.mockResolvedValue({ data: { id: \"p1\", username: \"t\" } });\n    const result = await updateSocialProfile(\"p1\", { bio: \"hi\" });\n    expect(mockedAxios.put).toHaveBeenCalledWith(\"/api/social/profile/byId/p1\", { bio: \"hi\" });\n    expect(result).toEqual({ id: \"p1\", username: \"t\" });\n  });\n\n  it(\"likePost posts data\", async () => {\n    mockedAxios.post.mockResolvedValue({ data: {} });\n    await likePost(\"post1\", \"profile1\");\n    expect(mockedAxios.post).toHaveBeenCalledWith(\n      \"/api/social/posts/post1/like\",\n      { socialProfileId: \"profile1\" }\n    );\n  });\n\n  it(\"unlikePost deletes data\", async () => {\n    mockedAxios.delete.mockResolvedValue({ data: {} });\n    await unlikePost(\"post1\", \"profile1\");\n    expect(mockedAxios.delete).toHaveBeenCalledWith(\n      \"/api/social/posts/post1/like\",\n      { data: { socialProfileId: \"profile1\" } }\n    );\n  });\n\n  it(\"addComment posts data\", async () => {\n    const comment: Comment = {\n      id: \"c1\",\n      postId: \"p\",\n      socialProfileId: \"s\",\n      text: \"hi\",\n      createdAt: new Date(),\n    } as Comment;\n    mockedAxios.post.mockResolvedValue({ data: comment });\n    const result = await addComment(\"p\", \"s\", \"hi\");\n    expect(mockedAxios.post).toHaveBeenCalledWith(\n      \"/api/social/posts/p/comments\",\n      { socialProfileId: \"s\", text: \"hi\" }\n    );\n    expect(result).toEqual(comment);\n  });\n\n  it(\"listComments gets data\", async () => {\n    const comments: Comment[] = [];\n    mockedAxios.get.mockResolvedValue({ data: comments });\n    const result = await listComments(\"p\");\n    expect(mockedAxios.get).toHaveBeenCalledWith(\n      \"/api/social/posts/p/comments\"\n    );\n    expect(result).toEqual(comments);\n  });\n\n  it(\"createGroup posts data\", async () => {\n    mockedAxios.post.mockResolvedValue({ data: { id: \"g1\" } });\n    const result = await createGroup({ name: \"Test\", ownerId: \"p1\", imageUrl: \"img\" });\n    expect(mockedAxios.post).toHaveBeenCalledWith(\"/api/social/groups\", {\n      name: \"Test\",\n      ownerId: \"p1\",\n      imageUrl: \"img\",\n    });\n    expect(result).toEqual({ id: \"g1\" });\n  });\n\n  it(\"joinGroup posts data\", async () => {\n    mockedAxios.post.mockResolvedValue({ data: {} });\n    await joinGroup(\"g1\", \"p1\");\n    expect(mockedAxios.post).toHaveBeenCalledWith(\n      \"/api/social/groups/g1/join\",\n      { profileId: \"p1\", password: undefined }\n    );\n  });\n\n  it(\"leaveGroup deletes data\", async () => {\n    mockedAxios.delete.mockResolvedValue({ data: {} });\n    await leaveGroup(\"g1\", \"p1\");\n    expect(mockedAxios.delete).toHaveBeenCalledWith(\n      \"/api/social/groups/g1/join\",\n      { data: { profileId: \"p1\" } }\n    );\n  });\n\n  it(\"listGroupPosts gets data\", async () => {\n    const posts: RunPost[] = [];\n    mockedAxios.get.mockResolvedValue({ data: posts });\n    const result = await listGroupPosts(\"g1\", \"p1\");\n    expect(mockedAxios.get).toHaveBeenCalledWith(\n      \"/api/social/groups/g1/posts?profileId=p1\"\n    );\n    expect(result).toEqual(posts);\n  });\n\n  it(\"listGroups gets data\", async () => {\n    const groups: RunGroup[] = [];\n    mockedAxios.get.mockResolvedValue({ data: groups });\n    const result = await listGroups(\"p1\");\n    expect(mockedAxios.get).toHaveBeenCalledWith(\n      \"/api/social/groups?profileId=p1\"\n    );\n    expect(result).toEqual(groups);\n  });\n});\n"],"mappings":"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","ignoreList":[]}