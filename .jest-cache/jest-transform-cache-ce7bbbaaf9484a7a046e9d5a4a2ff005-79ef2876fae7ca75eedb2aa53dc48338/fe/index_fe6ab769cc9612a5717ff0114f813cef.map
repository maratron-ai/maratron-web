{"version":3,"names":["_axios","_interopRequireDefault","require","cov_ixam26ckc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","mapRun","dto","id","date","Date","duration","distance","distanceUnit","trainingEnvironment","pace","paceUnit","unit","undefined","elevationGain","elevationGainUnit","notes","userId","shoeId","createRun","data","axios","post","exports","updateRun","runId","put","getRun","get","deleteRun","delete","listRuns","map"],"sources":["index.ts"],"sourcesContent":["// src/lib/api/run/index.ts\nimport axios from \"axios\";\nimport { \n  Run, \n} from \"@maratypes/run\";\nimport {\n  DistanceUnit,\n  ElevationUnit,\n  TrainingEnvironment,\n} from \"@maratypes/basics\";\n\ninterface RawRunDto {\n  id?: string;\n  date: string;                  // ISO string\n  duration: string;\n  distance: number;\n  distanceUnit: DistanceUnit;\n  trainingEnvironment?: TrainingEnvironment;\n  name?: string;\n  pace?: string;                 // e.g. \"07:30\"\n  paceUnit?: DistanceUnit;      \n  elevationGain?: number;\n  elevationGainUnit?: ElevationUnit;\n  notes?: string;\n  userId: string;\n  shoeId?: string;\n}\n\nconst mapRun = (dto: RawRunDto): Run => ({\n  id: dto.id,\n  date: new Date(dto.date),\n  duration: dto.duration,\n  distance: dto.distance,\n  distanceUnit: dto.distanceUnit,\n  trainingEnvironment: dto.trainingEnvironment,\n  name: dto.name,\n  pace:\n    dto.pace && dto.paceUnit\n      ? { pace: dto.pace, unit: dto.paceUnit }\n      : undefined,\n  elevationGain: dto.elevationGain,\n  elevationGainUnit: dto.elevationGainUnit,\n  notes: dto.notes,\n  userId: dto.userId,\n  shoeId: dto.shoeId,\n});\n\n\nexport const createRun = async (\n  data: Partial<RawRunDto>\n): Promise<Run> => {\n  const { data: dto } = await axios.post<RawRunDto>(\"/api/runs\", data);\n  return mapRun(dto);\n};\n\nexport const updateRun = async (\n  runId: string,\n  data: Partial<RawRunDto>\n): Promise<Run> => {\n  const { data: dto } = await axios.put<RawRunDto>(\n    `/api/runs/${runId}`,\n    data\n  );\n  return mapRun(dto);\n};\n\nexport const getRun = async (runId: string): Promise<Run> => {\n  const { data: dto } = await axios.get<RawRunDto>(\n    `/api/runs/${runId}`\n  );\n  return mapRun(dto);\n};\n\nexport const deleteRun = async (runId: string): Promise<void> => {\n  await axios.delete(`/api/runs/${runId}`);\n};\n\nexport const listRuns = async (userId: string): Promise<Run[]> => {\n  const { data } = await axios.get<RawRunDto[]>(`/api/runs?userId=${userId}`);\n  return data.map(mapRun);\n};\n"],"mappings":"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","ignoreList":[]}