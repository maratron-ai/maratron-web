{"version":3,"names":["_longDistancePlan","require","describe","it","plan","generateLongDistancePlan","TrainingLevel","Beginner","week4","schedule","week5","expect","notes","toContain","weeklyMileage","toBeLessThan","weeks","lastWeek","runs","toHaveLength","lastRun","type","toBe","firstLong","find","r","taperWeek","taperLong","mileage","toBeLessThanOrEqual","undefined","easy","forEach","week","filter","day","longRun","toBeCloseTo","Math","round"],"sources":["longDistancePlan.test.ts"],"sourcesContent":["import { generateLongDistancePlan, TrainingLevel } from \"../running/plans/longDistancePlan\";\n\ndescribe(\"generateLongDistancePlan cutback weeks\", () => {\n  it(\"inserts cutback mileage every 4th week\", () => {\n    const plan = generateLongDistancePlan(\n      12,\n      13.1,\n      \"miles\",\n      TrainingLevel.Beginner,\n      40,\n      13.1\n    );\n    const week4 = plan.schedule[3];\n    const week5 = plan.schedule[4];\n    expect(week4.notes).toContain(\"Cutback\");\n    expect(week4.weeklyMileage).toBeLessThan(week5.weeklyMileage);\n  });\n\n  it(\"sets final run as marathon race\", () => {\n    const weeks = 12;\n    const plan = generateLongDistancePlan(\n      weeks,\n      26.2,\n      \"miles\",\n      TrainingLevel.Beginner,\n      45,\n      26.2\n    );\n    const lastWeek = plan.schedule[weeks - 1];\n    expect(lastWeek.runs).toHaveLength(1);\n    const lastRun = lastWeek.runs[0];\n    expect(lastRun.type).toBe(\"marathon\");\n    expect(lastWeek.notes).toBe(\"Marathon Week!\");\n  });\n\n  it(\"labels half marathon race week\", () => {\n    const weeks = 10;\n    const plan = generateLongDistancePlan(\n      weeks,\n      13.1,\n      \"miles\",\n      TrainingLevel.Beginner,\n      40,\n      13.1\n    );\n    const lastWeek = plan.schedule[weeks - 1];\n    expect(lastWeek.notes).toBe(\"Half Marathon Week!\");\n  });\n\n  it(\"caps taper long run at week one distance\", () => {\n    const plan = generateLongDistancePlan(\n      12,\n      26.2,\n      \"miles\",\n      TrainingLevel.Beginner,\n      45,\n      26.2\n    );\n    const firstLong = plan.schedule[0].runs.find((r) => r.type === \"long\")!;\n    const taperWeek = plan.schedule[plan.weeks - 2];\n    const taperLong = taperWeek.runs.find((r) => r.type === \"long\")!;\n    expect(taperLong.mileage).toBeLessThanOrEqual(firstLong.mileage);\n  });\n\n  it(\"applies run type day mapping\", () => {\n    const plan = generateLongDistancePlan(\n      12,\n      26.2,\n      \"miles\",\n      TrainingLevel.Beginner,\n      45,\n      26.2,\n      undefined,\n      undefined,\n      { easy: \"Monday\" }\n    );\n    plan.schedule.forEach((week) => {\n      week.runs\n        .filter((r) => r.type === \"easy\")\n        .forEach((r) => expect(r.day).toBe(\"Monday\"));\n    });\n  });\n\n  it(\"rounds long runs to the nearest half unit\", () => {\n    const plan = generateLongDistancePlan(\n      12,\n      13.1,\n      \"miles\",\n      TrainingLevel.Beginner,\n      40,\n      13.1\n    );\n    plan.schedule.forEach((week) => {\n      const longRun = week.runs.find((r) => r.type === \"long\" || r.type === \"marathon\");\n      if (longRun) {\n        expect(longRun.mileage * 2).toBeCloseTo(Math.round(longRun.mileage * 2));\n      }\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}