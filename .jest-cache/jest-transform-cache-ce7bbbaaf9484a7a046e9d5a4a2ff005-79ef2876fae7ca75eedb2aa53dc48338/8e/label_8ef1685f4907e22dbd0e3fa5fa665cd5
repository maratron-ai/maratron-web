8dc4ebdfbc94b6ad6660e990b0206bed
/* istanbul ignore next */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Label = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var
/* istanbul ignore next */
React = _interopRequireWildcard(require("react"));
var
/* istanbul ignore next */
_cn = require("@lib/utils/cn");
/* istanbul ignore next */
const _excluded = ["className"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/label.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = React.createElement;
function cov_2d8plumkqn() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/label.tsx";
  var hash = "5be288f676079f8069be6094b58648fabc242e01";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/label.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 15,
          column: 6
        }
      },
      "2": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 15,
            column: 6
          }
        },
        line: 8
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5be288f676079f8069be6094b58648fabc242e01"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2d8plumkqn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2d8plumkqn();
const Label =
/* istanbul ignore next */
exports.Label = (cov_2d8plumkqn().s[0]++, /*#__PURE__*/React.forwardRef((
/* istanbul ignore next */
_ref, ref) => {
  /* istanbul ignore next */
  let {
      className
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  /* istanbul ignore next */
  cov_2d8plumkqn().f[0]++;
  cov_2d8plumkqn().s[1]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "label",
  /* istanbul ignore next */
  (0, _extends2.default)({
    ref: ref,
    className:
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _cn.
    /* istanbul ignore next */
    cn)("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 5
    }
  }));
}));
/* istanbul ignore next */
cov_2d8plumkqn().s[2]++;
Label.displayName = "Label";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9jbiIsIl9leGNsdWRlZCIsIl9qc3hGaWxlTmFtZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fanN4IiwiY3JlYXRlRWxlbWVudCIsImNvdl8yZDhwbHVta3FuIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJMYWJlbCIsImV4cG9ydHMiLCJmb3J3YXJkUmVmIiwiX3JlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leHRlbmRzMiIsImNuIiwiX19zZWxmIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbImxhYmVsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkBsaWIvdXRpbHMvY25cIjtcblxuZXhwb3J0IHR5cGUgTGFiZWxQcm9wcyA9IFJlYWN0LkxhYmVsSFRNTEF0dHJpYnV0ZXM8SFRNTExhYmVsRWxlbWVudD47XG5cbmV4cG9ydCBjb25zdCBMYWJlbCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTExhYmVsRWxlbWVudCwgTGFiZWxQcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gICAgPGxhYmVsXG4gICAgICByZWY9e3JlZn1cbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwidGV4dC1zbSBmb250LW1lZGl1bSBsZWFkaW5nLW5vbmUgcGVlci1kaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgcGVlci1kaXNhYmxlZDpvcGFjaXR5LTcwXCIsXG4gICAgICAgIGNsYXNzTmFtZVxuICAgICAgKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICAvPlxuICApXG4pO1xuTGFiZWwuZGlzcGxheU5hbWUgPSBcIkxhYmVsXCI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBO0FBQUE7QUFBQUMsR0FBQSxHQUFBRCxPQUFBO0FBQW1DO0FBQUEsTUFBQUUsU0FBQTtBQUFBLElBQUFDLFlBQUE7QUFBQSxTQUFBSix3QkFBQUssQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQVAsdUJBQUEsWUFBQUEsQ0FBQUssQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFB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