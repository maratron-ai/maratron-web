d51d3833c1fa8a01ea1d6dbb3d5e018d
/* istanbul ignore next */
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
function cov_y18dmr7jr() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/runs/route.ts";
  var hash = "42d8184fe3ef6e9b65755610766bfe75df1ffeeb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/runs/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 29
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "2": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 45
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "4": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 17,
          column: 8
        }
      },
      "5": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "6": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "7": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "8": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "9": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "10": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "11": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 12
        }
      },
      "12": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "13": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 61,
          column: 8
        }
      },
      "14": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "15": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 69,
          column: 8
        }
      },
      "16": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "17": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 76,
          column: 8
        }
      },
      "18": {
        start: {
          line: 79,
          column: 42
        },
        end: {
          line: 79,
          column: 48
        }
      },
      "19": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "20": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 84,
          column: 8
        }
      },
      "21": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "22": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "23": {
        start: {
          line: 90,
          column: 19
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "24": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "25": {
        start: {
          line: 112,
          column: 19
        },
        end: {
          line: 115,
          column: 8
        }
      },
      "26": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "27": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 117,
          column: 40
        }
      },
      "28": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "29": {
        start: {
          line: 119,
          column: 10
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "30": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "31": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "32": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 87
        }
      },
      "33": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 139,
          column: 45
        }
      },
      "34": {
        start: {
          line: 140,
          column: 19
        },
        end: {
          line: 140,
          column: 72
        }
      },
      "35": {
        start: {
          line: 141,
          column: 19
        },
        end: {
          line: 144,
          column: 8
        }
      },
      "36": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "37": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 82
        }
      },
      "38": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 50
        }
      },
      "39": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 54
        }
      },
      "40": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 48
        }
      },
      "41": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 7,
            column: 22
          },
          end: {
            line: 7,
            column: 25
          }
        },
        loc: {
          start: {
            line: 7,
            column: 48
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 49
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 40
          },
          end: {
            line: 30,
            column: 53
          }
        }, {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 30,
            column: 77
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 57,
            column: 26
          }
        }, {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 57,
            column: 39
          }
        }, {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 56
          }
        }, {
          start: {
            line: 57,
            column: 60
          },
          end: {
            line: 57,
            column: 67
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 36
          }
        }, {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 65,
            column: 53
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 20
          }
        }, {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 30
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 96,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 96,
            column: 48
          }
        }, {
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 96,
            column: 56
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 14
          },
          end: {
            line: 97,
            column: 200
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 14
          },
          end: {
            line: 97,
            column: 18
          }
        }, {
          start: {
            line: 97,
            column: 22
          },
          end: {
            line: 97,
            column: 200
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 144
          },
          end: {
            line: 97,
            column: 198
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 166
          },
          end: {
            line: 97,
            column: 193
          }
        }, {
          start: {
            line: 97,
            column: 196
          },
          end: {
            line: 97,
            column: 198
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 98,
            column: 14
          },
          end: {
            line: 98,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 21
          },
          end: {
            line: 98,
            column: 30
          }
        }, {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 98,
            column: 37
          }
        }],
        line: 98
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 25
          },
          end: {
            line: 99,
            column: 34
          }
        }, {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 99,
            column: 41
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 39
          },
          end: {
            line: 100,
            column: 60
          }
        }, {
          start: {
            line: 100,
            column: 63
          },
          end: {
            line: 100,
            column: 67
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 102,
            column: 10
          },
          end: {
            line: 104,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 14
          },
          end: {
            line: 103,
            column: 31
          }
        }, {
          start: {
            line: 104,
            column: 14
          },
          end: {
            line: 104,
            column: 18
          }
        }],
        line: 102
      },
      "17": {
        loc: {
          start: {
            line: 102,
            column: 10
          },
          end: {
            line: 102,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 10
          },
          end: {
            line: 102,
            column: 27
          }
        }, {
          start: {
            line: 102,
            column: 31
          },
          end: {
            line: 102,
            column: 62
          }
        }],
        line: 102
      },
      "18": {
        loc: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 20
          }
        }, {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 28
          }
        }],
        line: 105
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 68
          }
        }, {
          start: {
            line: 107,
            column: 71
          },
          end: {
            line: 107,
            column: 73
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "21": {
        loc: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 122,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 43
          }
        }, {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 42
          }
        }],
        line: 120
      },
      "24": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 35
          },
          end: {
            line: 138,
            column: 61
          }
        }, {
          start: {
            line: 138,
            column: 64
          },
          end: {
            line: 138,
            column: 87
          }
        }],
        line: 138
      },
      "25": {
        loc: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "26": {
        loc: {
          start: {
            line: 145,
            column: 10
          },
          end: {
            line: 145,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 10
          },
          end: {
            line: 145,
            column: 14
          }
        }, {
          start: {
            line: 145,
            column: 19
          },
          end: {
            line: 145,
            column: 37
          }
        }, {
          start: {
            line: 145,
            column: 41
          },
          end: {
            line: 145,
            column: 57
          }
        }],
        line: 145
      },
      "27": {
        loc: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 40
          },
          end: {
            line: 157,
            column: 53
          }
        }, {
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 157,
            column: 76
          }
        }],
        line: 157
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42d8184fe3ef6e9b65755610766bfe75df1ffeeb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y18dmr7jr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y18dmr7jr();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
// src/app/api/runs/route.ts
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
import { calculateVDOTJackDaniels } from "@utils/running/jackDaniels";
import { parseDuration } from "@utils/time";
export async function GET(request) {
  /* istanbul ignore next */
  cov_y18dmr7jr().f[0]++;
  cov_y18dmr7jr().s[0]++;
  try {
    // Extract userId from query parameters for proper authorization
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[1]++, new URL(request.url));
    const userId =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[2]++, searchParams.get('userId'));
    /* istanbul ignore next */
    cov_y18dmr7jr().s[3]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[0][0]++;
      cov_y18dmr7jr().s[4]++;
      return NextResponse.json({
        error: "User ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[0][1]++;
    }

    // Only return runs for the specified user
    const runs =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[5]++, await prisma.run.findMany({
      where: {
        userId
      },
      orderBy: {
        date: 'desc'
      }
    }));
    /* istanbul ignore next */
    cov_y18dmr7jr().s[6]++;
    return NextResponse.json(runs, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_y18dmr7jr().s[7]++;
    console.error("Error fetching runs:", error);
    /* istanbul ignore next */
    cov_y18dmr7jr().s[8]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[1][1]++, "Error fetching runs")
    }, {
      status: 500
    });
  }
}
export async function POST(request) {
  /* istanbul ignore next */
  cov_y18dmr7jr().f[1]++;
  cov_y18dmr7jr().s[9]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[10]++, await request.json());

    // Validate required fields
    const {
      date,
      duration,
      distance,
      distanceUnit,
      trainingEnvironment,
      pace,
      // expected format: { pace: string, unit: "miles" | "kilometers" } or null
      elevationGain,
      elevationGainUnit,
      notes,
      userId,
      shoeId,
      name
    } =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[11]++, body);

    // Validate required fields
    /* istanbul ignore next */
    cov_y18dmr7jr().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[3][0]++, !date) ||
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[3][1]++, !duration) ||
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[3][2]++, !distance) ||
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[3][3]++, !distanceUnit) ||
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[3][4]++, !userId)) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[2][0]++;
      cov_y18dmr7jr().s[13]++;
      return NextResponse.json({
        error: "Missing required fields: date, duration, distance, distanceUnit, userId"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[2][1]++;
    }

    // Validate data types and ranges
    cov_y18dmr7jr().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[5][0]++, typeof distance !== 'number') ||
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[5][1]++, distance <= 0)) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[4][0]++;
      cov_y18dmr7jr().s[15]++;
      return NextResponse.json({
        error: "Distance must be a positive number"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[4][1]++;
    }
    cov_y18dmr7jr().s[16]++;
    if (!['miles', 'kilometers'].includes(distanceUnit)) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[6][0]++;
      cov_y18dmr7jr().s[17]++;
      return NextResponse.json({
        error: "Distance unit must be 'miles' or 'kilometers'"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[6][1]++;
    }
    let finalShoeId =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[18]++, shoeId);
    /* istanbul ignore next */
    cov_y18dmr7jr().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[8][0]++, !finalShoeId) &&
    /* istanbul ignore next */
    (cov_y18dmr7jr().b[8][1]++, userId)) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[7][0]++;
      const user =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[20]++, await prisma.user.findUnique({
        where: {
          id: userId
        },
        select: {
          defaultShoeId: true
        }
      }));
      /* istanbul ignore next */
      cov_y18dmr7jr().s[21]++;
      if (user?.defaultShoeId) {
        /* istanbul ignore next */
        cov_y18dmr7jr().b[9][0]++;
        cov_y18dmr7jr().s[22]++;
        finalShoeId = user.defaultShoeId;
      } else
      /* istanbul ignore next */
      {
        cov_y18dmr7jr().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[7][1]++;
    }
    const newRun =
    /* istanbul ignore next */
    (cov_y18dmr7jr().s[23]++, await prisma.run.create({
      data:
      /* istanbul ignore next */
      _objectSpread({
        date: new Date(date),
        duration,
        distance: Number(distance),
        distanceUnit,
        trainingEnvironment:
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[10][0]++, trainingEnvironment) ||
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[10][1]++, null),
        name:
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[11][0]++, name) ||
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[11][1]++, `${new Date(date).toLocaleDateString()} ${new Date(date).toLocaleTimeString([], {
          hour: '2-digit',
          minute: '2-digit'
        })}${trainingEnvironment ?
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[12][0]++, ` - ${trainingEnvironment}`) :
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[12][1]++, '')}`),
        pace: pace ?
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[13][0]++, pace.pace) :
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[13][1]++, null),
        paceUnit: pace ?
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[14][0]++, pace.unit) :
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[14][1]++, null),
        elevationGain: elevationGain ?
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[15][0]++, Number(elevationGain)) :
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[15][1]++, null),
        elevationGainUnit:
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[17][0]++, elevationGainUnit) &&
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[17][1]++, elevationGainUnit.trim() !== "") ?
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[16][0]++, elevationGainUnit) :
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[16][1]++, null),
        notes:
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[18][0]++, notes) ||
        /* istanbul ignore next */
        (cov_y18dmr7jr().b[18][1]++, null),
        user: {
          connect: {
            id: userId
          }
        }
      }, finalShoeId ?
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[19][0]++, {
        shoe: {
          connect: {
            id: finalShoeId
          }
        }
      }) :
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[19][1]++, {}))
    }));
    /* istanbul ignore next */
    cov_y18dmr7jr().s[24]++;
    if (finalShoeId) {
      /* istanbul ignore next */
      cov_y18dmr7jr().b[20][0]++;
      const shoe =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[25]++, await prisma.shoe.findUnique({
        where: {
          id: finalShoeId
        },
        select: {
          distanceUnit: true
        }
      }));
      /* istanbul ignore next */
      cov_y18dmr7jr().s[26]++;
      if (shoe) {
        /* istanbul ignore next */
        cov_y18dmr7jr().b[21][0]++;
        let increment =
        /* istanbul ignore next */
        (cov_y18dmr7jr().s[27]++, Number(distance));
        /* istanbul ignore next */
        cov_y18dmr7jr().s[28]++;
        if (shoe.distanceUnit !== distanceUnit) {
          /* istanbul ignore next */
          cov_y18dmr7jr().b[22][0]++;
          cov_y18dmr7jr().s[29]++;
          increment = shoe.distanceUnit === "miles" ?
          /* istanbul ignore next */
          (cov_y18dmr7jr().b[23][0]++, Number(distance) * 0.621371) :
          /* istanbul ignore next */
          (cov_y18dmr7jr().b[23][1]++, Number(distance) * 1.60934);
        } else
        /* istanbul ignore next */
        {
          cov_y18dmr7jr().b[22][1]++;
        }
        cov_y18dmr7jr().s[30]++;
        await prisma.shoe.update({
          where: {
            id: finalShoeId
          },
          data: {
            currentDistance: {
              increment
            }
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_y18dmr7jr().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_y18dmr7jr().b[20][1]++;
    }

    // Estimate VDOT from this run and update user only if it's higher
    cov_y18dmr7jr().s[31]++;
    try {
      const meters =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[32]++, distanceUnit === "miles" ?
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[24][0]++, Number(distance) * 1609.34) :
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[24][1]++, Number(distance) * 1000));
      const seconds =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[33]++, parseDuration(duration));
      const vdot =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[34]++, Math.round(calculateVDOTJackDaniels(meters, seconds)));
      const user =
      /* istanbul ignore next */
      (cov_y18dmr7jr().s[35]++, await prisma.user.findUnique({
        where: {
          id: userId
        },
        select: {
          VDOT: true
        }
      }));
      /* istanbul ignore next */
      cov_y18dmr7jr().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[26][0]++, user) && (
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[26][1]++, user.VDOT === null) ||
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[26][2]++, vdot > user.VDOT))) {
        /* istanbul ignore next */
        cov_y18dmr7jr().b[25][0]++;
        cov_y18dmr7jr().s[37]++;
        await prisma.user.update({
          where: {
            id: userId
          },
          data: {
            VDOT: vdot
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_y18dmr7jr().b[25][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_y18dmr7jr().s[38]++;
      console.error("Failed to update VDOT", err);
    }
    /* istanbul ignore next */
    cov_y18dmr7jr().s[39]++;
    return NextResponse.json(newRun, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_y18dmr7jr().s[40]++;
    console.error("Error creating run:", error);
    /* istanbul ignore next */
    cov_y18dmr7jr().s[41]++;
    return NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_y18dmr7jr().b[27][1]++, "Error creating run")
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,