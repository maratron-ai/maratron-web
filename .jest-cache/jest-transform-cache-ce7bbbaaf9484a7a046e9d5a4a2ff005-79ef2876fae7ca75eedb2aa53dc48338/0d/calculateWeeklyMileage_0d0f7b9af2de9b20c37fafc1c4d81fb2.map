{"version":3,"names":["cov_2do2gj6ypz","actualCoverage","calculateWeeklyMileage","currentWeek","totalWeeks","peakMileage","f","baseWeeks","s","Math","floor","buildWeeks","peakWeeks","taperWeeks","b","progress","round","taperProgress"],"sources":["calculateWeeklyMileage.ts"],"sourcesContent":["export function calculateWeeklyMileage(\n  currentWeek: number,\n  totalWeeks: number,\n  peakMileage: number\n): number {\n  const baseWeeks = Math.floor(totalWeeks * 0.4);\n  const buildWeeks = Math.floor(totalWeeks * 0.3);\n  const peakWeeks = Math.floor(totalWeeks * 0.2);\n  const taperWeeks = totalWeeks - (baseWeeks + buildWeeks + peakWeeks);\n\n  if (currentWeek <= baseWeeks) {\n    // Base phase: mileage increases from 50% to 70% of peak\n    const progress = currentWeek / baseWeeks;\n    return Math.round(peakMileage * (0.5 + 0.2 * progress));\n  } else if (currentWeek <= baseWeeks + buildWeeks) {\n    // Build phase: increases from 70% to 90%\n    const progress = (currentWeek - baseWeeks) / buildWeeks;\n    return Math.round(peakMileage * (0.7 + 0.2 * progress));\n  } else if (currentWeek <= baseWeeks + buildWeeks + peakWeeks) {\n    // Peak phase: maintain peak mileage\n    return peakMileage;\n  } else {\n    // Taper phase: mileage reduces from 80% down to 50%\n    const taperProgress =\n      (currentWeek - baseWeeks - buildWeeks - peakWeeks) / taperWeeks;\n    return Math.round(peakMileage * (0.8 - 0.3 * taperProgress));\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfL,SAASE,sBAAsBA,CACpCC,WAAmB,EACnBC,UAAkB,EAClBC,WAAmB,EACX;EAAA;EAAAL,cAAA,GAAAM,CAAA;EACR,MAAMC,SAAS;EAAA;EAAA,CAAAP,cAAA,GAAAQ,CAAA,OAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,GAAG,GAAG,CAAC;EAC9C,MAAMO,UAAU;EAAA;EAAA,CAAAX,cAAA,GAAAQ,CAAA,OAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,GAAG,GAAG,CAAC;EAC/C,MAAMQ,SAAS;EAAA;EAAA,CAAAZ,cAAA,GAAAQ,CAAA,OAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,GAAG,GAAG,CAAC;EAC9C,MAAMS,UAAU;EAAA;EAAA,CAAAb,cAAA,GAAAQ,CAAA,OAAGJ,UAAU,IAAIG,SAAS,GAAGI,UAAU,GAAGC,SAAS,CAAC;EAAC;EAAAZ,cAAA,GAAAQ,CAAA;EAErE,IAAIL,WAAW,IAAII,SAAS,EAAE;IAAA;IAAAP,cAAA,GAAAc,CAAA;IAC5B;IACA,MAAMC,QAAQ;IAAA;IAAA,CAAAf,cAAA,GAAAQ,CAAA,OAAGL,WAAW,GAAGI,SAAS;IAAC;IAAAP,cAAA,GAAAQ,CAAA;IACzC,OAAOC,IAAI,CAACO,KAAK,CAACX,WAAW,IAAI,GAAG,GAAG,GAAG,GAAGU,QAAQ,CAAC,CAAC;EACzD,CAAC,MAAM;IAAA;IAAAf,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAQ,CAAA;IAAA,IAAIL,WAAW,IAAII,SAAS,GAAGI,UAAU,EAAE;MAAA;MAAAX,cAAA,GAAAc,CAAA;MAChD;MACA,MAAMC,QAAQ;MAAA;MAAA,CAAAf,cAAA,GAAAQ,CAAA,OAAG,CAACL,WAAW,GAAGI,SAAS,IAAII,UAAU;MAAC;MAAAX,cAAA,GAAAQ,CAAA;MACxD,OAAOC,IAAI,CAACO,KAAK,CAACX,WAAW,IAAI,GAAG,GAAG,GAAG,GAAGU,QAAQ,CAAC,CAAC;IACzD,CAAC,MAAM;MAAA;MAAAf,cAAA,GAAAc,CAAA;MAAAd,cAAA,GAAAQ,CAAA;MAAA,IAAIL,WAAW,IAAII,SAAS,GAAGI,UAAU,GAAGC,SAAS,EAAE;QAAA;QAAAZ,cAAA,GAAAc,CAAA;QAAAd,cAAA,GAAAQ,CAAA;QAC5D;QACA,OAAOH,WAAW;MACpB,CAAC,MAAM;QAAA;QAAAL,cAAA,GAAAc,CAAA;QACL;QACA,MAAMG,aAAa;QAAA;QAAA,CAAAjB,cAAA,GAAAQ,CAAA,QACjB,CAACL,WAAW,GAAGI,SAAS,GAAGI,UAAU,GAAGC,SAAS,IAAIC,UAAU;QAAC;QAAAb,cAAA,GAAAQ,CAAA;QAClE,OAAOC,IAAI,CAACO,KAAK,CAACX,WAAW,IAAI,GAAG,GAAG,GAAG,GAAGY,aAAa,CAAC,CAAC;MAC9D;IAAA;EAAA;AACF","ignoreList":[]}