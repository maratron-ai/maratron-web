{"version":3,"names":["React","_interopRequireWildcard","require","ProgressPrimitive","_cn","_excluded","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","__jsx","createElement","cov_9all02gkz","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","b","_coverageSchema","coverage","actualCoverage","Progress","exports","forwardRef","_ref","ref","className","value","props","_objectWithoutProperties2","Root","_extends2","cn","__self","__source","fileName","lineNumber","columnNumber","Indicator","style","transform","displayName"],"sources":["progress.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\nimport { cn } from \"@lib/utils/cn\";\n\ninterface ProgressProps extends React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> {\n  value?: number;\n}\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  ProgressProps\n>(({ className, value = 0, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    value={value}\n    className={cn(\"relative h-2 w-full overflow-hidden rounded-full bg-muted\", className)}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full flex-1 bg-gradient-to-r from-[var(--brand-blue)] to-[var(--brand-to)] transition-all\"\n      style={{ transform: `translateX(-${100 - value}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n"],"mappings":"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","ignoreList":[]}