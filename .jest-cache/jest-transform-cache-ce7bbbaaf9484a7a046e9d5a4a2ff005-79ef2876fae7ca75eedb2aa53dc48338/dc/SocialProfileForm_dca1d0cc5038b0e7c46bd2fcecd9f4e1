68c980ce9e9a1314eb65dc43e015777e
"use strict";
"use client";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SocialProfileForm;
var _react = _interopRequireWildcard(require("react"));
var _navigation = require("next/navigation");
var _react2 = require("next-auth/react");
var _social = require("@lib/api/social");
var _ui = require("@components/ui");
var _FormField = require("@components/ui/FormField");
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/social/SocialProfileForm.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
function SocialProfileForm({
  onCreated
}) {
  const {
    data: session
  } = (0, _react2.useSession)();
  const {
    0: username,
    1: setUsername
  } = (0, _react.useState)("");
  const {
    0: bio,
    1: setBio
  } = (0, _react.useState)("");
  const {
    0: error,
    1: setError
  } = (0, _react.useState)("");
  const {
    0: success,
    1: setSuccess
  } = (0, _react.useState)("");
  const router = (0, _navigation.useRouter)();
  const handleSubmit = async e => {
    e.preventDefault();
    setError("");
    setSuccess("");
    if (!session?.user?.id || !username) {
      setError("Username required");
      return;
    }
    try {
      await (0, _social.createSocialProfile)({
        userId: session.user.id,
        username,
        bio: bio || undefined
      });
      setSuccess("Profile created!");
      setUsername("");
      setBio("");
      onCreated?.();
      router.push("/social");
    } catch {
      setError("Failed to create profile");
    }
  };
  return __jsx(_ui.Card, {
    className: "p-6 w-full max-w-md",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 5
    }
  }, __jsx("h2", {
    className: "text-2xl font-semibold mb-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 7
    }
  }, "Create Social Profile"), error && __jsx("p", {
    className: "text-brand-orange-dark mb-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 17
    }
  }, error), success && __jsx("p", {
    className: "text-primary mb-2",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 19
    }
  }, success), __jsx("form", {
    onSubmit: handleSubmit,
    className: "space-y-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 7
    }
  }, __jsx(_FormField.TextField, {
    label: "Username",
    name: "username",
    value: username,
    onChange: (_n, v) => setUsername(String(v)),
    required: true,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 9
    }
  }), __jsx(_FormField.TextAreaField, {
    label: "Bio",
    name: "bio",
    value: bio,
    onChange: (_n, v) => setBio(String(v)),
    rows: 2,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 9
    }
  }), __jsx("div", {
    className: "flex justify-end",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 9
    }
  }, __jsx(_ui.Button, {
    type: "submit",
    className: "block mx-auto w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 11
    }
  }, "Create Profile"))));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,