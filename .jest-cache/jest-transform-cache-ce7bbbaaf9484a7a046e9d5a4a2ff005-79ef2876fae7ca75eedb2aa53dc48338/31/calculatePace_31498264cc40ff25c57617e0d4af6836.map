{"version":3,"names":["calculatePace","duration","distance","hours","minutes","seconds","split","map","Number","totalSeconds","paceSeconds","paceMinutes","Math","floor","remainingSeconds","round","toString","padStart","_default","exports","default"],"sources":["calculatePace.ts"],"sourcesContent":["// Updated helper function to calculate pace (mm:ss per unit) using HH:MM:SS input\nconst calculatePace = (duration: string, distance: number): string => {\n  const [hours, minutes, seconds] = duration.split(\":\").map(Number);\n  const totalSeconds = hours * 3600 + minutes * 60 + seconds;\n  const paceSeconds = totalSeconds / distance;\n  const paceMinutes = Math.floor(paceSeconds / 60);\n  const remainingSeconds = Math.round(paceSeconds % 60);\n  return `${paceMinutes.toString().padStart(2, \"0\")}:${remainingSeconds\n    .toString()\n    .padStart(2, \"0\")}`;\n};\n\nexport default calculatePace;"],"mappings":";;;;;;AAAA;AACA,MAAMA,aAAa,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAa;EACpE,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EACjE,MAAMC,YAAY,GAAGN,KAAK,GAAG,IAAI,GAAGC,OAAO,GAAG,EAAE,GAAGC,OAAO;EAC1D,MAAMK,WAAW,GAAGD,YAAY,GAAGP,QAAQ;EAC3C,MAAMS,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,WAAW,GAAG,EAAE,CAAC;EAChD,MAAMI,gBAAgB,GAAGF,IAAI,CAACG,KAAK,CAACL,WAAW,GAAG,EAAE,CAAC;EACrD,OAAO,GAAGC,WAAW,CAACK,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIH,gBAAgB,CAClEE,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACvB,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEapB,aAAa","ignoreList":[]}