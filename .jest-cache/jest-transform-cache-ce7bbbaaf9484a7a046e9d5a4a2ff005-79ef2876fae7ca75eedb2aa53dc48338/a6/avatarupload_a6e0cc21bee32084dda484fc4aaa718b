469111dd6c1f7cd59c4d990587150fb5
"use strict";
"use client";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AvatarUpload;
var _react = _interopRequireWildcard(require("react"));
var _ui = require("@components/ui");
var _input = require("@components/ui/input");
var _user = require("@lib/api/user/user");
var _DefaultAvatar = _interopRequireDefault(require("@components/DefaultAvatar"));
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/avatar-upload.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = _react.default.createElement;
function AvatarUpload({
  value,
  onChange,
  disabled
}) {
  const inputRef = (0, _react.useRef)(null);
  const handleFileChange = async e => {
    const file = e.target.files?.[0];
    if (!file) return;
    const url = await (0, _user.uploadAvatar)(file);
    onChange?.(url);
  };
  return __jsx("div", {
    className: "flex items-center space-x-4",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 5
    }
  }, __jsx(_ui.Avatar, {
    className: "h-20 w-20",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 7
    }
  }, value && __jsx(_ui.AvatarImage, {
    src: value,
    alt: "Avatar preview",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 19
    }
  }), __jsx(_ui.AvatarFallback, {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }
  }, __jsx(_DefaultAvatar.default, {
    size: 80,
    className: "border border-brand-to bg-brand-from",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 11
    }
  }))), __jsx("div", {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 7
    }
  }, __jsx(_ui.Button, {
    type: "button",
    variant: "outline",
    size: "sm",
    onClick: () => inputRef.current?.click(),
    disabled: disabled,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 9
    }
  }, "Upload"), __jsx(_input.Input, {
    ref: inputRef,
    type: "file",
    accept: "image/*",
    onChange: handleFileChange,
    className: "hidden",
    disabled: disabled,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 9
    }
  })));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIkF2YXRhclVwbG9hZCIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3VpIiwiX2lucHV0IiwiX3VzZXIiLCJfRGVmYXVsdEF2YXRhciIsIl9qc3hGaWxlTmFtZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImhhcyIsImdldCIsInNldCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fanN4IiwiY3JlYXRlRWxlbWVudCIsIm9uQ2hhbmdlIiwiZGlzYWJsZWQiLCJpbnB1dFJlZiIsInVzZVJlZiIsImhhbmRsZUZpbGVDaGFuZ2UiLCJmaWxlIiwidGFyZ2V0IiwiZmlsZXMiLCJ1cmwiLCJ1cGxvYWRBdmF0YXIiLCJjbGFzc05hbWUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsIkF2YXRhciIsIkF2YXRhckltYWdlIiwic3JjIiwiYWx0IiwiQXZhdGFyRmFsbGJhY2siLCJzaXplIiwiQnV0dG9uIiwidHlwZSIsInZhcmlhbnQiLCJvbkNsaWNrIiwiY3VycmVudCIsImNsaWNrIiwiSW5wdXQiLCJyZWYiLCJhY2NlcHQiXSwic291cmNlcyI6WyJhdmF0YXItdXBsb2FkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBBdmF0YXIsIEF2YXRhckltYWdlLCBBdmF0YXJGYWxsYmFjaywgQnV0dG9uIH0gZnJvbSBcIkBjb21wb25lbnRzL3VpXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAY29tcG9uZW50cy91aS9pbnB1dFwiO1xuaW1wb3J0IHsgdXBsb2FkQXZhdGFyIH0gZnJvbSBcIkBsaWIvYXBpL3VzZXIvdXNlclwiO1xuaW1wb3J0IERlZmF1bHRBdmF0YXIgZnJvbSBcIkBjb21wb25lbnRzL0RlZmF1bHRBdmF0YXJcIjtcblxuaW50ZXJmYWNlIEF2YXRhclVwbG9hZFByb3BzIHtcbiAgdmFsdWU/OiBzdHJpbmc7XG4gIG9uQ2hhbmdlPzogKHVybDogc3RyaW5nKSA9PiB2b2lkO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEF2YXRhclVwbG9hZCh7IHZhbHVlLCBvbkNoYW5nZSwgZGlzYWJsZWQgfTogQXZhdGFyVXBsb2FkUHJvcHMpIHtcbiAgY29uc3QgaW5wdXRSZWYgPSB1c2VSZWY8SFRNTElucHV0RWxlbWVudD4obnVsbCk7XG5cbiAgY29uc3QgaGFuZGxlRmlsZUNoYW5nZSA9IGFzeW5jIChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlcz8uWzBdO1xuICAgIGlmICghZmlsZSkgcmV0dXJuO1xuICAgIGNvbnN0IHVybCA9IGF3YWl0IHVwbG9hZEF2YXRhcihmaWxlKTtcbiAgICBvbkNoYW5nZT8uKHVybCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtNFwiPlxuICAgICAgPEF2YXRhciBjbGFzc05hbWU9XCJoLTIwIHctMjBcIj5cbiAgICAgICAge3ZhbHVlICYmIDxBdmF0YXJJbWFnZSBzcmM9e3ZhbHVlfSBhbHQ9XCJBdmF0YXIgcHJldmlld1wiIC8+fVxuICAgICAgICA8QXZhdGFyRmFsbGJhY2s+XG4gICAgICAgICAgPERlZmF1bHRBdmF0YXJcbiAgICAgICAgICAgIHNpemU9ezgwfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1icmFuZC10byBiZy1icmFuZC1mcm9tXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L0F2YXRhckZhbGxiYWNrPlxuICAgICAgPC9BdmF0YXI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVcIlxuICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gaW5wdXRSZWYuY3VycmVudD8uY2xpY2soKX1cbiAgICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgID5cbiAgICAgICAgICBVcGxvYWRcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDxJbnB1dFxuICAgICAgICAgIHJlZj17aW5wdXRSZWZ9XG4gICAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICAgIGFjY2VwdD1cImltYWdlLypcIlxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVGaWxlQ2hhbmdlfVxuICAgICAgICAgIGNsYXNzTmFtZT1cImhpZGRlblwiXG4gICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQUMsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsT0FBQSxHQUFBQyxZQUFBO0FBRWIsSUFBQUMsTUFBQSxHQUFBQyx1QkFBQSxDQUFBUixPQUFBO0FBQ0EsSUFBQVMsR0FBQSxHQUFBVCxPQUFBO0FBQ0EsSUFBQVUsTUFBQSxHQUFBVixPQUFBO0FBQ0EsSUFBQVcsS0FBQSxHQUFBWCxPQUFBO0FBQ0EsSUFBQVksY0FBQSxHQUFBYixzQkFBQSxDQUFBQyxPQUFBO0FBQXNELElBQUFhLFlBQUE7QUFBQSxTQUFBTCx3QkFB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