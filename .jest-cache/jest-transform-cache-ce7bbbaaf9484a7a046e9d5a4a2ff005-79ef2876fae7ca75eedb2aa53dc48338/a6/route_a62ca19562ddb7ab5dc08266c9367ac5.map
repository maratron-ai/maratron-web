{"version":3,"names":["cov_2ehg6r1kfq","actualCoverage","NextResponse","prisma","GET","_req","context","f","params","s","id","post","runPost","findUnique","where","include","socialProfile","comments","likes","b","json","error","status","err","console","PUT","req","data","update","DELETE","delete"],"sources":["route.ts"],"sourcesContent":["import { NextResponse, NextRequest } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\n\nexport async function GET(_req: NextRequest, context: { params: Promise<{ id: string }> }) {\n  const params = await context.params;\n  const { id } = params;\n  try {\n    const post = await prisma.runPost.findUnique({\n      where: { id },\n      include: { socialProfile: true, comments: true, likes: true },\n    });\n    if (!post) return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n    return NextResponse.json(post);\n  } catch (err) {\n    console.error(\"Error getting post\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n\nexport async function PUT(req: NextRequest, context: { params: Promise<{ id: string }> }) {\n  const params = await context.params;\n  const { id } = params;\n  try {\n    const data = await req.json();\n    const post = await prisma.runPost.update({ where: { id }, data });\n    return NextResponse.json(post);\n  } catch (err) {\n    console.error(\"Error updating post\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n\nexport async function DELETE(_req: NextRequest, context: { params: Promise<{ id: string }> }) {\n  const params = await context.params;\n  const { id } = params;\n  try {\n    await prisma.runPost.delete({ where: { id } });\n    return NextResponse.json({});\n  } catch (err) {\n    console.error(\"Error deleting post\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n"],"mappings":"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","ignoreList":[]}