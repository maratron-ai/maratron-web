8c970e7706371b2c919e2c988a86602b
"use client";

/* istanbul ignore next */
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/runs/CreateRun.tsx";
var __jsx = React.createElement;
function cov_uu29losae() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/runs/CreateRun.tsx";
  var hash = "09fe416d4da6742eab944e60b70ec7930cebad3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/runs/CreateRun.tsx",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "1": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "2": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "3": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "4": {
        start: {
          line: 35,
          column: 38
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "5": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "6": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 59
        }
      },
      "7": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "8": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 54,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 9,
            column: 29
          }
        },
        loc: {
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 27
          }
        },
        loc: {
          start: {
            line: 28,
            column: 46
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 28
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "09fe416d4da6742eab944e60b70ec7930cebad3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uu29losae = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uu29losae();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from "react";
import RunForm from "@components/runs/RunForm";
import { createRun } from "@lib/api/run";
/* istanbul ignore next */
cov_uu29losae().s[0]++;
const CreateRun = () => {
  /* istanbul ignore next */
  cov_uu29losae().f[0]++;
  cov_uu29losae().s[1]++;
  const handleRunSubmit = async run => {
    /* istanbul ignore next */
    cov_uu29losae().f[1]++;
    cov_uu29losae().s[2]++;
    console.log("TEST");
    /* istanbul ignore next */
    cov_uu29losae().s[3]++;
    try {
      // attach the current user's ID here
      // For example, if you have an auth hook:
      // run.socialProfileId = currentUserId;

      const dto =
      /* istanbul ignore next */
      (cov_uu29losae().s[4]++, _objectSpread(_objectSpread({}, run), {}, {
        date: run.date.toISOString(),
        pace: run.pace?.pace,
        paceUnit: run.pace?.unit
      }));
      const createdRun =
      /* istanbul ignore next */
      (cov_uu29losae().s[5]++, await createRun(dto));
      /* istanbul ignore next */
      cov_uu29losae().s[6]++;
      console.log("Run created successfully:", createdRun);
    } catch (error) {
      /* istanbul ignore next */
      cov_uu29losae().s[7]++;
      console.error("Error creating run:", error);
      // Handle error (show a notification, etc.)
    }
  };
  /* istanbul ignore next */
  cov_uu29losae().s[8]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 5
    }
  },
  /* istanbul ignore next */
  __jsx(
  /* istanbul ignore next */
  "h1",
  /* istanbul ignore next */
  {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 7
    }
  }, "Create a New Run"),
  /* istanbul ignore next */
  __jsx(RunForm,
  /* istanbul ignore next */
  {
    onSubmit: handleRunSubmit,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 7
    }
  }));
};
export default CreateRun;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,