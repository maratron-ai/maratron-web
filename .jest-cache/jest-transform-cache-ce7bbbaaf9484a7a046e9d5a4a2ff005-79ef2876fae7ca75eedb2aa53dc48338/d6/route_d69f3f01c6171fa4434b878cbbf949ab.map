{"version":3,"names":["cov_258pu5gvmt","actualCoverage","NextResponse","prisma","PROFILE_POST_LIMIT","GET","f","s","posts","runPost","findMany","include","socialProfile","orderBy","createdAt","take","json","err","console","error","status","POST","req","data","post","create"],"sources":["route.ts"],"sourcesContent":["import { NextResponse, NextRequest } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\nimport { PROFILE_POST_LIMIT } from \"@lib/socialLimits\";\n\nexport async function GET() {\n  try {\n    const posts = await prisma.runPost.findMany({\n      include: { socialProfile: true },\n      orderBy: { createdAt: \"desc\" },\n      take: PROFILE_POST_LIMIT,\n    });\n    return NextResponse.json(posts);\n  } catch (err) {\n    console.error(\"Error listing posts\", err);\n    return NextResponse.json({ error: \"Failed to fetch posts\" }, { status: 500 });\n  }\n}\n\nexport async function POST(req: NextRequest) {\n  try {\n    const data = await req.json();\n    const post = await prisma.runPost.create({ data });\n    return NextResponse.json(post, { status: 201 });\n  } catch (err) {\n    console.error(\"Error creating post\", err);\n    return NextResponse.json({ error: \"Failed to create post\" }, { status: 500 });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,SAASE,YAAY,QAAqB,aAAa;AACvD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,kBAAkB,QAAQ,mBAAmB;AAEtD,OAAO,eAAeC,GAAGA,CAAA,EAAG;EAAA;EAAAL,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAO,CAAA;EAC1B,IAAI;IACF,MAAMC,KAAK;IAAA;IAAA,CAAAR,cAAA,GAAAO,CAAA,OAAG,MAAMJ,MAAM,CAACM,OAAO,CAACC,QAAQ,CAAC;MAC1CC,OAAO,EAAE;QAAEC,aAAa,EAAE;MAAK,CAAC;MAChCC,OAAO,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAC;MAC9BC,IAAI,EAAEX;IACR,CAAC,CAAC;IAAC;IAAAJ,cAAA,GAAAO,CAAA;IACH,OAAOL,YAAY,CAACc,IAAI,CAACR,KAAK,CAAC;EACjC,CAAC,CAAC,OAAOS,GAAG,EAAE;IAAA;IAAAjB,cAAA,GAAAO,CAAA;IACZW,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAAC;IAAAjB,cAAA,GAAAO,CAAA;IAC1C,OAAOL,YAAY,CAACc,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/E;AACF;AAEA,OAAO,eAAeC,IAAIA,CAACC,GAAgB,EAAE;EAAA;EAAAtB,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAO,CAAA;EAC3C,IAAI;IACF,MAAMgB,IAAI;IAAA;IAAA,CAAAvB,cAAA,GAAAO,CAAA,OAAG,MAAMe,GAAG,CAACN,IAAI,CAAC,CAAC;IAC7B,MAAMQ,IAAI;IAAA;IAAA,CAAAxB,cAAA,GAAAO,CAAA,OAAG,MAAMJ,MAAM,CAACM,OAAO,CAACgB,MAAM,CAAC;MAAEF;IAAK,CAAC,CAAC;IAAC;IAAAvB,cAAA,GAAAO,CAAA;IACnD,OAAOL,YAAY,CAACc,IAAI,CAACQ,IAAI,EAAE;MAAEJ,MAAM,EAAE;IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOH,GAAG,EAAE;IAAA;IAAAjB,cAAA,GAAAO,CAAA;IACZW,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;IAAC;IAAAjB,cAAA,GAAAO,CAAA;IAC1C,OAAOL,YAAY,CAACc,IAAI,CAAC;MAAEG,KAAK,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/E;AACF","ignoreList":[]}