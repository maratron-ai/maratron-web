ab469351d3365d94c73e01b3878d42fa
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopoverTrigger = exports.PopoverContent = exports.PopoverAnchor = exports.Popover = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var PopoverPrimitive = _interopRequireWildcard(require("@radix-ui/react-popover"));
var _cn = require("@lib/utils/cn");
const _excluded = ["className", "sideOffset"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/popover.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = React.createElement;
const Popover = exports.Popover = PopoverPrimitive.Root;
const PopoverTrigger = exports.PopoverTrigger = PopoverPrimitive.Trigger;
const PopoverAnchor = exports.PopoverAnchor = PopoverPrimitive.Anchor;
const PopoverContent = exports.PopoverContent = /*#__PURE__*/React.forwardRef((_ref, ref) => {
  let {
      className,
      sideOffset = 4
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return __jsx(PopoverPrimitive.Content, (0, _extends2.default)({
    ref: ref,
    sideOffset: sideOffset,
    className: (0, _cn.cn)("z-50 rounded-md border bg-background p-4 shadow-md outline-none", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13,
      columnNumber: 3
    }
  }));
});
PopoverContent.displayName = PopoverPrimitive.Content.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIlBvcG92ZXJQcmltaXRpdmUiLCJfY24iLCJfZXhjbHVkZWQiLCJfanN4RmlsZU5hbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2pzeCIsImNyZWF0ZUVsZW1lbnQiLCJQb3BvdmVyIiwiZXhwb3J0cyIsIlJvb3QiLCJQb3BvdmVyVHJpZ2dlciIsIlRyaWdnZXIiLCJQb3BvdmVyQW5jaG9yIiwiQW5jaG9yIiwiUG9wb3ZlckNvbnRlbnQiLCJmb3J3YXJkUmVmIiwiX3JlZiIsInJlZiIsImNsYXNzTmFtZSIsInNpZGVPZmZzZXQiLCJwcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJDb250ZW50IiwiX2V4dGVuZHMyIiwiY24iLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsicG9wb3Zlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBQb3BvdmVyUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtcG9wb3ZlclwiO1xuaW1wb3J0IHsgY24gfSBmcm9tIFwiQGxpYi91dGlscy9jblwiO1xuXG5leHBvcnQgY29uc3QgUG9wb3ZlciA9IFBvcG92ZXJQcmltaXRpdmUuUm9vdDtcbmV4cG9ydCBjb25zdCBQb3BvdmVyVHJpZ2dlciA9IFBvcG92ZXJQcmltaXRpdmUuVHJpZ2dlcjtcbmV4cG9ydCBjb25zdCBQb3BvdmVyQW5jaG9yID0gUG9wb3ZlclByaW1pdGl2ZS5BbmNob3I7XG5cbmV4cG9ydCBjb25zdCBQb3BvdmVyQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFBvcG92ZXJQcmltaXRpdmUuQ29udGVudD4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgUG9wb3ZlclByaW1pdGl2ZS5Db250ZW50PlxuPigoeyBjbGFzc05hbWUsIHNpZGVPZmZzZXQgPSA0LCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPFBvcG92ZXJQcmltaXRpdmUuQ29udGVudFxuICAgIHJlZj17cmVmfVxuICAgIHNpZGVPZmZzZXQ9e3NpZGVPZmZzZXR9XG4gICAgY2xhc3NOYW1lPXtjbihcbiAgICAgIFwiei01MCByb3VuZGVkLW1kIGJvcmRlciBiZy1iYWNrZ3JvdW5kIHAtNCBzaGFkb3ctbWQgb3V0bGluZS1ub25lXCIsXG4gICAgICBjbGFzc05hbWVcbiAgICApfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpO1xuUG9wb3ZlckNvbnRlbnQuZGlzcGxheU5hbWUgPSBQb3BvdmVyUHJpbWl0aXZlLkNvbnRlbnQuZGlzcGxheU5hbWU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGdCQUFBLEdBQUFGLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxHQUFBLEdBQUFGLE9BQUE7QUFBbUMsTUFBQUcsU0FBQTtBQUFBLElBQUFDLFlBQUE7QUFBQSxTQUFBTCx3QkFBQU0sQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQVIsdUJBQUEsWUFBQUEsQ0FBQU0sQ0FBQSxFQUFBQyxDQUFBLFNBQUFBLENBQUEsSUFBQUQsQ0FBQSxJQUFBQSxDQUFBLENBQUFLLFVBQUEsU0FBQUwsQ0FBQSxNQUFBTSxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxLQUFBQyxTQUFBLFFBQUFDLE9BQUEsRUFBQVYsQ0FBQSxpQkFBQUEsQ0FBQSx1QkFBQUEsQ0FBQSx5QkFBQUEsQ0FBQSxTQUFBUSxDQUFBLE1BQUFGLENBQUEsR0FBQUwsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsUUFBQUcsQ0FBQSxDQUFBSyxHQUFBLENBQUFYLENBQUEsVUFBQU0sQ0FBQSxDQUFBTSxHQUFBLENBQUFaLENBQUEsR0FBQU0sQ0FBQSxDQUFBTyxHQUFBLENBQUFiLENBQUEsRUFBQVEsQ0FBQSxnQkFBQVAsQ0FBQSxJQUFBRCxDQUFBLGdCQUFBQyxDQUFBLE9BQUFhLGNBQUEsQ0FBQUMsSUFBQSxDQUFBZixDQUFBLEVBQUFDLENBQUEsT0FBQU0sQ0FBQSxJQUFBRCxDQUFBLEdBQUFVLE1BQUEsQ0FBQUMsY0FBQSxLQUFBRCxNQUFBLENBQUFFLHdCQUFBLENBQUFsQixDQUFBLEVBQUFDLENBQUEsT0FBQU0sQ0FBQSxDQUFBSyxHQUFBLElBQUFMLENBQUEsQ0FBQU0sR0FBQSxJQUFBUCxDQUFBLENBQUFFLENBQUEsRUFBQVAsQ0FBQSxFQUFBTSxDQUFBLElBQUFDLENBQUEsQ0FBQVAsQ0FBQSxJQUFBRCxDQUFBLENBQUFDLENBQUEsV0FBQU8sQ0FBQSxLQUFBUixDQUFBLEVBQUFDLENBQUE7QUFBQSxJQUFBa0IsS0FBQSxHQUFBMUIsS0FBQSxDQUFBMkIsYUFBQTtBQUU1QixNQUFNQyxPQUFPLEdBQUFDLE9BQUEsQ0FBQUQsT0FBQSxHQUFHekIsZ0JBQWdCLENBQUMyQixJQUFJO0FBQ3JDLE1BQU1DLGNBQWMsR0FBQUYsT0FBQSxDQUFBRSxjQUFBLEdBQUc1QixnQkFBZ0IsQ0FBQzZCLE9BQU87QUFDL0MsTUFBTUMsYUFBYSxHQUFBSixPQUFBLENBQUFJLGFBQUEsR0FBRzlCLGdCQUFnQixDQUFDK0IsTUFBTTtBQUU3QyxNQUFNQyxjQUFjLEdBQUFOLE9BQUEsQ0FBQU0sY0FBQSxnQkFBR25DLEtBQUssQ0FBQ29DLFVBQVUsQ0FHNUMsQ0FBQUMsSUFBQSxFQUEwQ0MsR0FBRztFQUFBLElBQTVDO01BQUVDLFNBQVM7TUFBRUMsVUFBVSxHQUFHO0lBQVksQ0FBQyxHQUFBSCxJQUFBO0lBQVBJLEtBQUssT0FBQUMseUJBQUEsQ0FBQXpCLE9BQUEsRUFBQW9CLElBQUEsRUFBQWhDLFNBQUE7RUFBQSxPQUN0Q3FCLEtBQUEsQ0FBQ3ZCLGdCQUFnQixDQUFDd0MsT0FBTyxNQUFBQyxTQUFBLENBQUEzQixPQUFBO0lBQ3ZCcUIsR0FBRyxFQUFFQSxHQUFJO0lBQ1RFLFVBQVUsRUFBRUEsVUFBVztJQUN2QkQsU0FBUyxFQUFFLElBQUFNLE1BQUUsRUFDWCxpRUFBaUUsRUFDakVOLFNBQ0Y7RUFBRSxHQUNFRSxLQUFLO0lBQUFLLE1BQUE7SUFBQUMsUUFBQTtNQUFBQyxRQUFBLEVBQUExQyxZQUFBO01BQUEyQyxVQUFBO01BQUFDLFlBQUE7SUFBQTtFQUFBLEVBQ1YsQ0FBQztBQUFBLENBQ0gsQ0FBQztBQUNGZixjQUFjLENBQUNnQixXQUFXLEdBQUdoRCxnQkFBZ0IsQ0FBQ3dDLE9BQU8sQ0FBQ1EsV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==