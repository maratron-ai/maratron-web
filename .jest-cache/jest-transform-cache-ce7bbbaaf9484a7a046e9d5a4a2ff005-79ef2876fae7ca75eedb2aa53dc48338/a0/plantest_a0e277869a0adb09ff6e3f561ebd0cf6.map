{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_axios","_plan","jest","mockedAxios","axios","describe","afterEach","clearAllMocks","it","post","mockResolvedValue","data","id","userId","planData","weeks","schedule","result","createRunningPlan","expect","toHaveBeenCalledWith","toEqual","put","updateRunningPlan","get","getRunningPlan","delete","deleteRunningPlan","listRunningPlans"],"sources":["plan.test.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios from 'axios';\nimport { createRunningPlan, updateRunningPlan, getRunningPlan, deleteRunningPlan, listRunningPlans } from '../plan';\n\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe('plan api helpers', () => {\n  afterEach(() => jest.clearAllMocks());\n\n  it('createRunningPlan posts data', async () => {\n    mockedAxios.post.mockResolvedValue({ data: { id: '1' } });\n    const data = { userId: 'u1', planData: { weeks: 1, schedule: [] } };\n    const result = await createRunningPlan(data as any);\n    expect(mockedAxios.post).toHaveBeenCalledWith('/api/running-plans', data);\n    expect(result).toEqual({ id: '1' });\n  });\n\n  it('updateRunningPlan puts data', async () => {\n    mockedAxios.put.mockResolvedValue({ data: { id: '1' } });\n    const result = await updateRunningPlan('1', { planData: { weeks: 2, schedule: [] } } as any);\n    expect(mockedAxios.put).toHaveBeenCalledWith('/api/running-plans/1', { planData: { weeks: 2, schedule: [] } });\n    expect(result).toEqual({ id: '1' });\n  });\n\n  it('getRunningPlan fetches data', async () => {\n    mockedAxios.get.mockResolvedValue({ data: { id: '1' } });\n    const result = await getRunningPlan('1');\n    expect(mockedAxios.get).toHaveBeenCalledWith('/api/running-plans/1');\n    expect(result).toEqual({ id: '1' });\n  });\n\n  it('deleteRunningPlan deletes data', async () => {\n    mockedAxios.delete.mockResolvedValue({ data: {} });\n    const result = await deleteRunningPlan('1');\n    expect(mockedAxios.delete).toHaveBeenCalledWith('/api/running-plans/1');\n    expect(result).toEqual({});\n  });\n\n  it('listRunningPlans gets all plans', async () => {\n    mockedAxios.get.mockResolvedValue({ data: [1, 2] });\n    const result = await listRunningPlans();\n    expect(mockedAxios.get).toHaveBeenCalledWith('/api/running-plans');\n    expect(result).toEqual([1, 2]);\n  });\n});\n"],"mappings":"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","ignoreList":[]}