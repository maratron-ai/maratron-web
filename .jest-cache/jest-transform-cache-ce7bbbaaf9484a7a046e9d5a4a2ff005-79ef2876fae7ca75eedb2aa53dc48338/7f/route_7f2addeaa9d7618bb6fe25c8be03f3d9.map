{"version":3,"names":["cov_279p5d06mx","actualCoverage","NextResponse","writeFile","mkdir","join","extname","randomUUID","POST","request","f","formData","s","fileEntry","get","b","Blob","json","error","status","file","allowed","includes","type","size","bytes","arrayBuffer","buffer","Buffer","from","uploadDir","process","cwd","recursive","fileName","name","url"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { writeFile, mkdir } from \"fs/promises\";\nimport { join, extname } from \"path\";\nimport { randomUUID } from \"crypto\";\n\nexport async function POST(request: NextRequest) {\n  const formData = await request.formData();\n  const fileEntry = formData.get(\"file\");\n  if (!fileEntry || !(fileEntry instanceof Blob)) {\n    return NextResponse.json({ error: \"File missing\" }, { status: 400 });\n  }\n\n  // Treat the uploaded entry as a Blob with a name\n  const file = fileEntry as Blob & { name: string };\n\n  const allowed = [\"image/jpeg\", \"image/png\", \"image/webp\", \"image/gif\"];\n  if (!allowed.includes(file.type)) {\n    return NextResponse.json({ error: \"Invalid file type\" }, { status: 400 });\n  }\n\n  if (file.size > 5 * 1024 * 1024) {\n    return NextResponse.json({ error: \"File too large\" }, { status: 400 });\n  }\n\n  const bytes = await file.arrayBuffer();\n  const buffer = Buffer.from(bytes);\n  const uploadDir = join(process.cwd(), \"public\", \"uploads\");\n  await mkdir(uploadDir, { recursive: true });\n  const fileName = `${randomUUID()}${extname(file.name)}`;\n  await writeFile(join(uploadDir, fileName), buffer);\n  return NextResponse.json({ url: `/uploads/${fileName}` });\n}\n"],"mappings":"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","ignoreList":[]}