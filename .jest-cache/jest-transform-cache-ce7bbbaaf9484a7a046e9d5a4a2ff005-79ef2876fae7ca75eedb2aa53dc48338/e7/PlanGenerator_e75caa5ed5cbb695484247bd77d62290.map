{"version":3,"names":["_jsxFileName","__jsx","React","createElement","cov_7occcrrgb","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","useState","useEffect","useUser","TrainingLevel","ToggleSwitch","Spinner","Input","SelectField","Button","RunningPlanDisplay","generate5kPlan","generate10kPlan","generateHalfMarathonPlan","generateClassicMarathonPlan","listRunningPlans","assignDatesToPlan","defaultPlanName","getDistanceLabel","DISTANCE_INFO","miles","km","weeks","half","full","DEFAULT_RACE","PlanGenerator","profile","user","loading","raceType","setRaceType","distanceUnit","setDistanceUnit","setWeeks","targetDistance","setTargetDistance","vdot","setVdot","useTotalTime","setUseTotalTime","targetPace","setTargetPace","targetTotalTime","setTargetTotalTime","planData","setPlanData","showJson","setShowJson","planName","setPlanName","endDate","setEndDate","trainingLevel","setTrainingLevel","Beginner","runsPerWeek","setRunsPerWeek","crossTrainingDays","setCrossTrainingDays","showAdvanced","setShowAdvanced","fetchName","id","all","userPlans","filter","p","userId","label","count","startsWith","length","err","console","error","VDOT","defaultDistanceUnit","info","handleGenerate","e","preventDefault","opts","plan","today","Date","base","UTC","getUTCFullYear","getUTCMonth","getUTCDate","diff","getUTCDay","setUTCDate","assumedStartDate","toISOString","slice","assumedEndDate","projectedEndDate","setDate","getDate","dayOfWeek","getDay","daysToAdd","withDates","startDate","className","__self","__source","fileName","lineNumber","columnNumber","onSubmit","min","value","String","onChange","_n","v","Number","options","Intermediate","Advanced","checked","c","leftLabel","rightLabel","onClick","max","showPlanMeta","showBulkDaySetter","onPlanNameChange","onPlanChange","htmlFor","target","navigator","clipboard","writeText","JSON","stringify","alert"],"sources":["PlanGenerator.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useUser } from \"@hooks/useUser\";\nimport { TrainingLevel } from \"@maratypes/user\";\n// import type { DayOfWeek } from \"@maratypes/basics\";\n// import type { PlannedRun } from \"@maratypes/runningPlan\";\nimport ToggleSwitch from \"@components/ToggleSwitch\";\nimport { Spinner } from \"@components/ui\";\nimport { Input } from \"@components/ui/input\";\nimport { SelectField } from \"@components/ui/FormField\";\nimport { Button } from \"@components/ui/button\";\nimport RunningPlanDisplay from \"./RunningPlanDisplay\";\nimport {\n  generate5kPlan,\n  generate10kPlan,\n  generateHalfMarathonPlan,\n  generateClassicMarathonPlan,\n} from \"@utils/running/plans/distancePlans\";\nimport { RunningPlanData } from \"@maratypes/runningPlan\";\nimport { listRunningPlans } from \"@lib/api/plan\";\nimport { assignDatesToPlan } from \"@utils/running/planDates\";\nimport {\n  defaultPlanName,\n  getDistanceLabel,\n  RaceType,\n} from \"@utils/running/planName\";\n\n\nconst DISTANCE_INFO: Record<RaceType, { miles: number; km: number; weeks: number }> = {\n  \"5k\": { miles: 3.1, km: 5, weeks: 8 },\n  \"10k\": { miles: 6.2, km: 10, weeks: 10 },\n  half: { miles: 13.1, km: 21.1, weeks: 12 },\n  full: { miles: 26.2, km: 42.2, weeks: 16 },\n};\n\nconst DEFAULT_RACE: RaceType = \"full\";\n\nconst PlanGenerator: React.FC = () => {\n  const { profile: user, loading } = useUser();\n\n  // Set initial state to user's info (if available), fallback to defaults\nconst [raceType, setRaceType] = useState<RaceType>(DEFAULT_RACE);\nconst [distanceUnit, setDistanceUnit] = useState<\"miles\" | \"kilometers\">(\n  \"miles\"\n);\nconst [weeks, setWeeks] = useState<number>(DISTANCE_INFO[DEFAULT_RACE].weeks);\nconst [targetDistance, setTargetDistance] = useState<number>(\n  DISTANCE_INFO[DEFAULT_RACE].miles\n);\n  const [vdot, setVdot] = useState<number>(30);\n  const [useTotalTime, setUseTotalTime] = useState<boolean>(false);\n  const [targetPace, setTargetPace] = useState<string>(\"10:00\");\n  const [targetTotalTime, setTargetTotalTime] = useState<string>(\"3:45:00\");\n  const [planData, setPlanData] = useState<RunningPlanData | null>(null);\n  const [showJson, setShowJson] = useState<boolean>(false);\n  const [planName, setPlanName] = useState<string>(\n    defaultPlanName(DEFAULT_RACE, 1)\n  );\n  const [endDate, setEndDate] = useState<string>(\"\");\n\n  const [trainingLevel, setTrainingLevel] = useState<TrainingLevel>(\n    TrainingLevel.Beginner\n  );\n  const [runsPerWeek, setRunsPerWeek] = useState<number>(4);\n  const [crossTrainingDays, setCrossTrainingDays] = useState<number>(0);\n  const [showAdvanced, setShowAdvanced] = useState<boolean>(false);\n  // const [runTypeDays, setRunTypeDays] = useState<\n  //   Partial<Record<PlannedRun[\"type\"], DayOfWeek>>\n  // >({});\n  // const days: DayOfWeek[] = [\n  //   \"Sunday\",\n  //   \"Monday\",\n  //   \"Tuesday\",\n  //   \"Wednesday\",\n  //   \"Thursday\",\n  //   \"Friday\",\n  //   \"Saturday\",\n  // ];\n  // const runTypes: PlannedRun[\"type\"][] = [ // doesn't include race\n  //   \"easy\",\n  //   \"tempo\",\n  //   \"interval\",\n  //   \"long\",\n  // ];\n\n  // const handleRunDayChange = (\n  //   type: PlannedRun[\"type\"],\n  //   day: DayOfWeek | \"\"\n  // ) => {\n  //   setRunTypeDays((prev) => ({\n  //     ...prev,\n  //     ...(day ? { [type]: day } : { [type]: undefined }),\n  //   }));\n  // };\n  useEffect(() => {\n    if (crossTrainingDays > 7 - runsPerWeek) {\n      setCrossTrainingDays(7 - runsPerWeek);\n    }\n  }, [runsPerWeek, crossTrainingDays]);\n\n  useEffect(() => {\n    const fetchName = async () => {\n      if (!user?.id) return;\n      try {\n        const all = await listRunningPlans();\n        const userPlans = all.filter((p: { userId: string; name?: string }) => p.userId === user.id);\n        const label = getDistanceLabel(raceType);\n        const count = userPlans.filter((p: { name: string; }) => p.name?.startsWith(label)).length; // not sure if p's type is right\n        setPlanName(defaultPlanName(raceType, count + 1));\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchName();\n  }, [user?.id, raceType]);\n  // const [defaultShoeId, setDefaultShoeId] = useState<string | undefined>(\n  //   undefined\n  // );\n\n  // On load/fetch, update state defaults from user profile\n  useEffect(() => {\n    if (user) {\n      if (user.trainingLevel) setTrainingLevel(user.trainingLevel);\n      setVdot(user.VDOT ?? 30);\n      if (user.defaultDistanceUnit) setDistanceUnit(user.defaultDistanceUnit);\n      // if (user.defaultShoeId) setDefaultShoeId(user.defaultShoeId);\n      // Optionally, set other user-specific defaults\n    } else {\n      setVdot(30);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const info = DISTANCE_INFO[raceType];\n    setWeeks(info.weeks);\n    setTargetDistance(\n      distanceUnit === \"kilometers\" ? info.km : info.miles\n    );\n  }, [raceType, distanceUnit]);\n\n  const handleGenerate = (e: React.FormEvent) => {\n    e.preventDefault();\n    const opts = {\n      weeks,\n      distanceUnit,\n      trainingLevel,\n      vdot,\n      targetPace: useTotalTime ? undefined : targetPace,\n      targetTotalTime: useTotalTime ? targetTotalTime : undefined,\n      runsPerWeek,\n      crossTrainingDays,\n      // runTypeDays,\n    };\n    let plan: RunningPlanData;\n    switch (raceType) {\n      case \"5k\":\n        plan = generate5kPlan(opts);\n        break;\n      case \"10k\":\n        plan = generate10kPlan(opts);\n        break;\n      case \"half\":\n        plan = generateHalfMarathonPlan(opts);\n        break;\n      default:\n        plan = generateClassicMarathonPlan(opts);\n        break;\n    }\n    // Assign default start and end dates if not provided\n    const today = new Date();\n    const base = new Date(Date.UTC(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate()));\n    const diff = (7 - base.getUTCDay()) % 7;\n    base.setUTCDate(base.getUTCDate() + (diff === 0 ? 7 : diff));\n    const assumedStartDate = base.toISOString().slice(0, 10);\n    let assumedEndDate = endDate;\n\n    if (!endDate) {\n      const projectedEndDate = new Date(today);\n      projectedEndDate.setDate(today.getDate() + weeks * 7);\n\n      // Adjust to nearest following Sunday\n      const dayOfWeek = projectedEndDate.getDay(); // 0 is Sunday\n      const daysToAdd = (7 - dayOfWeek) % 7;\n      projectedEndDate.setDate(projectedEndDate.getDate() + daysToAdd);\n\n      assumedEndDate = projectedEndDate.toISOString().slice(0, 10);\n    }\n\n    const withDates = assignDatesToPlan(plan, {\n      startDate: assumedStartDate,\n      endDate: assumedEndDate,\n    });\n    setPlanData(withDates);\n    setEndDate(withDates.endDate?.slice(0, 10) ?? \"\");\n  };\n\n  return (\n    <div className=\"w-full px-4 sm:px-6 lg:px-8 p-4 space-y-4\">\n      <h1 className=\"text-2xl font-bold text-center mb-4\">\n        Generate Your Running Plan\n      </h1>\n      {loading ? (\n        <div className=\"flex justify-center py-4\">\n          <Spinner className=\"h-5 w-5\" />\n        </div>\n      ) : (\n        <form onSubmit={handleGenerate} className=\"space-y-4\">\n          {/* Weeks */}\n          <Input\n            label=\"Weeks\"\n            name=\"weeks\"\n            type=\"number\"\n            min={8}\n            value={String(weeks)}\n            onChange={(_n, v) => setWeeks(Number(v))}\n            className=\"mt-1\"\n          />\n          {/* Race Date */}\n          <Input\n            label=\"Race Date\"\n            name=\"raceDate\"\n            type=\"date\"\n            value={endDate}\n            onChange={(_n, v) => setEndDate(v)}\n            className=\"mt-1\"\n          />\n          {/* Race Selection */}\n          <SelectField\n            label=\"Race Distance\"\n            name=\"raceType\"\n            options={[\n              { value: \"5k\", label: \"5K\" },\n              { value: \"10k\", label: \"10K\" },\n              { value: \"half\", label: \"Half Marathon\" },\n              { value: \"full\", label: \"Marathon\" },\n            ]}\n            value={raceType}\n            onChange={(_n, v) => setRaceType(v as RaceType)}\n            className=\"mt-1\"\n          />\n          <span className=\"text-sm mt-1\">\n            Target Distance: {targetDistance} {distanceUnit}\n          </span>\n          {/* Training Level */}\n          <SelectField\n            label=\"Training Level\"\n            name=\"trainingLevel\"\n            options={[\n              { value: TrainingLevel.Beginner, label: \"Beginner\" },\n              { value: TrainingLevel.Intermediate, label: \"Intermediate\" },\n              { value: TrainingLevel.Advanced, label: \"Advanced\" },\n            ]}\n            value={trainingLevel}\n            onChange={(_n, v) => setTrainingLevel(v as TrainingLevel)}\n            className=\"mt-1\"\n          />\n\n          {/* Goal Input Mode */}\n          <ToggleSwitch\n            checked={useTotalTime}\n            onChange={(c) => setUseTotalTime(c)}\n            leftLabel=\"Pace\"\n            rightLabel=\"Total Time\"\n          />\n          {/* Target Pace or Total Time */}\n          {useTotalTime ? (\n            <Input\n              label=\"Target Total Time (hh:mm:ss or mm:ss)\"\n              name=\"targetTotalTime\"\n              type=\"text\"\n              value={targetTotalTime}\n              onChange={(_n, v) => setTargetTotalTime(v)}\n              className=\"mt-1\"\n            />\n          ) : (\n            <Input\n              label=\"Target Pace (mm:ss)\"\n              name=\"targetPace\"\n              type=\"text\"\n              value={targetPace}\n              onChange={(_n, v) => setTargetPace(v)}\n              className=\"mt-1\"\n            />\n          )}\n          <div className=\"flex items-center w-full space-x-2\">\n            <Button\n              type=\"button\"\n              onClick={() => setShowAdvanced((p) => !p)}\n              className=\"w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from focus:ring-0\"\n            >\n              {showAdvanced ? \"Hide Advanced\" : \"Show Advanced\"}\n            </Button>\n          </div>\n          {showAdvanced && (\n            <div className=\"space-y-4\">\n              {/* Runs Per Week */}\n              <Input\n                label=\"Runs Per Week\"\n                name=\"runsPerWeek\"\n                type=\"number\"\n                min={1}\n                max={7}\n                value={String(runsPerWeek)}\n                onChange={(_n, v) => setRunsPerWeek(Number(v))}\n                className=\"mt-1\"\n              />\n              {/* Cross Training Days */}\n              <Input\n                label=\"Cross Training Days\"\n                name=\"crossTrainingDays\"\n                type=\"number\"\n                min={0}\n                max={7 - runsPerWeek}\n                value={String(crossTrainingDays)}\n                onChange={(_n, v) => setCrossTrainingDays(Number(v))}\n                className=\"mt-1\"\n              />\n              {/* VDOT */}\n              <Input\n                label=\"VDOT\"\n                name=\"vdot\"\n                type=\"number\"\n                min={20}\n                max={60}\n                value={String(vdot)}\n                onChange={(_n, v) => setVdot(Number(v))}\n                className=\"mt-1\"\n              />\n              {/* Run Type Days\n              <div className=\"grid grid-cols-2 gap-4\">\n                {runTypes.map((type) => (\n                  <SelectField\n                    key={type}\n                    label={`${type.charAt(0).toUpperCase() + type.slice(1)} Day`}\n                    name={`runType-${type}`}\n                    options={[\n                      { value: \"\", label: \"None\" },\n                      ...days.map((day) => ({ value: day, label: day })),\n                    ]}\n                    value={runTypeDays[type] || \"\"}\n                    onChange={(_n, v) => handleRunDayChange(type, v as DayOfWeek)}\n                  />\n                ))}\n              </div> */}\n            </div>\n          )}\n          <div className=\"flex-1 flex justify-center\">\n            <Button\n              type=\"submit\"\n              className=\"w-auto text-foreground bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from focus:ring-0\"\n            >\n              Generate Plan\n            </Button>\n          </div>\n        </form>\n      )}\n      {planData && (\n        <div className=\"mt-6\">\n          <RunningPlanDisplay\n            planData={planData}\n            planName={planName}\n            showPlanMeta\n            showBulkDaySetter\n            onPlanNameChange={setPlanName}\n            onPlanChange={setPlanData}\n          />\n          <div className=\"mt-4\">\n            <label className=\"flex items-center space-x-2\">\n              <label htmlFor=\"showJson\" className=\"flex items-center space-x-2\">\n                {/* Keep this as input not Input */}\n                <input\n                  id=\"showJson\"\n                  name=\"showJson\"\n                  type=\"checkbox\"\n                  checked={showJson}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setShowJson(e.target.checked)\n                  }\n                  className=\"form-checkbox\"\n                />\n                <span>Show JSON</span>\n              </label>\n              {showJson && (\n                <Button\n                  type=\"button\"\n                  onClick={() => {\n                    navigator.clipboard.writeText(\n                      JSON.stringify(planData, null, 2)\n                    );\n                    alert(\"JSON copied to clipboard!\");\n                  }}\n                  className=\"ml-2 text-primary underline block w-auto bg-transparent no-underline transition-colors hover:text-background hover:no-underline hover:bg-brand-from\"\n                >\n                  Copy JSON\n                </Button>\n              )}\n            </label>\n            {showJson && (\n              <pre className=\"bg-background p-4 rounded overflow-x-auto mt-2 text-foreground\">\n                {JSON.stringify(planData, null, 2)}\n              </pre>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlanGenerator;\n"],"mappings":"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","ignoreList":[]}