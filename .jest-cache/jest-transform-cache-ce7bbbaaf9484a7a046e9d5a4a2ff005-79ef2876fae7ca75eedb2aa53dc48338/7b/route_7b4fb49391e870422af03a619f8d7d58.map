{"version":3,"names":["cov_1n8iodry1u","actualCoverage","NextResponse","prisma","GET","_req","ctx","f","params","s","username","profile","socialProfile","findUnique","where","include","user","select","name","avatarUrl","_count","runs","followers","following","posts","b","json","error","status","total","run","aggregate","userId","_sum","distance","data","id","bio","createdAt","updatedAt","runCount","totalDistance","followerCount","followingCount","postCount","err","console"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\n\nexport async function GET(_req: NextRequest, ctx: { params: Promise<{ username: string }> }) {\n  const params = await ctx.params;\n  const { username } = params;\n  try {\n    const profile = await prisma.socialProfile.findUnique({\n      where: { username },\n      include: {\n        user: {\n          select: {\n            name: true,\n            avatarUrl: true,\n            _count: { select: { runs: true } },\n          },\n        },\n        _count: { select: { followers: true, following: true, posts: true } },\n      },\n    });\n    if (!profile) return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n\n    const total = await prisma.run.aggregate({\n      where: { userId: profile.userId },\n      _sum: { distance: true },\n    });\n\n    const data = {\n      id: profile.id,\n      userId: profile.userId,\n      username: profile.username,\n      bio: profile.bio,\n      avatarUrl: profile.user.avatarUrl,\n      createdAt: profile.createdAt,\n      updatedAt: profile.updatedAt,\n      name: profile.user.name,\n      runCount: profile.user._count.runs,\n      totalDistance: total._sum.distance ?? 0,\n      followerCount: profile._count.followers,\n      followingCount: profile._count.following,\n      postCount: profile._count.posts,\n    };\n\n    return NextResponse.json(data);\n  } catch (err) {\n    console.error(\"Error getting profile\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n"],"mappings":"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","ignoreList":[]}