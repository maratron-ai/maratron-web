e7cf410caa5b09f73e98a3ce7da7b8ce
/* istanbul ignore next */
function cov_1n8iodry1u() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/profile/[username]/route.ts";
  var hash = "c7d30803465022e528e2b135149e28eb6bc7b5ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/profile/[username]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "1": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "2": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "3": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "4": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 84
        }
      },
      "5": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 84
        }
      },
      "6": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "7": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "8": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "9": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "10": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 25
          }
        },
        loc: {
          start: {
            line: 4,
            column: 93
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 4
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 40
          }
        }, {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c7d30803465022e528e2b135149e28eb6bc7b5ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n8iodry1u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n8iodry1u();
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
export async function GET(_req, ctx) {
  /* istanbul ignore next */
  cov_1n8iodry1u().f[0]++;
  const params =
  /* istanbul ignore next */
  (cov_1n8iodry1u().s[0]++, await ctx.params);
  const {
    username
  } =
  /* istanbul ignore next */
  (cov_1n8iodry1u().s[1]++, params);
  /* istanbul ignore next */
  cov_1n8iodry1u().s[2]++;
  try {
    const profile =
    /* istanbul ignore next */
    (cov_1n8iodry1u().s[3]++, await prisma.socialProfile.findUnique({
      where: {
        username
      },
      include: {
        user: {
          select: {
            name: true,
            avatarUrl: true,
            _count: {
              select: {
                runs: true
              }
            }
          }
        },
        _count: {
          select: {
            followers: true,
            following: true,
            posts: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1n8iodry1u().s[4]++;
    if (!profile) {
      /* istanbul ignore next */
      cov_1n8iodry1u().b[0][0]++;
      cov_1n8iodry1u().s[5]++;
      return NextResponse.json({
        error: "Not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1n8iodry1u().b[0][1]++;
    }
    const total =
    /* istanbul ignore next */
    (cov_1n8iodry1u().s[6]++, await prisma.run.aggregate({
      where: {
        userId: profile.userId
      },
      _sum: {
        distance: true
      }
    }));
    const data =
    /* istanbul ignore next */
    (cov_1n8iodry1u().s[7]++, {
      id: profile.id,
      userId: profile.userId,
      username: profile.username,
      bio: profile.bio,
      avatarUrl: profile.user.avatarUrl,
      createdAt: profile.createdAt,
      updatedAt: profile.updatedAt,
      name: profile.user.name,
      runCount: profile.user._count.runs,
      totalDistance:
      /* istanbul ignore next */
      (cov_1n8iodry1u().b[1][0]++, total._sum.distance) ??
      /* istanbul ignore next */
      (cov_1n8iodry1u().b[1][1]++, 0),
      followerCount: profile._count.followers,
      followingCount: profile._count.following,
      postCount: profile._count.posts
    });
    /* istanbul ignore next */
    cov_1n8iodry1u().s[8]++;
    return NextResponse.json(data);
  } catch (err) {
    /* istanbul ignore next */
    cov_1n8iodry1u().s[9]++;
    console.error("Error getting profile", err);
    /* istanbul ignore next */
    cov_1n8iodry1u().s[10]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW44aW9kcnkxdSIsImFjdHVhbENvdmVyYWdlIiwiTmV4dFJlc3BvbnNlIiwicHJpc21hIiwiR0VUIiwiX3JlcSIsImN0eCIsImYiLCJwYXJhbXMiLCJzIiwidXNlcm5hbWUiLCJwcm9maWxlIiwic29jaWFsUHJvZmlsZSIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImluY2x1ZGUiLCJ1c2VyIiwic2VsZWN0IiwibmFtZSIsImF2YXRhclVybCIsIl9jb3VudCIsInJ1bnMiLCJmb2xsb3dlcnMiLCJmb2xsb3dpbmciLCJwb3N0cyIsImIiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJ0b3RhbCIsInJ1biIsImFnZ3JlZ2F0ZSIsInVzZXJJZCIsIl9zdW0iLCJkaXN0YW5jZSIsImRhdGEiLCJpZCIsImJpbyIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsInJ1bkNvdW50IiwidG90YWxEaXN0YW5jZSIsImZvbGxvd2VyQ291bnQiLCJmb2xsb3dpbmdDb3VudCIsInBvc3RDb3VudCIsImVyciIsImNvbnNvbGUiXSwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBwcmlzbWEgfSBmcm9tIFwiQGxpYi9wcmlzbWFcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChfcmVxOiBOZXh0UmVxdWVzdCwgY3R4OiB7IHBhcmFtczogUHJvbWlzZTx7IHVzZXJuYW1lOiBzdHJpbmcgfT4gfSkge1xuICBjb25zdCBwYXJhbXMgPSBhd2FpdCBjdHgucGFyYW1zO1xuICBjb25zdCB7IHVzZXJuYW1lIH0gPSBwYXJhbXM7XG4gIHRyeSB7XG4gICAgY29uc3QgcHJvZmlsZSA9IGF3YWl0IHByaXNtYS5zb2NpYWxQcm9maWxlLmZpbmRVbmlxdWUoe1xuICAgICAgd2hlcmU6IHsgdXNlcm5hbWUgfSxcbiAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgdXNlcjoge1xuICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgICAgICAgIGF2YXRhclVybDogdHJ1ZSxcbiAgICAgICAgICAgIF9jb3VudDogeyBzZWxlY3Q6IHsgcnVuczogdHJ1ZSB9IH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgX2NvdW50OiB7IHNlbGVjdDogeyBmb2xsb3dlcnM6IHRydWUsIGZvbGxvd2luZzogdHJ1ZSwgcG9zdHM6IHRydWUgfSB9LFxuICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAoIXByb2ZpbGUpIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIk5vdCBmb3VuZFwiIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG5cbiAgICBjb25zdCB0b3RhbCA9IGF3YWl0IHByaXNtYS5ydW4uYWdncmVnYXRlKHtcbiAgICAgIHdoZXJlOiB7IHVzZXJJZDogcHJvZmlsZS51c2VySWQgfSxcbiAgICAgIF9zdW06IHsgZGlzdGFuY2U6IHRydWUgfSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBpZDogcHJvZmlsZS5pZCxcbiAgICAgIHVzZXJJZDogcHJvZmlsZS51c2VySWQsXG4gICAgICB1c2VybmFtZTogcHJvZmlsZS51c2VybmFtZSxcbiAgICAgIGJpbzogcHJvZmlsZS5iaW8sXG4gICAgICBhdmF0YXJVcmw6IHByb2ZpbGUudXNlci5hdmF0YXJVcmwsXG4gICAgICBjcmVhdGVkQXQ6IHByb2ZpbGUuY3JlYXRlZEF0LFxuICAgICAgdXBkYXRlZEF0OiBwcm9maWxlLnVwZGF0ZWRBdCxcbiAgICAgIG5hbWU6IHByb2ZpbGUudXNlci5uYW1lLFxuICAgICAgcnVuQ291bnQ6IHByb2ZpbGUudXNlci5fY291bnQucnVucyxcbiAgICAgIHRvdGFsRGlzdGFuY2U6IHRvdGFsLl9zdW0uZGlzdGFuY2UgPz8gMCxcbiAgICAgIGZvbGxvd2VyQ291bnQ6IHByb2ZpbGUuX2NvdW50LmZvbGxvd2VycyxcbiAgICAgIGZvbGxvd2luZ0NvdW50OiBwcm9maWxlLl9jb3VudC5mb2xsb3dpbmcsXG4gICAgICBwb3N0Q291bnQ6IHByb2ZpbGUuX2NvdW50LnBvc3RzLFxuICAgIH07XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oZGF0YSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZXR0aW5nIHByb2ZpbGVcIiwgZXJyKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWRcIiB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmWixTQUFzQkUsWUFBWSxRQUFRLGFBQWE7QUFDdkQsU0FBU0MsTUFBTSxRQUFRLGFBQWE7QUFFcEMsT0FBTyxlQUFlQyxHQUFHQSxDQUFDQyxJQUFpQixFQUFFQyxHQUE4QyxFQUFFO0VBQUE7RUFBQU4sY0FBQSxHQUFBTyxDQUFBO0VBQzNGLE1BQU1DLE1BQU07RUFBQTtFQUFBLENBQUFSLGNBQUEsR0FBQVMsQ0FBQSxPQUFHLE1BQU1ILEdBQUcsQ0FBQ0UsTUFBTTtFQUMvQixNQUFNO0lBQUVFO0VBQVMsQ0FBQztFQUFBO0VBQUEsQ0FBQVYsY0FBQSxHQUFBUyxDQUFBLE9BQUdELE1BQU07RUFBQztFQUFBUixjQUFBLEdBQUFTLENBQUE7RUFDNUIsSUFBSTtJQUNGLE1BQU1FLE9BQU87SUFBQTtJQUFBLENBQUFYLGNBQUEsR0FBQVMsQ0FBQSxPQUFHLE1BQU1OLE1BQU0sQ0FBQ1MsYUFBYSxDQUFDQyxVQUFVLENBQUM7TUFDcERDLEtBQUssRUFBRTtRQUFFSjtNQUFTLENBQUM7TUFDbkJLLE9BQU8sRUFBRTtRQUNQQyxJQUFJLEVBQUU7VUFDSkMsTUFBTSxFQUFFO1lBQ05DLElBQUksRUFBRSxJQUFJO1lBQ1ZDLFNBQVMsRUFBRSxJQUFJO1lBQ2ZDLE1BQU0sRUFBRTtjQUFFSCxNQUFNLEVBQUU7Z0JBQUVJLElBQUksRUFBRTtjQUFLO1lBQUU7VUFDbkM7UUFDRixDQUFDO1FBQ0RELE1BQU0sRUFBRTtVQUFFSCxNQUFNLEVBQUU7WUFBRUssU0FBUyxFQUFFLElBQUk7WUFBRUMsU0FBUyxFQUFFLElBQUk7WUFBRUMsS0FBSyxFQUFFO1VBQUs7UUFBRTtNQUN0RTtJQUNGLENBQUMsQ0FBQztJQUFDO0lBQUF4QixjQUFBLEdBQUFTLENBQUE7SUFDSCxJQUFJLENBQUNFLE9BQU8sRUFBRTtNQUFBO01BQUFYLGNBQUEsR0FBQXlCLENBQUE7TUFBQXpCLGNBQUEsR0FBQVMsQ0FBQTtNQUFBLE9BQU9QLFlBQVksQ0FBQ3dCLElBQUksQ0FBQztRQUFFQyxLQUFLLEVBQUU7TUFBWSxDQUFDLEVBQUU7UUFBRUMsTUFBTSxFQUFFO01BQUksQ0FBQyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQTVCLGNBQUEsR0FBQXlCLENBQUE7SUFBQTtJQUVoRixNQUFNSSxLQUFLO0lBQUE7SUFBQSxDQUFBN0IsY0FBQSxHQUFBUyxDQUFBLE9BQUcsTUFBTU4sTUFBTSxDQUFDMkIsR0FBRyxDQUFDQyxTQUFTLENBQUM7TUFDdkNqQixLQUFLLEVBQUU7UUFBRWtCLE1BQU0sRUFBRXJCLE9BQU8sQ0FBQ3FCO01BQU8sQ0FBQztNQUNqQ0MsSUFBSSxFQUFFO1FBQUVDLFFBQVEsRUFBRTtNQUFLO0lBQ3pCLENBQUMsQ0FBQztJQUVGLE1BQU1DLElBQUk7SUFBQTtJQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsT0FBRztNQUNYMkIsRUFBRSxFQUFFekIsT0FBTyxDQUFDeUIsRUFBRTtNQUNkSixNQUFNLEVBQUVyQixPQUFPLENBQUNxQixNQUFNO01BQ3RCdEIsUUFBUSxFQUFFQyxPQUFPLENBQUNELFFBQVE7TUFDMUIyQixHQUFHLEVBQUUxQixPQUFPLENBQUMwQixHQUFHO01BQ2hCbEIsU0FBUyxFQUFFUixPQUFPLENBQUNLLElBQUksQ0FBQ0csU0FBUztNQUNqQ21CLFNBQVMsRUFBRTNCLE9BQU8sQ0FBQzJCLFNBQVM7TUFDNUJDLFNBQVMsRUFBRTVCLE9BQU8sQ0FBQzRCLFNBQVM7TUFDNUJyQixJQUFJLEVBQUVQLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDRSxJQUFJO01BQ3ZCc0IsUUFBUSxFQUFFN0IsT0FBTyxDQUFDSyxJQUFJLENBQUNJLE1BQU0sQ0FBQ0MsSUFBSTtNQUNsQ29CLGFBQWE7TUFBRTtNQUFBLENBQUF6QyxjQUFBLEdBQUF5QixDQUFBLFVBQUFJLEtBQUssQ0FBQ0ksSUFBSSxDQUFDQyxRQUFRO01BQUE7TUFBQSxDQUFBbEMsY0FBQSxHQUFBeUIsQ0FBQSxVQUFJLENBQUM7TUFDdkNpQixhQUFhLEVBQUUvQixPQUFPLENBQUNTLE1BQU0sQ0FBQ0UsU0FBUztNQUN2Q3FCLGNBQWMsRUFBRWhDLE9BQU8sQ0FBQ1MsTUFBTSxDQUFDRyxTQUFTO01BQ3hDcUIsU0FBUyxFQUFFakMsT0FBTyxDQUFDUyxNQUFNLENBQUNJO0lBQzVCLENBQUM7SUFBQztJQUFBeEIsY0FBQSxHQUFBUyxDQUFBO0lBRUYsT0FBT1AsWUFBWSxDQUFDd0IsSUFBSSxDQUFDUyxJQUFJLENBQUM7RUFDaEMsQ0FBQyxDQUFDLE9BQU9VLEdBQUcsRUFBRTtJQUFBO0lBQUE3QyxjQUFBLEdBQUFTLENBQUE7SUFDWnFDLE9BQU8sQ0FBQ25CLEtBQUssQ0FBQyx1QkFBdUIsRUFBRWtCLEdBQUcsQ0FBQztJQUFDO0lBQUE3QyxjQUFBLEdBQUFTLENBQUE7SUFDNUMsT0FBT1AsWUFBWSxDQUFDd0IsSUFBSSxDQUFDO01BQUVDLEtBQUssRUFBRTtJQUFTLENBQUMsRUFBRTtNQUFFQyxNQUFNLEVBQUU7SUFBSSxDQUFDLENBQUM7RUFDaEU7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==