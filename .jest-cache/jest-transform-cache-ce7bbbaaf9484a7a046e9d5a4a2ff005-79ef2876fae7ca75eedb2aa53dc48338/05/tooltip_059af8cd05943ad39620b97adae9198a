f4a3ccc9d3579ec7f91ae4de016fddf5
/* istanbul ignore next */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipTrigger = exports.TooltipRoot = exports.TooltipProvider = exports.TooltipContent = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var
/* istanbul ignore next */
React = _interopRequireWildcard(require("react"));
var
/* istanbul ignore next */
TooltipPrimitive = _interopRequireWildcard(require("@radix-ui/react-tooltip"));
var
/* istanbul ignore next */
_cn = require("@lib/utils/cn");
/* istanbul ignore next */
const _excluded = ["className", "sideOffset"];
var _jsxFileName = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/tooltip.tsx";
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
var __jsx = React.createElement;
function cov_jz1c0rl8l() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/tooltip.tsx";
  var hash = "4d6f02dc9eddb7f87614cff6f16524aaab93841b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/components/ui/tooltip.tsx",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 5,
          column: 56
        }
      },
      "1": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "2": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "3": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 22,
          column: 2
        }
      },
      "4": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 21,
          column: 4
        }
      },
      "5": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 21,
            column: 4
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 12,
            column: 30
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4d6f02dc9eddb7f87614cff6f16524aaab93841b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jz1c0rl8l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jz1c0rl8l();
const TooltipProvider =
/* istanbul ignore next */
exports.TooltipProvider = (cov_jz1c0rl8l().s[0]++, TooltipPrimitive.Provider);
const TooltipRoot =
/* istanbul ignore next */
exports.TooltipRoot = (cov_jz1c0rl8l().s[1]++, TooltipPrimitive.Root);
const TooltipTrigger =
/* istanbul ignore next */
exports.TooltipTrigger = (cov_jz1c0rl8l().s[2]++, TooltipPrimitive.Trigger);
const TooltipContent =
/* istanbul ignore next */
exports.TooltipContent = (cov_jz1c0rl8l().s[3]++, /*#__PURE__*/React.forwardRef((
/* istanbul ignore next */
_ref, ref) => {
  /* istanbul ignore next */
  let {
      className,
      sideOffset =
      /* istanbul ignore next */
      (cov_jz1c0rl8l().b[0][0]++, 4)
    } = _ref,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  /* istanbul ignore next */
  cov_jz1c0rl8l().f[0]++;
  cov_jz1c0rl8l().s[4]++;
  return /* istanbul ignore next */__jsx(
  /* istanbul ignore next */
  TooltipPrimitive.Content,
  /* istanbul ignore next */
  (0, _extends2.default)({
    ref: ref,
    sideOffset: sideOffset,
    className:
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _cn.
    /* istanbul ignore next */
    cn)("z-50 overflow-hidden rounded-md bg-muted px-2 py-1.5 text-sm text-foreground shadow-md", className)
  }, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13,
      columnNumber: 3
    }
  }));
}));
/* istanbul ignore next */
cov_jz1c0rl8l().s[5]++;
TooltipContent.displayName = TooltipPrimitive.Content.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIlRvb2x0aXBQcmltaXRpdmUiLCJfY24iLCJfZXhjbHVkZWQiLCJfanN4RmlsZU5hbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJfX2pzeCIsImNyZWF0ZUVsZW1lbnQiLCJjb3ZfanoxYzBybDhsIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiVG9vbHRpcFByb3ZpZGVyIiwiZXhwb3J0cyIsIlByb3ZpZGVyIiwiVG9vbHRpcFJvb3QiLCJSb290IiwiVG9vbHRpcFRyaWdnZXIiLCJUcmlnZ2VyIiwiVG9vbHRpcENvbnRlbnQiLCJmb3J3YXJkUmVmIiwiX3JlZiIsInJlZiIsImNsYXNzTmFtZSIsInNpZGVPZmZzZXQiLCJwcm9wcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJDb250ZW50IiwiX2V4dGVuZHMyIiwiY24iLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsidG9vbHRpcC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBUb29sdGlwUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtdG9vbHRpcFwiO1xuaW1wb3J0IHsgY24gfSBmcm9tIFwiQGxpYi91dGlscy9jblwiO1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcFByb3ZpZGVyID0gVG9vbHRpcFByaW1pdGl2ZS5Qcm92aWRlcjtcbmV4cG9ydCBjb25zdCBUb29sdGlwUm9vdCA9IFRvb2x0aXBQcmltaXRpdmUuUm9vdDtcbmV4cG9ydCBjb25zdCBUb29sdGlwVHJpZ2dlciA9IFRvb2x0aXBQcmltaXRpdmUuVHJpZ2dlcjtcblxuZXhwb3J0IGNvbnN0IFRvb2x0aXBDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgVG9vbHRpcFByaW1pdGl2ZS5Db250ZW50PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBUb29sdGlwUHJpbWl0aXZlLkNvbnRlbnQ+XG4+KCh7IGNsYXNzTmFtZSwgc2lkZU9mZnNldCA9IDQsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8VG9vbHRpcFByaW1pdGl2ZS5Db250ZW50XG4gICAgcmVmPXtyZWZ9XG4gICAgc2lkZU9mZnNldD17c2lkZU9mZnNldH1cbiAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgXCJ6LTUwIG92ZXJmbG93LWhpZGRlbiByb3VuZGVkLW1kIGJnLW11dGVkIHB4LTIgcHktMS41IHRleHQtc20gdGV4dC1mb3JlZ3JvdW5kIHNoYWRvdy1tZFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKTtcblRvb2x0aXBDb250ZW50LmRpc3BsYXlOYW1lID0gVG9vbHRpcFByaW1pdGl2ZS5Db250ZW50LmRpc3BsYXlOYW1lO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQTtBQUFBO0FBQUFDLGdCQUFBLEdBQUFGLHVCQUFBLENBQUFDLE9BQUE7QUFDQTtBQUFBO0FBQUFFLEdBQUEsR0FBQUYsT0FBQTtBQUFtQztBQUFBLE1BQUFHLFNBQUE7QUFBQSxJQUFBQyxZQUFBO0FBQUEsU0FBQUwsd0JBQUFNLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFSLHVCQUFBLFlBQUFBLENBQUFNLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMsU0FBQSxRQUFBQyxPQUFBLEVBQUFWLENBQUEsaUJBQUFBLENBQUEsdUJBQUFBLENBQUEseUJBQUFBLENBQUEsU0FBQVEsQ0FBQSxNQUFBRixDQUFBLEdBQUFMLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBLFFBQUFHLENBQUEsQ0FBQUssR0FBQSxDQUFBWCxDQUFBLFVBQUFNLENBQUEsQ0FBQU0sR0FBQSxDQUFBWixDQUFBLEdBQUFNLENBQUEsQ0FBQU8sR0FBQSxDQUFBYixDQUFBLEVBQUFRLENBQUEsZ0JBQUFQLENBQUEsSUFBQUQsQ0FBQSxnQkFBQUMsQ0FBQSxPQUFBYSxjQUFBLENBQUFDLElBQUEsQ0FBQWYsQ0FBQSxFQUFBQyxDQUFBLE9BQUFNLENBQUEsSUFBQUQsQ0FBQSxHQUFBVSxNQUFBLENBQUFDLGNBQUEsS0FBQUQsTUFBQSxDQUFBRSx3QkFBQSxDQUFBbEIsQ0FBQSxFQUFBQyxDQUFBLE9BQUFNLENBQUEsQ0FBQUssR0FBQSxJQUFBTCxDQUFBLENBQUFNLEdBQUEsSUFBQVAsQ0FBQSxDQUFBRSxDQUFBLEVBQUFQLENBQUEsRUFBQU0sQ0FBQSxJQUFBQyxDQUFBLENBQUFQLENBQUEsSUFBQUQsQ0FBQSxDQUFBQyxDQUFBLFdBQUFPLENBQUEsS0FBQVIsQ0FBQSxFQUFBQyxDQUFBO0FBQUEsSUFBQWtCLEtBQUEsR0FBQTFCLEtBQUEsQ0FBQTJCLGFBQUE7QUFBQSxTQUFBQyxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQs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