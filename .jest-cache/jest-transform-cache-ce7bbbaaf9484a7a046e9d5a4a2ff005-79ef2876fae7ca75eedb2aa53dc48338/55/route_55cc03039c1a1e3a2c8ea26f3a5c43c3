afc660c37f19df26fc0e2928c4d3cdb3
/* istanbul ignore next */
function cov_wqik6sc8o() {
  var path = "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/follow/route.ts";
  var hash = "480876493e59b5631181270ec60a027a1e8d7aba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/jacksonthetford/Desktop/maratron-monorepo/apps/web/src/app/api/social/follow/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 38
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 96
        }
      },
      "3": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 14,
          column: 6
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "6": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 67
        }
      },
      "8": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 63
        }
      },
      "9": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "10": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "12": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "13": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 54
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "17": {
        start: {
          line: 43,
          column: 38
        },
        end: {
          line: 43,
          column: 54
        }
      },
      "18": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "19": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "20": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 33
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "POST",
        decl: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 26
          }
        },
        loc: {
          start: {
            line: 4,
            column: 45
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 25
          }
        },
        loc: {
          start: {
            line: 22,
            column: 44
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "DELETE",
        decl: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 28
          }
        },
        loc: {
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 6,
            column: 6
          },
          end: {
            line: 6,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 6
          },
          end: {
            line: 6,
            column: 17
          }
        }, {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 33
          }
        }],
        line: 6
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 25,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 25,
            column: 17
          }
        }, {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 33
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "480876493e59b5631181270ec60a027a1e8d7aba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wqik6sc8o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wqik6sc8o();
import { NextResponse } from "next/server";
import { prisma } from "@lib/prisma";
export async function POST(req) {
  /* istanbul ignore next */
  cov_wqik6sc8o().f[0]++;
  const {
    followerId,
    followingId
  } =
  /* istanbul ignore next */
  (cov_wqik6sc8o().s[0]++, await req.json());
  /* istanbul ignore next */
  cov_wqik6sc8o().s[1]++;
  if (
  /* istanbul ignore next */
  (cov_wqik6sc8o().b[1][0]++, !followerId) ||
  /* istanbul ignore next */
  (cov_wqik6sc8o().b[1][1]++, !followingId)) {
    /* istanbul ignore next */
    cov_wqik6sc8o().b[0][0]++;
    cov_wqik6sc8o().s[2]++;
    return NextResponse.json({
      error: "followerId and followingId required"
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_wqik6sc8o().b[0][1]++;
  }
  cov_wqik6sc8o().s[3]++;
  try {
    const follow =
    /* istanbul ignore next */
    (cov_wqik6sc8o().s[4]++, await prisma.follow.upsert({
      where: {
        followerId_followingId: {
          followerId,
          followingId
        }
      },
      update: {},
      create: {
        followerId,
        followingId
      }
    }));
    /* istanbul ignore next */
    cov_wqik6sc8o().s[5]++;
    return NextResponse.json(follow, {
      status: 201
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_wqik6sc8o().s[6]++;
    console.error("Error following", err);
    /* istanbul ignore next */
    cov_wqik6sc8o().s[7]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
export async function GET(req) {
  /* istanbul ignore next */
  cov_wqik6sc8o().f[1]++;
  const followerId =
  /* istanbul ignore next */
  (cov_wqik6sc8o().s[8]++, req.nextUrl.searchParams.get("followerId"));
  const followingId =
  /* istanbul ignore next */
  (cov_wqik6sc8o().s[9]++, req.nextUrl.searchParams.get("followingId"));
  /* istanbul ignore next */
  cov_wqik6sc8o().s[10]++;
  if (
  /* istanbul ignore next */
  (cov_wqik6sc8o().b[3][0]++, !followerId) ||
  /* istanbul ignore next */
  (cov_wqik6sc8o().b[3][1]++, !followingId)) {
    /* istanbul ignore next */
    cov_wqik6sc8o().b[2][0]++;
    cov_wqik6sc8o().s[11]++;
    return NextResponse.json({
      error: "followerId and followingId required"
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_wqik6sc8o().b[2][1]++;
  }
  cov_wqik6sc8o().s[12]++;
  try {
    const follow =
    /* istanbul ignore next */
    (cov_wqik6sc8o().s[13]++, await prisma.follow.findUnique({
      where: {
        followerId_followingId: {
          followerId,
          followingId
        }
      }
    }));
    /* istanbul ignore next */
    cov_wqik6sc8o().s[14]++;
    return NextResponse.json({
      following: !!follow
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_wqik6sc8o().s[15]++;
    console.error("Error checking follow", err);
    /* istanbul ignore next */
    cov_wqik6sc8o().s[16]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
export async function DELETE(req) {
  /* istanbul ignore next */
  cov_wqik6sc8o().f[2]++;
  const {
    followerId,
    followingId
  } =
  /* istanbul ignore next */
  (cov_wqik6sc8o().s[17]++, await req.json());
  /* istanbul ignore next */
  cov_wqik6sc8o().s[18]++;
  try {
    /* istanbul ignore next */
    cov_wqik6sc8o().s[19]++;
    await prisma.follow.delete({
      where: {
        followerId_followingId: {
          followerId,
          followingId
        }
      }
    });
    /* istanbul ignore next */
    cov_wqik6sc8o().s[20]++;
    return NextResponse.json({});
  } catch (err) {
    /* istanbul ignore next */
    cov_wqik6sc8o().s[21]++;
    console.error("Error unfollow", err);
    /* istanbul ignore next */
    cov_wqik6sc8o().s[22]++;
    return NextResponse.json({
      error: "Failed"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfd3FpazZzYzhvIiwiYWN0dWFsQ292ZXJhZ2UiLCJOZXh0UmVzcG9uc2UiLCJwcmlzbWEiLCJQT1NUIiwicmVxIiwiZiIsImZvbGxvd2VySWQiLCJmb2xsb3dpbmdJZCIsInMiLCJqc29uIiwiYiIsImVycm9yIiwic3RhdHVzIiwiZm9sbG93IiwidXBzZXJ0Iiwid2hlcmUiLCJmb2xsb3dlcklkX2ZvbGxvd2luZ0lkIiwidXBkYXRlIiwiY3JlYXRlIiwiZXJyIiwiY29uc29sZSIsIkdFVCIsIm5leHRVcmwiLCJzZWFyY2hQYXJhbXMiLCJnZXQiLCJmaW5kVW5pcXVlIiwiZm9sbG93aW5nIiwiREVMRVRFIiwiZGVsZXRlIl0sInNvdXJjZXMiOlsicm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIkBsaWIvcHJpc21hXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgeyBmb2xsb3dlcklkLCBmb2xsb3dpbmdJZCB9ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgaWYgKCFmb2xsb3dlcklkIHx8ICFmb2xsb3dpbmdJZCkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcImZvbGxvd2VySWQgYW5kIGZvbGxvd2luZ0lkIHJlcXVpcmVkXCIgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgfVxuICB0cnkge1xuICAgIGNvbnN0IGZvbGxvdyA9IGF3YWl0IHByaXNtYS5mb2xsb3cudXBzZXJ0KHtcbiAgICAgIHdoZXJlOiB7IGZvbGxvd2VySWRfZm9sbG93aW5nSWQ6IHsgZm9sbG93ZXJJZCwgZm9sbG93aW5nSWQgfSB9LFxuICAgICAgdXBkYXRlOiB7fSxcbiAgICAgIGNyZWF0ZTogeyBmb2xsb3dlcklkLCBmb2xsb3dpbmdJZCB9LFxuICAgIH0pO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihmb2xsb3csIHsgc3RhdHVzOiAyMDEgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmb2xsb3dpbmdcIiwgZXJyKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWRcIiB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxOiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCBmb2xsb3dlcklkID0gcmVxLm5leHRVcmwuc2VhcmNoUGFyYW1zLmdldChcImZvbGxvd2VySWRcIik7XG4gIGNvbnN0IGZvbGxvd2luZ0lkID0gcmVxLm5leHRVcmwuc2VhcmNoUGFyYW1zLmdldChcImZvbGxvd2luZ0lkXCIpO1xuICBpZiAoIWZvbGxvd2VySWQgfHwgIWZvbGxvd2luZ0lkKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogXCJmb2xsb3dlcklkIGFuZCBmb2xsb3dpbmdJZCByZXF1aXJlZFwiIH0sXG4gICAgICB7IHN0YXR1czogNDAwIH1cbiAgICApO1xuICB9XG4gIHRyeSB7XG4gICAgY29uc3QgZm9sbG93ID0gYXdhaXQgcHJpc21hLmZvbGxvdy5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7IGZvbGxvd2VySWRfZm9sbG93aW5nSWQ6IHsgZm9sbG93ZXJJZCwgZm9sbG93aW5nSWQgfSB9LFxuICAgIH0pO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGZvbGxvd2luZzogISFmb2xsb3cgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjaGVja2luZyBmb2xsb3dcIiwgZXJyKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWRcIiB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBERUxFVEUocmVxOiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCB7IGZvbGxvd2VySWQsIGZvbGxvd2luZ0lkIH0gPSBhd2FpdCByZXEuanNvbigpO1xuICB0cnkge1xuICAgIGF3YWl0IHByaXNtYS5mb2xsb3cuZGVsZXRlKHtcbiAgICAgIHdoZXJlOiB7IGZvbGxvd2VySWRfZm9sbG93aW5nSWQ6IHsgZm9sbG93ZXJJZCwgZm9sbG93aW5nSWQgfSB9LFxuICAgIH0pO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7fSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1bmZvbGxvd1wiLCBlcnIpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZFwiIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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