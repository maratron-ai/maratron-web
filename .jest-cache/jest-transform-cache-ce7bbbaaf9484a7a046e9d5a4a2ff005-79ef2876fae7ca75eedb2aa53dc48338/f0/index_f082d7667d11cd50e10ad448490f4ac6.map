{"version":3,"names":["_axios","_interopRequireDefault","require","cov_ohz7489yc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","createShoe","data","response","axios","post","exports","updateShoe","shoeId","put","getShoe","get","deleteShoe","delete","listShoes"],"sources":["index.ts"],"sourcesContent":["import axios from \"axios\";\nimport { Shoe } from \"@maratypes/shoe\";\n\n// Create a new shoe\nexport const createShoe = async (data: Partial<Shoe>) => {\n  const response = await axios.post(`/api/shoes`, data);\n  return response.data;\n};\n\n// Update an existing shoe\nexport const updateShoe = async (shoeId: string, data: Partial<Shoe>) => {\n  const response = await axios.put(`/api/shoes/${shoeId}`, data);\n  return response.data;\n};\n\n// Get a specific shoe by ID\nexport const getShoe = async (shoeId: string) => {\n  const response = await axios.get(`/api/shoes/${shoeId}`);\n  return response.data;\n};\n\n// Delete a shoe by ID\nexport const deleteShoe = async (shoeId: string) => {\n  const response = await axios.delete(`/api/shoes/${shoeId}`);\n  return response.data;\n};\n\n// List all shoes (optionally extend this with filters as needed)\nexport const listShoes = async () => {\n  const response = await axios.get(`/api/shoes`);\n  return response.data;\n};\n"],"mappings":"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","ignoreList":[]}