{"version":3,"names":["_time","require","describe","it","value","getLocalDateTime","expect","toHaveLength","toMatch","asDate","Date","toISOString","slice","toBe"],"sources":["getLocalDateTime.test.ts"],"sourcesContent":["// src/lib/utils/__tests__/getLocalDateTime.test.ts\n\nimport { getLocalDateTime } from \"../time\";\n\ndescribe(\"getLocalDateTime\", () => {\n  it(\"returns ISO datetime without timezone offset\", () => {\n    const value = getLocalDateTime();\n    expect(value).toHaveLength(16);\n    expect(value).toMatch(/T/);\n\n    // Force parsing as UTC by appending \"Z\"\n    const asDate = new Date(value + \"Z\");\n    expect(asDate.toISOString().slice(0, 16)).toBe(value);\n  });\n});\n"],"mappings":";;AAEA,IAAAA,KAAA,GAAAC,OAAA;AAFA;;AAIAC,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EACjCC,EAAE,CAAC,8CAA8C,EAAE,MAAM;IACvD,MAAMC,KAAK,GAAG,IAAAC,sBAAgB,EAAC,CAAC;IAChCC,MAAM,CAACF,KAAK,CAAC,CAACG,YAAY,CAAC,EAAE,CAAC;IAC9BD,MAAM,CAACF,KAAK,CAAC,CAACI,OAAO,CAAC,GAAG,CAAC;;IAE1B;IACA,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACN,KAAK,GAAG,GAAG,CAAC;IACpCE,MAAM,CAACG,MAAM,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACC,IAAI,CAACT,KAAK,CAAC;EACvD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}