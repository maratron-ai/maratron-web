{"version":3,"names":["_jackDaniels","require","_paces","_time","cov_2ffr4a85fh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","MIN_WEEKS","TAPER_WEEKS","EASY_PERCENT","TEMPO_PERCENT","WUCD_PERCENT","CUTBACK_FREQUENCY","CUTBACK_RUN_FACTOR","Units","exports","TrainingLevel","RAW_INTERVAL_WORKOUTS","description","reps","distanceMeters","notes","validateWorkout","w","Error","JSON","stringify","INTERVAL_WORKOUTS","map","TrainingPhase","computeLinearProgression","weeks","startMileage","maxMileage","taperWeeks","progressWeeks","baseWeeks","Math","max","round","buildWeeks","peakWeeks","states","i","ratio","baseMileage","mileage","cutback","phase","Base","Build","Peak","week","j","Taper","generateLongDistancePlan","targetDistance","distanceUnit","trainingLevel","vdot","_startingWeeklyMileage","targetPace","targetTotalTime","runTypeDays","roundToHalf","n","goalPaceSec","parseDuration","toMeters","raceMeters","zones","easy","calculatePaceForVDOT","marathon","tempo","interval","formatPace","easySec","tempoSecNum","marathonSec","isHalfMarathon","levelBounds","Beginner","startMult","endMult","Intermediate","Advanced","longBounds","startPct","peakPct","initialLong","peakLong","weekOneLong","progression","schedule","longDist","taperIndex","workout","intervalMileage","baseIntervalPaceSec","repDistanceUnits","repPaceSec","repPace","intervalNotes","toLowerCase","includes","easyMileage","tempoMileage","adjustedLong","tempoNotes","runs","unit","pace","weeklyMileage","reduce","tot","finalLabel","weekNumber","finalSchedule","day"],"sources":["longDistancePlan.ts"],"sourcesContent":["import { calculatePaceForVDOT } from \"../jackDaniels\";\nimport { WeekPlan, RunningPlanData, PlannedRun } from \"@maratypes/runningPlan\";\nimport { DayOfWeek } from \"@maratypes/basics\";\nimport { formatPace } from \"@utils/running/paces\";\nimport { parseDuration } from \"@utils/time\";\n\n// const formatPace = (sec: number): string => {\n//   const m = Math.floor(sec / 60);\n//   const s = Math.round(sec % 60);\n//   return `${m}:${s.toString().padStart(2, \"0\")}`;\n// };\n\nconst MIN_WEEKS = 8;\nconst TAPER_WEEKS: number = 2;\nconst EASY_PERCENT = 0.15;\nconst TEMPO_PERCENT = 0.2;\nconst WUCD_PERCENT = 0.1; // warm-up/cool-down as fraction of run\nconst CUTBACK_FREQUENCY = 4;\n// Cut back long, tempo and easy runs by roughly 25%\nconst CUTBACK_RUN_FACTOR = 0.75;\n\nexport const Units = [\"miles\", \"kilometers\"] as const;\nexport type Unit = (typeof Units)[number];\n\nexport enum TrainingLevel {\n  Beginner = \"beginner\",\n  Intermediate = \"intermediate\",\n  Advanced = \"advanced\",\n}\n\nconst RAW_INTERVAL_WORKOUTS = [\n  {\n    description: \"10×400 m sprints\",\n    reps: 10,\n    distanceMeters: 400,\n    notes: \"Sprint at I-pace with 60–90 s jog recovery.\",\n  },\n  {\n    description: \"6×800 m repeats\",\n    reps: 6,\n    distanceMeters: 800,\n    notes: \"Run at I-pace with equal jog recovery.\",\n  },\n  {\n    description: \"8×200 m hills\",\n    reps: 8,\n    distanceMeters: 200,\n    notes: \"Uphill at I-pace, jog downhill.\",\n  },\n  {\n    description: \"5×1 km repeats\",\n    reps: 5,\n    distanceMeters: 1000,\n    notes: \"Run at I-pace with 2–3 min recovery.\",\n  },\n] as const;\n\nexport interface IntervalWorkout {\n  description: string;\n  reps: number;\n  distanceMeters: number;\n  notes: string;\n}\n\n// -- Validation to enforce data validity at edges\nfunction validateWorkout(w: Partial<IntervalWorkout>): IntervalWorkout {\n  if (!w.description || w.reps! <= 0 || w.distanceMeters! <= 0 || !w.notes) {\n    throw new Error(`Invalid workout entry: ${JSON.stringify(w)}`);\n  }\n  return w as IntervalWorkout;\n}\nexport const INTERVAL_WORKOUTS: readonly IntervalWorkout[] =\n  RAW_INTERVAL_WORKOUTS.map((w) => validateWorkout(w));\n\ninterface PaceZones {\n  easy: string;\n  marathon: string;\n  tempo: string;\n  interval: string;\n}\n\n// -- Immutable progression state\nexport enum TrainingPhase {\n  Base = \"Base\",\n  Build = \"Build\",\n  Peak = \"Peak\",\n  Taper = \"Taper\",\n}\n\ninterface ProgressionState {\n  week: number;\n  mileage: number;\n  phase: TrainingPhase;\n  cutback?: boolean;\n}\n\nfunction computeLinearProgression(\n  weeks: number,\n  startMileage: number,\n  maxMileage: number,\n  taperWeeks: number\n): ProgressionState[] {\n  const progressWeeks = weeks - taperWeeks;\n\n  const baseWeeks = Math.max(1, Math.round(progressWeeks * 0.4));\n  const buildWeeks = Math.max(1, Math.round(progressWeeks * 0.4));\n  let peakWeeks = progressWeeks - baseWeeks - buildWeeks;\n  if (peakWeeks < 1) {\n    peakWeeks = 1;\n  }\n\n  const states: ProgressionState[] = [];\n  for (let i = 0; i < progressWeeks; i++) {\n    const ratio = progressWeeks === 1 ? 1 : i / (progressWeeks - 1);\n    const baseMileage = startMileage + (maxMileage - startMileage) * ratio;\n    const mileage = baseMileage;\n    const cutback = (i + 1) % CUTBACK_FREQUENCY === 0;\n    // Leave mileage unchanged so progression continues smoothly; runs will be\n    // scaled down later when cutback is true\n    let phase: TrainingPhase;\n    if (i < baseWeeks) phase = TrainingPhase.Base;\n    else if (i < baseWeeks + buildWeeks) phase = TrainingPhase.Build;\n    else phase = TrainingPhase.Peak;\n    states.push({ week: i + 1, mileage, phase, cutback });\n  }\n\n  for (let j = 0; j < taperWeeks; j++) {\n    const ratio = taperWeeks === 1 ? 1 : j / (taperWeeks - 1);\n    const mileage = maxMileage - (maxMileage - startMileage) * ratio;\n    states.push({\n      week: progressWeeks + j + 1,\n      mileage,\n      phase: TrainingPhase.Taper,\n    });\n  }\n  return states;\n}\n\nexport function generateLongDistancePlan(\n  weeks: number,\n  targetDistance: number,\n  distanceUnit: Unit,\n  trainingLevel: TrainingLevel,\n  vdot: number,\n  _startingWeeklyMileage: number,\n  targetPace?: string,\n  targetTotalTime?: string,\n  runTypeDays?: Partial<Record<PlannedRun[\"type\"], DayOfWeek>>\n): RunningPlanData {\n  if (weeks < MIN_WEEKS) throw new Error(`Plan must be ≥ ${MIN_WEEKS} weeks.`);\n  if (targetDistance <= 0) throw new Error(\"Distance must be > 0\");\n  if (targetDistance < 13) {\n    throw new Error(\n      \"generateLongDistancePlan is intended for half and full marathons\"\n    );\n  }\n\n  // -- helpers\n  const roundToHalf = (n: number): number => Math.round(n * 2) / 2;\n\n  // -- compute goal pace override\n  let goalPaceSec: number | undefined;\n  if (targetTotalTime) {\n    goalPaceSec = parseDuration(targetTotalTime) / targetDistance;\n  } else if (targetPace) {\n    goalPaceSec = parseDuration(targetPace);\n  }\n\n  // -- distance conversions\n  const toMeters = distanceUnit === \"miles\" ? 1609.34 : 1000;\n  const raceMeters = targetDistance * toMeters;\n\n  // -- pace zones\n  const zones: PaceZones = {\n    easy: calculatePaceForVDOT(raceMeters, vdot, \"E\"),\n    marathon: calculatePaceForVDOT(raceMeters, vdot, \"M\"),\n    tempo: calculatePaceForVDOT(raceMeters, vdot, \"T\"),\n    interval: calculatePaceForVDOT(raceMeters, vdot, \"I\"),\n  };\n  if (goalPaceSec !== undefined) zones.marathon = formatPace(goalPaceSec);\n\n  // -- edge-case validation for tempo pace\n  const easySec = parseDuration(zones.easy);\n  let tempoSecNum = parseDuration(zones.tempo);\n  const marathonSec = parseDuration(zones.marathon);\n  if (tempoSecNum >= easySec) {\n    tempoSecNum = easySec * 0.95; // Adjust tempo pace to be generically faster than easy pace\n    // throw new Error(\n    //   `Tempo pace (${zones.tempo}) should be faster than easy pace (${zones.easy}).`\n    // );\n  }\n  if (tempoSecNum >= marathonSec) {\n    tempoSecNum = marathonSec * 0.95;\n    // throw new Error(\n    //   `Tempo pace (${zones.tempo}) should be faster than marathon pace (${zones.marathon}).`\n    // );\n  }\n\n  // -- weekly mileage bounds\n  const isHalfMarathon =\n    (distanceUnit === \"miles\" && targetDistance <= 13.2) ||\n    (distanceUnit === \"kilometers\" && targetDistance <= 21.2);\n\n  const levelBounds = isHalfMarathon\n    ? {\n        [TrainingLevel.Beginner]: { startMult: 1.0, endMult: 1.7 },\n        [TrainingLevel.Intermediate]: { startMult: 1.1, endMult: 1.9 },\n        [TrainingLevel.Advanced]: { startMult: 1.2, endMult: 2.1 },\n      }\n    : {\n        [TrainingLevel.Beginner]: { startMult: 1.0, endMult: 1.4 },\n        [TrainingLevel.Intermediate]: { startMult: 1.1, endMult: 1.5 },\n        [TrainingLevel.Advanced]: { startMult: 1.2, endMult: 1.6 },\n      } as const;\n\n  const { startMult, endMult } = levelBounds[trainingLevel];\n\n  const startMileage = targetDistance * startMult;\n  const maxMileage = targetDistance * endMult;\n\n  const longBounds = {\n    [TrainingLevel.Beginner]: { startPct: 0.4, peakPct: 0.65 },\n    [TrainingLevel.Intermediate]: { startPct: 0.5, peakPct: 0.75 },\n    [TrainingLevel.Advanced]: { startPct: 0.6, peakPct: 0.85 },\n  } as const;\n\n  const { startPct, peakPct } = longBounds[trainingLevel];\n  const initialLong = targetDistance * startPct;\n  const peakLong = targetDistance * peakPct;\n  const weekOneLong = initialLong;\n\n  const progression = computeLinearProgression(\n    weeks,\n    startMileage,\n    maxMileage,\n    TAPER_WEEKS\n  );\n\n  const progressWeeks = weeks - TAPER_WEEKS;\n\n  const schedule: WeekPlan[] = progression.map(({ week, mileage, phase, cutback }) => {\n\n    // Long-run progression logic\n    let longDist: number;\n    if (week > progressWeeks) {\n      const taperIndex = week - progressWeeks - 1;\n      const ratio = TAPER_WEEKS === 1 ? 1 : taperIndex / (TAPER_WEEKS - 1);\n      longDist = peakLong - (peakLong - targetDistance) * ratio;\n      if (longDist > weekOneLong) longDist = weekOneLong;\n    } else {\n      const ratio =\n        progressWeeks === 1 ? 1 : (week - 1) / (progressWeeks - 1);\n      longDist = initialLong + (peakLong - initialLong) * ratio;\n    }\n    longDist = roundToHalf(longDist);\n\n    // Interval workout with rep-specific pace\n    const workout = INTERVAL_WORKOUTS[(week - 1) % INTERVAL_WORKOUTS.length];\n    const intervalMileage = roundToHalf(\n      (workout.reps * workout.distanceMeters) / toMeters\n    );\n    const baseIntervalPaceSec = parseDuration(zones.interval);\n    const repDistanceUnits = workout.distanceMeters / toMeters;\n    const repPaceSec = baseIntervalPaceSec * repDistanceUnits;\n    const repPace = formatPace(repPaceSec);\n    let intervalNotes = `${workout.description} – ${workout.notes}`;\n    intervalNotes += ` Each ${workout.distanceMeters}m in ~${repPace}`;\n    if (workout.description.toLowerCase().includes(\"sprint\")) {\n      intervalNotes += `; total sprint distance: ${intervalMileage} ${distanceUnit}.`;\n    }\n\n    // Easy & tempo runs\n    let easyMileage = roundToHalf(mileage * EASY_PERCENT);\n    let tempoMileage = roundToHalf(mileage * TEMPO_PERCENT);\n    let adjustedLong = longDist;\n    if (cutback) {\n      easyMileage = roundToHalf(easyMileage * CUTBACK_RUN_FACTOR);\n      tempoMileage = roundToHalf(tempoMileage * CUTBACK_RUN_FACTOR);\n      adjustedLong = roundToHalf(longDist * CUTBACK_RUN_FACTOR);\n    }\n    const tempoNotes = `Tempo at T-pace (${\n      zones.tempo\n    }) for ${tempoMileage} ${distanceUnit}, plus ${WUCD_PERCENT * 100}% WU/CD`;\n\n    let runs: PlannedRun[];\n    if (week === weeks) {\n      runs = [\n        {\n          type: \"marathon\",\n          unit: distanceUnit,\n          mileage: roundToHalf(targetDistance),\n          targetPace: { unit: distanceUnit, pace: zones.marathon },\n        },\n      ];\n    } else {\n      runs = [\n        {\n          type: \"easy\",\n          unit: distanceUnit,\n          mileage: easyMileage,\n          targetPace: { unit: distanceUnit, pace: zones.easy },\n        },\n        {\n          type: \"interval\",\n          unit: distanceUnit,\n          mileage: intervalMileage,\n          targetPace: { unit: distanceUnit, pace: zones.interval },\n          notes: intervalNotes,\n        },\n        {\n          type: \"tempo\",\n          unit: distanceUnit,\n          mileage: tempoMileage,\n          targetPace: { unit: distanceUnit, pace: formatPace(tempoSecNum) },\n          notes: tempoNotes,\n        },\n        {\n          type: \"long\",\n          unit: distanceUnit,\n          mileage: adjustedLong,\n          targetPace: { unit: distanceUnit, pace: zones.marathon },\n        },\n      ];\n    }\n\n    const weeklyMileage = roundToHalf(runs.reduce((tot, r) => tot + r.mileage, 0));\n\n    const finalLabel = isHalfMarathon ? \"Half Marathon Week!\" : \"Marathon Week!\";\n    const notes =\n      week === weeks\n        ? finalLabel\n        : `${phase} phase${cutback ? \" - Cutback\" : \"\"}`;\n\n    return {\n      weekNumber: week,\n      weeklyMileage,\n      unit: distanceUnit,\n      runs,\n      phase,\n      notes,\n    };\n  });\n\n  const finalSchedule = runTypeDays\n    ? schedule.map((week) => ({\n        ...week,\n        runs: week.runs.map((r) =>\n          runTypeDays[r.type] ? { ...r, day: runTypeDays[r.type]! } : r\n        ),\n      }))\n    : schedule;\n\n  return { weeks, schedule: finalSchedule, notes: \"Generated by Maratron\" };\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAAA,YAAA,GAAAC,OAAA;AAGA;AAAA;AAAAC,MAAA,GAAAD,OAAA;AACA;AAAA;AAAAE,KAAA,GAAAF,OAAA;AAA4C;AAAA,SAAAG,eeAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAWhC;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,cAAA;AAAA,SAAA0B,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,QAAAe,gBAAA,CAAAC,OAAA,EAAAjB,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAe,yBAAA,GAAAf,MAAA,CAAAgB,gBAAA,CAAAnB,CAAA,EAAAG,MAAA,CAAAe,yBAAA,CAAAhB,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAiB,cAAA,CAAApB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AATZ;AACA;AACA;AACA;AACA;;AAEA,MAAMqB,SAAS;AAAA;AAAA,CAAAhD,cAAA,GAAAoB,CAAA,OAAG,CAAC;AACnB,MAAM6B,WAAmB;AAAA;AAAA,CAAAjD,cAAA,GAAAoB,CAAA,OAAG,CAAC;AAC7B,MAAM8B,YAAY;AAAA;AAAA,CAAAlD,cAAA,GAAAoB,CAAA,OAAG,IAAI;AACzB,MAAM+B,aAAa;AAAA;AAAA,CAAAnD,cAAA,GAAAoB,CAAA,OAAG,GAAG;AACzB,MAAMgC,YAAY;AAAA;AAAA,CAAApD,cAAA,GAAAoB,CAAA,OAAG,GAAG,EAAC,CAAC;AAC1B,MAAMiC,iBAAiB;AAAA;AAAA,CAAArD,cAAA,GAAAoB,CAAA,OAAG,CAAC;AAC3B;AACA,MAAMkC,kBAAkB;AAAA;AAAA,CAAAtD,cAAA,GAAAoB,CAAA,OAAG,IAAI;AAExB,MAAMmC,KAAK;AAAA;AAAAC,OAAA,CAAAD,KAAA,IAAAvD,cAAA,GAAAoB,CAAA,OAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAS;AAAC;AAAA,IAG1CqC,aAAa,GAAAD,OAAA,CAAAC,aAAA,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAMzB,MAAMC,qBAAqB;AAAA;AAAA,CAAA1D,cAAA,GAAAoB,CAAA,OAAG,CAC5B;EACEuC,WAAW,EAAE,kBAAkB;EAC/BC,IAAI,EAAE,EAAE;EACRC,cAAc,EAAE,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,WAAW,EAAE,iBAAiB;EAC9BC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAE,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,WAAW,EAAE,eAAe;EAC5BC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAE,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC,EACD;EACEH,WAAW,EAAE,gBAAgB;EAC7BC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAE;AACT,CAAC,CACF,CAAS;AASV;AACA,SAASC,eAAeA,CAACC,CAA2B,EAAmB;EAAA;EAAAhE,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACrE;EAAI;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAC0C,CAAC,CAACL,WAAW;EAAA;EAAA,CAAA3D,cAAA,GAAAsB,CAAA,UAAI0C,CAAC,CAACJ,IAAI,IAAK,CAAC;EAAA;EAAA,CAAA5D,cAAA,GAAAsB,CAAA,UAAI0C,CAAC,CAACH,cAAc,IAAK,CAAC;EAAA;EAAA,CAAA7D,cAAA,GAAAsB,CAAA,UAAI,CAAC0C,CAAC,CAACF,KAAK,GAAE;IAAA;IAAA9D,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACxE,MAAM,IAAI6C,KAAK,CAAC,0BAA0BC,IAAI,CAACC,SAAS,CAACH,CAAC,CAAC,EAAE,CAAC;EAChE,CAAC;EAAA;EAAA;IAAAhE,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EACD,OAAO4C,CAAC;AACV;AACO,MAAMI,iBAA6C;AAAA;AAAAZ,OAAA,CAAAY,iBAAA,IAAApE,cAAA,GAAAoB,CAAA,QACxDsC,qBAAqB,CAACW,GAAG,CAAEL,CAAC,IAAK;EAAA;EAAAhE,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAAA,OAAA2C,eAAe,CAACC,CAAC,CAAC;AAAD,CAAC,CAAC;AAAC;AASvD;AAAA,IACYM,aAAa,GAAAd,OAAA,CAAAc,aAAA,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAczB,SAASC,wBAAwBA,CAC/BC,KAAa,EACbC,YAAoB,EACpBC,UAAkB,EAClBC,UAAkB,EACE;EAAA;EAAA3E,cAAA,GAAAqB,CAAA;EACpB,MAAMuD,aAAa;EAAA;EAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGoD,KAAK,GAAGG,UAAU;EAExC,MAAME,SAAS;EAAA;EAAA,CAAA7E,cAAA,GAAAoB,CAAA,QAAG0D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACJ,aAAa,GAAG,GAAG,CAAC,CAAC;EAC9D,MAAMK,UAAU;EAAA;EAAA,CAAAjF,cAAA,GAAAoB,CAAA,QAAG0D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACJ,aAAa,GAAG,GAAG,CAAC,CAAC;EAC/D,IAAIM,SAAS;EAAA;EAAA,CAAAlF,cAAA,GAAAoB,CAAA,QAAGwD,aAAa,GAAGC,SAAS,GAAGI,UAAU;EAAC;EAAAjF,cAAA,GAAAoB,CAAA;EACvD,IAAI8D,SAAS,GAAG,CAAC,EAAE;IAAA;IAAAlF,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACjB8D,SAAS,GAAG,CAAC;EACf,CAAC;EAAA;EAAA;IAAAlF,cAAA,GAAAsB,CAAA;EAAA;EAED,MAAM6D,MAA0B;EAAA;EAAA,CAAAnF,cAAA,GAAAoB,CAAA,QAAG,EAAE;EAAC;EAAApB,cAAA,GAAAoB,CAAA;EACtC,KAAK,IAAIgE,CAAC;EAAA;EAAA,CAAApF,cAAA,GAAAoB,CAAA,QAAG,CAAC,GAAEgE,CAAC,GAAGR,aAAa,EAAEQ,CAAC,EAAE,EAAE;IACtC,MAAMC,KAAK;IAAA;IAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAGwD,aAAa,KAAK,CAAC;IAAA;IAAA,CAAA5E,cAAA,GAAAsB,CAAA,UAAG,CAAC;IAAA;IAAA,CAAAtB,cAAA,GAAAsB,CAAA,UAAG8D,CAAC,IAAIR,aAAa,GAAG,CAAC,CAAC;IAC/D,MAAMU,WAAW;IAAA;IAAA,CAAAtF,cAAA,GAAAoB,CAAA,QAAGqD,YAAY,GAAG,CAACC,UAAU,GAAGD,YAAY,IAAIY,KAAK;IACtE,MAAME,OAAO;IAAA;IAAA,CAAAvF,cAAA,GAAAoB,CAAA,QAAGkE,WAAW;IAC3B,MAAME,OAAO;IAAA;IAAA,CAAAxF,cAAA,GAAAoB,CAAA,QAAG,CAACgE,CAAC,GAAG,CAAC,IAAI/B,iBAAiB,KAAK,CAAC;IACjD;IACA;IACA,IAAIoC,KAAoB;IAAC;IAAAzF,cAAA,GAAAoB,CAAA;IACzB,IAAIgE,CAAC,GAAGP,SAAS,EAAE;MAAA;MAAA7E,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAAqE,KAAK,GAAGnB,aAAa,CAACoB,IAAI;IAAA,CAAC,MACzC;MAAA;MAAA1F,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,IAAIgE,CAAC,GAAGP,SAAS,GAAGI,UAAU,EAAE;QAAA;QAAAjF,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAAAqE,KAAK,GAAGnB,aAAa,CAACqB,KAAK;MAAA,CAAC,MAC5D;QAAA;QAAA3F,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAAAqE,KAAK,GAAGnB,aAAa,CAACsB,IAAI;MAAA;IAAA;IAAC;IAAA5F,cAAA,GAAAoB,CAAA;IAChC+D,MAAM,CAAC9C,IAAI,CAAC;MAAEwD,IAAI,EAAET,CAAC,GAAG,CAAC;MAAEG,OAAO;MAAEE,KAAK;MAAED;IAAQ,CAAC,CAAC;EACvD;EAAC;EAAAxF,cAAA,GAAAoB,CAAA;EAED,KAAK,IAAI0E,CAAC;EAAA;EAAA,CAAA9F,cAAA,GAAAoB,CAAA,QAAG,CAAC,GAAE0E,CAAC,GAAGnB,UAAU,EAAEmB,CAAC,EAAE,EAAE;IACnC,MAAMT,KAAK;IAAA;IAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAGuD,UAAU,KAAK,CAAC;IAAA;IAAA,CAAA3E,cAAA,GAAAsB,CAAA,UAAG,CAAC;IAAA;IAAA,CAAAtB,cAAA,GAAAsB,CAAA,UAAGwE,CAAC,IAAInB,UAAU,GAAG,CAAC,CAAC;IACzD,MAAMY,OAAO;IAAA;IAAA,CAAAvF,cAAA,GAAAoB,CAAA,QAAGsD,UAAU,GAAG,CAACA,UAAU,GAAGD,YAAY,IAAIY,KAAK;IAAC;IAAArF,cAAA,GAAAoB,CAAA;IACjE+D,MAAM,CAAC9C,IAAI,CAAC;MACVwD,IAAI,EAAEjB,aAAa,GAAGkB,CAAC,GAAG,CAAC;MAC3BP,OAAO;MACPE,KAAK,EAAEnB,aAAa,CAACyB;IACvB,CAAC,CAAC;EACJ;EAAC;EAAA/F,cAAA,GAAAoB,CAAA;EACD,OAAO+D,MAAM;AACf;AAEO,SAASa,wBAAwBA,CACtCxB,KAAa,EACbyB,cAAsB,EACtBC,YAAkB,EAClBC,aAA4B,EAC5BC,IAAY,EACZC,sBAA8B,EAC9BC,UAAmB,EACnBC,eAAwB,EACxBC,WAA4D,EAC3C;EAAA;EAAAxG,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EACjB,IAAIoD,KAAK,GAAGxB,SAAS,EAAE;IAAA;IAAAhD,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAAA,MAAM,IAAI6C,KAAK,CAAC,kBAAkBjB,SAAS,SAAS,CAAC;EAAA,CAAC;EAAA;EAAA;IAAAhD,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EAC7E,IAAI6E,cAAc,IAAI,CAAC,EAAE;IAAA;IAAAjG,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAAA,MAAM,IAAI6C,KAAK,CAAC,sBAAsB,CAAC;EAAA,CAAC;EAAA;EAAA;IAAAjE,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EACjE,IAAI6E,cAAc,GAAG,EAAE,EAAE;IAAA;IAAAjG,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACvB,MAAM,IAAI6C,KAAK,CACb,kEACF,CAAC;EACH,CAAC;EAAA;EAAA;IAAAjE,cAAA,GAAAsB,CAAA;EAAA;;EAED;EAAAtB,cAAA,GAAAoB,CAAA;EACA,MAAMqF,WAAW,GAAIC,CAAS,IAAa;IAAA;IAAA1G,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA,OAAA0D,IAAI,CAACE,KAAK,CAAC0B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAAD,CAAC;;EAEhE;EACA,IAAIC,WAA+B;EAAC;EAAA3G,cAAA,GAAAoB,CAAA;EACpC,IAAImF,eAAe,EAAE;IAAA;IAAAvG,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACnBuF,WAAW;IAAG;IAAA;IAAAC;IAAAA;IAAAA;IAAAA,aAAa,EAACL,eAAe,CAAC,GAAGN,cAAc;EAC/D,CAAC,MAAM;IAAA;IAAAjG,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAAA,IAAIkF,UAAU,EAAE;MAAA;MAAAtG,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACrBuF,WAAW;MAAG;MAAA;MAAAC;MAAAA;MAAAA;MAAAA,aAAa,EAACN,UAAU,CAAC;IACzC,CAAC;IAAA;IAAA;MAAAtG,cAAA,GAAAsB,CAAA;IAAA;EAAD;;EAEA;EACA,MAAMuF,QAAQ;EAAA;EAAA,CAAA7G,cAAA,GAAAoB,CAAA,QAAG8E,YAAY,KAAK,OAAO;EAAA;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAG,OAAO;EAAA;EAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAG,IAAI;EAC1D,MAAMwF,UAAU;EAAA;EAAA,CAAA9G,cAAA,GAAAoB,CAAA,QAAG6E,cAAc,GAAGY,QAAQ;;EAE5C;EACA,MAAME,KAAgB;EAAA;EAAA,CAAA/G,cAAA,GAAAoB,CAAA,QAAG;IACvB4F,IAAI;IAAE;IAAA;IAAAC;IAAAA;IAAAA;IAAAA,oBAAoB,EAACH,UAAU,EAAEV,IAAI,EAAE,GAAG,CAAC;IACjDc,QAAQ;IAAE;IAAA;IAAAD;IAAAA;IAAAA;IAAAA,oBAAoB,EAACH,UAAU,EAAEV,IAAI,EAAE,GAAG,CAAC;IACrDe,KAAK;IAAE;IAAA;IAAAF;IAAAA;IAAAA;IAAAA,oBAAoB,EAACH,UAAU,EAAEV,IAAI,EAAE,GAAG,CAAC;IAClDgB,QAAQ;IAAE;IAAA;IAAAH;IAAAA;IAAAA;IAAAA,oBAAoB,EAACH,UAAU,EAAEV,IAAI,EAAE,GAAG;EACtD,CAAC;EAAC;EAAApG,cAAA,GAAAoB,CAAA;EACF,IAAIuF,WAAW,KAAKxF,SAAS,EAAE;IAAA;IAAAnB,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAAA2F,KAAK,CAACG,QAAQ;IAAG;IAAA;IAAAG;IAAAA;IAAAA;IAAAA,UAAU,EAACV,WAAW,CAAC;EAAA,CAAC;EAAA;EAAA;IAAA3G,cAAA,GAAAsB,CAAA;EAAA;;EAExE;EACA,MAAMgG,OAAO;EAAA;EAAA,CAAAtH,cAAA,GAAAoB,CAAA;EAAG;EAAA;EAAAwF;EAAAA;EAAAA;EAAAA,aAAa,EAACG,KAAK,CAACC,IAAI,CAAC;EACzC,IAAIO,WAAW;EAAA;EAAA,CAAAvH,cAAA,GAAAoB,CAAA;EAAG;EAAA;EAAAwF;EAAAA;EAAAA;EAAAA,aAAa,EAACG,KAAK,CAACI,KAAK,CAAC;EAC5C,MAAMK,WAAW;EAAA;EAAA,CAAAxH,cAAA,GAAAoB,CAAA;EAAG;EAAA;EAAAwF;EAAAA;EAAAA;EAAAA,aAAa,EAACG,KAAK,CAACG,QAAQ,CAAC;EAAC;EAAAlH,cAAA,GAAAoB,CAAA;EAClD,IAAImG,WAAW,IAAID,OAAO,EAAE;IAAA;IAAAtH,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAC1BmG,WAAW,GAAGD,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9B;IACA;IACA;EACF,CAAC;EAAA;EAAA;IAAAtH,cAAA,GAAAsB,CAAA;EAAA;EAAAtB,cAAA,GAAAoB,CAAA;EACD,IAAImG,WAAW,IAAIC,WAAW,EAAE;IAAA;IAAAxH,cAAA,GAAAsB,CAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAC9BmG,WAAW,GAAGC,WAAW,GAAG,IAAI;IAChC;IACA;IACA;EACF,CAAC;EAAA;EAAA;IAAAxH,cAAA,GAAAsB,CAAA;EAAA;;EAED;EACA,MAAMmG,cAAc;EAAA;EAAA,CAAAzH,cAAA,GAAAoB,CAAA;EACjB;EAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA4E,YAAY,KAAK,OAAO;EAAA;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAI2E,cAAc,IAAI,IAAI;EAClD;EAAA,CAAAjG,cAAA,GAAAsB,CAAA,WAAA4E,YAAY,KAAK,YAAY;EAAA;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAI2E,cAAc,IAAI,IAAI,CAAC;EAE3D,MAAMyB,WAAW;EAAA;EAAA,CAAA1H,cAAA,GAAAoB,CAAA,QAAGqG,cAAc;EAAA;EAAA,CAAAzH,cAAA,GAAAsB,CAAA,WAC9B;IACE,CAACmC,aAAa,CAACkE,QAAQ,GAAG;MAAEC,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI,CAAC;IAC1D,CAACpE,aAAa,CAACqE,YAAY,GAAG;MAAEF,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI,CAAC;IAC9D,CAACpE,aAAa,CAACsE,QAAQ,GAAG;MAAEH,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI;EAC3D,CAAC;EAAA;EAAA,CAAA7H,cAAA,GAAAsB,CAAA,WACD;IACE,CAACmC,aAAa,CAACkE,QAAQ,GAAG;MAAEC,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI,CAAC;IAC1D,CAACpE,aAAa,CAACqE,YAAY,GAAG;MAAEF,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI,CAAC;IAC9D,CAACpE,aAAa,CAACsE,QAAQ,GAAG;MAAEH,SAAS,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAI;EAC3D,CAAC,CAAS;EAEd,MAAM;IAAED,SAAS;IAAEC;EAAQ,CAAC;EAAA;EAAA,CAAA7H,cAAA,GAAAoB,CAAA,QAAGsG,WAAW,CAACvB,aAAa,CAAC;EAEzD,MAAM1B,YAAY;EAAA;EAAA,CAAAzE,cAAA,GAAAoB,CAAA,QAAG6E,cAAc,GAAG2B,SAAS;EAC/C,MAAMlD,UAAU;EAAA;EAAA,CAAA1E,cAAA,GAAAoB,CAAA,QAAG6E,cAAc,GAAG4B,OAAO;EAE3C,MAAMG,UAAU;EAAA;EAAA,CAAAhI,cAAA,GAAAoB,CAAA,QAAG;IACjB,CAACqC,aAAa,CAACkE,QAAQ,GAAG;MAAEM,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC1D,CAACzE,aAAa,CAACqE,YAAY,GAAG;MAAEG,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC9D,CAACzE,aAAa,CAACsE,QAAQ,GAAG;MAAEE,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAK;EAC3D,CAAC,CAAS;EAEV,MAAM;IAAED,QAAQ;IAAEC;EAAQ,CAAC;EAAA;EAAA,CAAAlI,cAAA,GAAAoB,CAAA,QAAG4G,UAAU,CAAC7B,aAAa,CAAC;EACvD,MAAMgC,WAAW;EAAA;EAAA,CAAAnI,cAAA,GAAAoB,CAAA,QAAG6E,cAAc,GAAGgC,QAAQ;EAC7C,MAAMG,QAAQ;EAAA;EAAA,CAAApI,cAAA,GAAAoB,CAAA,QAAG6E,cAAc,GAAGiC,OAAO;EACzC,MAAMG,WAAW;EAAA;EAAA,CAAArI,cAAA,GAAAoB,CAAA,QAAG+G,WAAW;EAE/B,MAAMG,WAAW;EAAA;EAAA,CAAAtI,cAAA,GAAAoB,CAAA,QAAGmD,wBAAwB,CAC1CC,KAAK,EACLC,YAAY,EACZC,UAAU,EACVzB,WACF,CAAC;EAED,MAAM2B,aAAa;EAAA;EAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGoD,KAAK,GAAGvB,WAAW;EAEzC,MAAMsF,QAAoB;EAAA;EAAA,CAAAvI,cAAA,GAAAoB,CAAA,QAAGkH,WAAW,CAACjE,GAAG,CAAC,CAAC;IAAEwB,IAAI;IAAEN,OAAO;IAAEE,KAAK;IAAED;EAAQ,CAAC,KAAK;IAAA;IAAAxF,cAAA,GAAAqB,CAAA;IAElF;IACA,IAAImH,QAAgB;IAAC;IAAAxI,cAAA,GAAAoB,CAAA;IACrB,IAAIyE,IAAI,GAAGjB,aAAa,EAAE;MAAA;MAAA5E,cAAA,GAAAsB,CAAA;MACxB,MAAMmH,UAAU;MAAA;MAAA,CAAAzI,cAAA,GAAAoB,CAAA,QAAGyE,IAAI,GAAGjB,aAAa,GAAG,CAAC;MAC3C,MAAMS,KAAK;MAAA;MAAA,CAAArF,cAAA,GAAAoB,CAAA,QAAG6B,WAAW,KAAK,CAAC;MAAA;MAAA,CAAAjD,cAAA,GAAAsB,CAAA,WAAG,CAAC;MAAA;MAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAGmH,UAAU,IAAIxF,WAAW,GAAG,CAAC,CAAC;MAAC;MAAAjD,cAAA,GAAAoB,CAAA;MACrEoH,QAAQ,GAAGJ,QAAQ,GAAG,CAACA,QAAQ,GAAGnC,cAAc,IAAIZ,KAAK;MAAC;MAAArF,cAAA,GAAAoB,CAAA;MAC1D,IAAIoH,QAAQ,GAAGH,WAAW,EAAE;QAAA;QAAArI,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAAAoH,QAAQ,GAAGH,WAAW;MAAA,CAAC;MAAA;MAAA;QAAArI,cAAA,GAAAsB,CAAA;MAAA;IACrD,CAAC,MAAM;MAAA;MAAAtB,cAAA,GAAAsB,CAAA;MACL,MAAM+D,KAAK;MAAA;MAAA,CAAArF,cAAA,GAAAoB,CAAA,QACTwD,aAAa,KAAK,CAAC;MAAA;MAAA,CAAA5E,cAAA,GAAAsB,CAAA,WAAG,CAAC;MAAA;MAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAG,CAACuE,IAAI,GAAG,CAAC,KAAKjB,aAAa,GAAG,CAAC,CAAC;MAAC;MAAA5E,cAAA,GAAAoB,CAAA;MAC7DoH,QAAQ,GAAGL,WAAW,GAAG,CAACC,QAAQ,GAAGD,WAAW,IAAI9C,KAAK;IAC3D;IAAC;IAAArF,cAAA,GAAAoB,CAAA;IACDoH,QAAQ,GAAG/B,WAAW,CAAC+B,QAAQ,CAAC;;IAEhC;IACA,MAAME,OAAO;IAAA;IAAA,CAAA1I,cAAA,GAAAoB,CAAA,QAAGgD,iBAAiB,CAAC,CAACyB,IAAI,GAAG,CAAC,IAAIzB,iBAAiB,CAAC3B,MAAM,CAAC;IACxE,MAAMkG,eAAe;IAAA;IAAA,CAAA3I,cAAA,GAAAoB,CAAA,QAAGqF,WAAW,CAChCiC,OAAO,CAAC9E,IAAI,GAAG8E,OAAO,CAAC7E,cAAc,GAAIgD,QAC5C,CAAC;IACD,MAAM+B,mBAAmB;IAAA;IAAA,CAAA5I,cAAA,GAAAoB,CAAA;IAAG;IAAA;IAAAwF;IAAAA;IAAAA;IAAAA,aAAa,EAACG,KAAK,CAACK,QAAQ,CAAC;IACzD,MAAMyB,gBAAgB;IAAA;IAAA,CAAA7I,cAAA,GAAAoB,CAAA,QAAGsH,OAAO,CAAC7E,cAAc,GAAGgD,QAAQ;IAC1D,MAAMiC,UAAU;IAAA;IAAA,CAAA9I,cAAA,GAAAoB,CAAA,QAAGwH,mBAAmB,GAAGC,gBAAgB;IACzD,MAAME,OAAO;IAAA;IAAA,CAAA/I,cAAA,GAAAoB,CAAA;IAAG;IAAA;IAAAiG;IAAAA;IAAAA;IAAAA,UAAU,EAACyB,UAAU,CAAC;IACtC,IAAIE,aAAa;IAAA;IAAA,CAAAhJ,cAAA,GAAAoB,CAAA,QAAG,GAAGsH,OAAO,CAAC/E,WAAW,MAAM+E,OAAO,CAAC5E,KAAK,EAAE;IAAC;IAAA9D,cAAA,GAAAoB,CAAA;IAChE4H,aAAa,IAAI,SAASN,OAAO,CAAC7E,cAAc,SAASkF,OAAO,EAAE;IAAC;IAAA/I,cAAA,GAAAoB,CAAA;IACnE,IAAIsH,OAAO,CAAC/E,WAAW,CAACsF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAAA;MAAAlJ,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACxD4H,aAAa,IAAI,4BAA4BL,eAAe,IAAIzC,YAAY,GAAG;IACjF,CAAC;IAAA;IAAA;MAAAlG,cAAA,GAAAsB,CAAA;IAAA;;IAED;IACA,IAAI6H,WAAW;IAAA;IAAA,CAAAnJ,cAAA,GAAAoB,CAAA,QAAGqF,WAAW,CAAClB,OAAO,GAAGrC,YAAY,CAAC;IACrD,IAAIkG,YAAY;IAAA;IAAA,CAAApJ,cAAA,GAAAoB,CAAA,QAAGqF,WAAW,CAAClB,OAAO,GAAGpC,aAAa,CAAC;IACvD,IAAIkG,YAAY;IAAA;IAAA,CAAArJ,cAAA,GAAAoB,CAAA,QAAGoH,QAAQ;IAAC;IAAAxI,cAAA,GAAAoB,CAAA;IAC5B,IAAIoE,OAAO,EAAE;MAAA;MAAAxF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACX+H,WAAW,GAAG1C,WAAW,CAAC0C,WAAW,GAAG7F,kBAAkB,CAAC;MAAC;MAAAtD,cAAA,GAAAoB,CAAA;MAC5DgI,YAAY,GAAG3C,WAAW,CAAC2C,YAAY,GAAG9F,kBAAkB,CAAC;MAAC;MAAAtD,cAAA,GAAAoB,CAAA;MAC9DiI,YAAY,GAAG5C,WAAW,CAAC+B,QAAQ,GAAGlF,kBAAkB,CAAC;IAC3D,CAAC;IAAA;IAAA;MAAAtD,cAAA,GAAAsB,CAAA;IAAA;IACD,MAAMgI,UAAU;IAAA;IAAA,CAAAtJ,cAAA,GAAAoB,CAAA,SAAG,oBACjB2F,KAAK,CAACI,KAAK,SACJiC,YAAY,IAAIlD,YAAY,UAAU9C,YAAY,GAAG,GAAG,SAAS;IAE1E,IAAImG,IAAkB;IAAC;IAAAvJ,cAAA,GAAAoB,CAAA;IACvB,IAAIyE,IAAI,KAAKrB,KAAK,EAAE;MAAA;MAAAxE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAClBmI,IAAI,GAAG,CACL;QACEtI,IAAI,EAAE,UAAU;QAChBuI,IAAI,EAAEtD,YAAY;QAClBX,OAAO,EAAEkB,WAAW,CAACR,cAAc,CAAC;QACpCK,UAAU,EAAE;UAAEkD,IAAI,EAAEtD,YAAY;UAAEuD,IAAI,EAAE1C,KAAK,CAACG;QAAS;MACzD,CAAC,CACF;IACH,CAAC,MAAM;MAAA;MAAAlH,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACLmI,IAAI,GAAG,CACL;QACEtI,IAAI,EAAE,MAAM;QACZuI,IAAI,EAAEtD,YAAY;QAClBX,OAAO,EAAE4D,WAAW;QACpB7C,UAAU,EAAE;UAAEkD,IAAI,EAAEtD,YAAY;UAAEuD,IAAI,EAAE1C,KAAK,CAACC;QAAK;MACrD,CAAC,EACD;QACE/F,IAAI,EAAE,UAAU;QAChBuI,IAAI,EAAEtD,YAAY;QAClBX,OAAO,EAAEoD,eAAe;QACxBrC,UAAU,EAAE;UAAEkD,IAAI,EAAEtD,YAAY;UAAEuD,IAAI,EAAE1C,KAAK,CAACK;QAAS,CAAC;QACxDtD,KAAK,EAAEkF;MACT,CAAC,EACD;QACE/H,IAAI,EAAE,OAAO;QACbuI,IAAI,EAAEtD,YAAY;QAClBX,OAAO,EAAE6D,YAAY;QACrB9C,UAAU,EAAE;UAAEkD,IAAI,EAAEtD,YAAY;UAAEuD,IAAI;UAAE;UAAA;UAAApC;UAAAA;UAAAA;UAAAA,UAAU,EAACE,WAAW;QAAE,CAAC;QACjEzD,KAAK,EAAEwF;MACT,CAAC,EACD;QACErI,IAAI,EAAE,MAAM;QACZuI,IAAI,EAAEtD,YAAY;QAClBX,OAAO,EAAE8D,YAAY;QACrB/C,UAAU,EAAE;UAAEkD,IAAI,EAAEtD,YAAY;UAAEuD,IAAI,EAAE1C,KAAK,CAACG;QAAS;MACzD,CAAC,CACF;IACH;IAEA,MAAMwC,aAAa;IAAA;IAAA,CAAA1J,cAAA,GAAAoB,CAAA,SAAGqF,WAAW,CAAC8C,IAAI,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEhI,CAAC,KAAK;MAAA;MAAA5B,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAAwI,GAAG,GAAGhI,CAAC,CAAC2D,OAAO;IAAD,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9E,MAAMsE,UAAU;IAAA;IAAA,CAAA7J,cAAA,GAAAoB,CAAA,SAAGqG,cAAc;IAAA;IAAA,CAAAzH,cAAA,GAAAsB,CAAA,WAAG,qBAAqB;IAAA;IAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAG,gBAAgB;IAC5E,MAAMwC,KAAK;IAAA;IAAA,CAAA9D,cAAA,GAAAoB,CAAA,SACTyE,IAAI,KAAKrB,KAAK;IAAA;IAAA,CAAAxE,cAAA,GAAAsB,CAAA,WACVuI,UAAU;IAAA;IAAA,CAAA7J,cAAA,GAAAsB,CAAA,WACV,GAAGmE,KAAK,SAASD,OAAO;IAAA;IAAA,CAAAxF,cAAA,GAAAsB,CAAA,WAAG,YAAY;IAAA;IAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAG,EAAE,GAAE;IAAC;IAAAtB,cAAA,GAAAoB,CAAA;IAErD,OAAO;MACL0I,UAAU,EAAEjE,IAAI;MAChB6D,aAAa;MACbF,IAAI,EAAEtD,YAAY;MAClBqD,IAAI;MACJ9D,KAAK;MACL3B;IACF,CAAC;EACH,CAAC,CAAC;EAEF,MAAMiG,aAAa;EAAA;EAAA,CAAA/J,cAAA,GAAAoB,CAAA,SAAGoF,WAAW;EAAA;EAAA,CAAAxG,cAAA,GAAAsB,CAAA,WAC7BiH,QAAQ,CAAClE,GAAG,CAAEwB,IAAI,IAAM;IAAA;IAAA7F,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAAA,iCAAAmB,aAAA,CAAAA,aAAA,KACnBsD,IAAI;MACP0D,IAAI,EAAE1D,IAAI,CAAC0D,IAAI,CAAClF,GAAG,CAAEzC,CAAC,IACpB;QAAA;QAAA5B,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAoF,WAAW,CAAC5E,CAAC,CAACX,IAAI,CAAC;QAAA;QAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAAiB,aAAA,CAAAA,aAAA,KAAQX,CAAC;UAAEoI,GAAG,EAAExD,WAAW,CAAC5E,CAAC,CAACX,IAAI;QAAE;QAAA;QAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAKM,CAAC;MAAD,CAC9D;IAAC;EACH,CAAE,CAAC;EAAA;EAAA,CAAA5B,cAAA,GAAAsB,CAAA,WACHiH,QAAQ;EAAC;EAAAvI,cAAA,GAAAoB,CAAA;EAEb,OAAO;IAAEoD,KAAK;IAAE+D,QAAQ,EAAEwB,aAAa;IAAEjG,KAAK,EAAE;EAAwB,CAAC;AAC3E","ignoreList":[]}