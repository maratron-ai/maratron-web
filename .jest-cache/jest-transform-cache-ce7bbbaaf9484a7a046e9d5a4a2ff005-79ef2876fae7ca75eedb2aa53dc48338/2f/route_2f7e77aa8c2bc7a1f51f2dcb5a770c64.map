{"version":3,"names":["cov_2njtc0zfdd","actualCoverage","NextResponse","prisma","FEED_POST_LIMIT","GET","req","f","userId","s","nextUrl","searchParams","get","b","json","error","status","viewerProfile","socialProfile","findUnique","where","select","id","followed","follow","findMany","follower","followingId","ids","map","push","posts","runPost","socialProfileId","in","groupId","include","user","avatarUrl","_count","likes","comments","orderBy","createdAt","take","mapped","p","distance","time","caption","photoUrl","updatedAt","likeCount","commentCount","liked","length","err","console"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\nimport { FEED_POST_LIMIT } from \"@lib/socialLimits\";\n\nexport async function GET(req: NextRequest) {\n  const userId = req.nextUrl.searchParams.get(\"userId\");\n  if (!userId) {\n    return NextResponse.json({ error: \"userId required\" }, { status: 400 });\n  }\n  try {\n    const viewerProfile = await prisma.socialProfile.findUnique({\n      where: { userId },\n      select: { id: true },\n    });\n    const followed = await prisma.follow.findMany({\n      where: { follower: { userId } },\n      select: { followingId: true },\n    });\n    const ids = followed.map((f) => f.followingId);\n    if (viewerProfile) ids.push(viewerProfile.id);\n    const posts = await prisma.runPost.findMany({\n      where: {\n        socialProfileId: { in: ids },\n        groupId: null,\n      },\n      include: {\n        socialProfile: {\n          include: { user: { select: { avatarUrl: true } } },\n        },\n        _count: { select: { likes: true, comments: true } },\n        likes: {\n          where: { socialProfile: { userId } },\n          select: { id: true },\n        },\n      },\n      orderBy: { createdAt: \"desc\" },\n      take: FEED_POST_LIMIT,\n    });\n\n    const mapped = posts.map((p) => ({\n      id: p.id,\n      socialProfileId: p.socialProfileId,\n      distance: p.distance,\n      time: p.time,\n      caption: p.caption,\n      photoUrl: p.photoUrl,\n      createdAt: p.createdAt,\n      updatedAt: p.updatedAt,\n      socialProfile: p.socialProfile,\n      likeCount: p._count.likes,\n      commentCount: p._count.comments,\n      liked: p.likes.length > 0,\n    }));\n\n    return NextResponse.json(mapped);\n  } catch (err) {\n    console.error(\"Error fetching feed\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,SAAsBE,YAAY,QAAQ,aAAa;AACvD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,OAAO,eAAeC,GAAGA,CAACC,GAAgB,EAAE;EAAA;EAAAN,cAAA,GAAAO,CAAA;EAC1C,MAAMC,MAAM;EAAA;EAAA,CAAAR,cAAA,GAAAS,CAAA,OAAGH,GAAG,CAACI,OAAO,CAACC,YAAY,CAACC,GAAG,CAAC,QAAQ,CAAC;EAAC;EAAAZ,cAAA,GAAAS,CAAA;EACtD,IAAI,CAACD,MAAM,EAAE;IAAA;IAAAR,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAS,CAAA;IACX,OAAOP,YAAY,CAACY,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACzE,CAAC;EAAA;EAAA;IAAAhB,cAAA,GAAAa,CAAA;EAAA;EAAAb,cAAA,GAAAS,CAAA;EACD,IAAI;IACF,MAAMQ,aAAa;IAAA;IAAA,CAAAjB,cAAA,GAAAS,CAAA,OAAG,MAAMN,MAAM,CAACe,aAAa,CAACC,UAAU,CAAC;MAC1DC,KAAK,EAAE;QAAEZ;MAAO,CAAC;MACjBa,MAAM,EAAE;QAAEC,EAAE,EAAE;MAAK;IACrB,CAAC,CAAC;IACF,MAAMC,QAAQ;IAAA;IAAA,CAAAvB,cAAA,GAAAS,CAAA,OAAG,MAAMN,MAAM,CAACqB,MAAM,CAACC,QAAQ,CAAC;MAC5CL,KAAK,EAAE;QAAEM,QAAQ,EAAE;UAAElB;QAAO;MAAE,CAAC;MAC/Ba,MAAM,EAAE;QAAEM,WAAW,EAAE;MAAK;IAC9B,CAAC,CAAC;IACF,MAAMC,GAAG;IAAA;IAAA,CAAA5B,cAAA,GAAAS,CAAA,OAAGc,QAAQ,CAACM,GAAG,CAAEtB,CAAC,IAAK;MAAA;MAAAP,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAS,CAAA;MAAA,OAAAF,CAAC,CAACoB,WAAW;IAAD,CAAC,CAAC;IAAC;IAAA3B,cAAA,GAAAS,CAAA;IAC/C,IAAIQ,aAAa,EAAE;MAAA;MAAAjB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAS,CAAA;MAAAmB,GAAG,CAACE,IAAI,CAACb,aAAa,CAACK,EAAE,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAtB,cAAA,GAAAa,CAAA;IAAA;IAC9C,MAAMkB,KAAK;IAAA;IAAA,CAAA/B,cAAA,GAAAS,CAAA,QAAG,MAAMN,MAAM,CAAC6B,OAAO,CAACP,QAAQ,CAAC;MAC1CL,KAAK,EAAE;QACLa,eAAe,EAAE;UAAEC,EAAE,EAAEN;QAAI,CAAC;QAC5BO,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPlB,aAAa,EAAE;UACbkB,OAAO,EAAE;YAAEC,IAAI,EAAE;cAAEhB,MAAM,EAAE;gBAAEiB,SAAS,EAAE;cAAK;YAAE;UAAE;QACnD,CAAC;QACDC,MAAM,EAAE;UAAElB,MAAM,EAAE;YAAEmB,KAAK,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAK;QAAE,CAAC;QACnDD,KAAK,EAAE;UACLpB,KAAK,EAAE;YAAEF,aAAa,EAAE;cAAEV;YAAO;UAAE,CAAC;UACpCa,MAAM,EAAE;YAAEC,EAAE,EAAE;UAAK;QACrB;MACF,CAAC;MACDoB,OAAO,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAC;MAC9BC,IAAI,EAAExC;IACR,CAAC,CAAC;IAEF,MAAMyC,MAAM;IAAA;IAAA,CAAA7C,cAAA,GAAAS,CAAA,QAAGsB,KAAK,CAACF,GAAG,CAAEiB,CAAC,IAAM;MAAA;MAAA9C,cAAA,GAAAO,CAAA;MAAAP,cAAA,GAAAS,CAAA;MAAA;QAC/Ba,EAAE,EAAEwB,CAAC,CAACxB,EAAE;QACRW,eAAe,EAAEa,CAAC,CAACb,eAAe;QAClCc,QAAQ,EAAED,CAAC,CAACC,QAAQ;QACpBC,IAAI,EAAEF,CAAC,CAACE,IAAI;QACZC,OAAO,EAAEH,CAAC,CAACG,OAAO;QAClBC,QAAQ,EAAEJ,CAAC,CAACI,QAAQ;QACpBP,SAAS,EAAEG,CAAC,CAACH,SAAS;QACtBQ,SAAS,EAAEL,CAAC,CAACK,SAAS;QACtBjC,aAAa,EAAE4B,CAAC,CAAC5B,aAAa;QAC9BkC,SAAS,EAAEN,CAAC,CAACP,MAAM,CAACC,KAAK;QACzBa,YAAY,EAAEP,CAAC,CAACP,MAAM,CAACE,QAAQ;QAC/Ba,KAAK,EAAER,CAAC,CAACN,KAAK,CAACe,MAAM,GAAG;MAC1B,CAAC;IAAD,CAAE,CAAC;IAAC;IAAAvD,cAAA,GAAAS,CAAA;IAEJ,OAAOP,YAAY,CAACY,IAAI,CAAC+B,MAAM,CAAC;EAClC,CAAC,CAAC,OAAOW,GAAG,EAAE;IAAA;IAAAxD,cAAA,GAAAS,CAAA;IACZgD,OAAO,CAAC1C,KAAK,CAAC,qBAAqB,EAAEyC,GAAG,CAAC;IAAC;IAAAxD,cAAA,GAAAS,CAAA;IAC1C,OAAOP,YAAY,CAACY,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAChE;AACF","ignoreList":[]}