{"version":3,"names":["cov_1o7pqmftfz","actualCoverage","NextResponse","prisma","PROFILE_POST_LIMIT","GET","_req","ctx","f","params","s","username","profile","socialProfile","findUnique","where","b","json","error","status","posts","runPost","findMany","socialProfileId","id","include","_count","select","likes","comments","orderBy","createdAt","take","err","console"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { prisma } from \"@lib/prisma\";\nimport { PROFILE_POST_LIMIT } from \"@lib/socialLimits\";\n\nexport async function GET(_req: NextRequest, ctx: { params: Promise<{ username: string }> }) {\n  const params = await ctx.params;\n  const { username } = params;\n  try {\n    const profile = await prisma.socialProfile.findUnique({ where: { username } });\n    if (!profile) return NextResponse.json({ error: \"Not found\" }, { status: 404 });\n    const posts = await prisma.runPost.findMany({\n      where: { socialProfileId: profile.id },\n      include: { _count: { select: { likes: true, comments: true } } },\n      orderBy: { createdAt: \"desc\" },\n      take: PROFILE_POST_LIMIT,\n    });\n    return NextResponse.json(posts);\n  } catch (err) {\n    console.error(\"Error fetching posts\", err);\n    return NextResponse.json({ error: \"Failed\" }, { status: 500 });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,SAAsBE,YAAY,QAAQ,aAAa;AACvD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,kBAAkB,QAAQ,mBAAmB;AAEtD,OAAO,eAAeC,GAAGA,CAACC,IAAiB,EAAEC,GAA8C,EAAE;EAAA;EAAAP,cAAA,GAAAQ,CAAA;EAC3F,MAAMC,MAAM;EAAA;EAAA,CAAAT,cAAA,GAAAU,CAAA,OAAG,MAAMH,GAAG,CAACE,MAAM;EAC/B,MAAM;IAAEE;EAAS,CAAC;EAAA;EAAA,CAAAX,cAAA,GAAAU,CAAA,OAAGD,MAAM;EAAC;EAAAT,cAAA,GAAAU,CAAA;EAC5B,IAAI;IACF,MAAME,OAAO;IAAA;IAAA,CAAAZ,cAAA,GAAAU,CAAA,OAAG,MAAMP,MAAM,CAACU,aAAa,CAACC,UAAU,CAAC;MAAEC,KAAK,EAAE;QAAEJ;MAAS;IAAE,CAAC,CAAC;IAAC;IAAAX,cAAA,GAAAU,CAAA;IAC/E,IAAI,CAACE,OAAO,EAAE;MAAA;MAAAZ,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAU,CAAA;MAAA,OAAOR,YAAY,CAACe,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAY,CAAC,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAC,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAnB,cAAA,GAAAgB,CAAA;IAAA;IAChF,MAAMI,KAAK;IAAA;IAAA,CAAApB,cAAA,GAAAU,CAAA,OAAG,MAAMP,MAAM,CAACkB,OAAO,CAACC,QAAQ,CAAC;MAC1CP,KAAK,EAAE;QAAEQ,eAAe,EAAEX,OAAO,CAACY;MAAG,CAAC;MACtCC,OAAO,EAAE;QAAEC,MAAM,EAAE;UAAEC,MAAM,EAAE;YAAEC,KAAK,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAK;QAAE;MAAE,CAAC;MAChEC,OAAO,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAC;MAC9BC,IAAI,EAAE5B;IACR,CAAC,CAAC;IAAC;IAAAJ,cAAA,GAAAU,CAAA;IACH,OAAOR,YAAY,CAACe,IAAI,CAACG,KAAK,CAAC;EACjC,CAAC,CAAC,OAAOa,GAAG,EAAE;IAAA;IAAAjC,cAAA,GAAAU,CAAA;IACZwB,OAAO,CAAChB,KAAK,CAAC,sBAAsB,EAAEe,GAAG,CAAC;IAAC;IAAAjC,cAAA,GAAAU,CAAA;IAC3C,OAAOR,YAAY,CAACe,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAChE;AACF","ignoreList":[]}